commit fa4d897046d7b010f1ee946435fbd4c7c2e89389
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Mon Jan 24 09:28:46 2011 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Mon Jan 24 09:28:46 2011 -0800

(C# 3) Remove the old STViz port

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 7514]

diff --git a/STViz/App.xaml b/STViz/App.xaml
deleted file mode 100644
index 46d25cc..0000000
--- a/STViz/App.xaml
+++ /dev/null
@@ -1,7 +0,0 @@
-﻿<Application x:Class="STViz.App"
-    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
-    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
-    <Application.Resources>
-
-    </Application.Resources>
-</Application>
diff --git a/STViz/App.xaml.cs b/STViz/App.xaml.cs
deleted file mode 100644
index c12462e..0000000
--- a/STViz/App.xaml.cs
+++ /dev/null
@@ -1,50 +0,0 @@
-﻿/*
- * [The "BSD licence"]
- * Copyright (c) 2005-2008 Terence Parr
- * All rights reserved.
- *
- * Conversion to C#:
- * Copyright (c) 2008-2009 Sam Harwell
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in the
- *    documentation and/or other materials provided with the distribution.
- * 3. The name of the author may not be used to endorse or promote products
- *    derived from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
- * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
- * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
- * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-
-namespace STViz
-{
-    using System;
-    using System.Collections.Generic;
-    using System.Configuration;
-    using System.Data;
-    using System.Linq;
-    using System.Windows;
-
-    public partial class App : Application
-    {
-        protected override void OnStartup(StartupEventArgs e)
-        {
-            MainWindow = new TemplateVisualizer();
-            MainWindow.Show();
-        }
-    }
-}
diff --git a/STViz/Properties/AssemblyInfo.cs b/STViz/Properties/AssemblyInfo.cs
deleted file mode 100644
index bbc26ed..0000000
--- a/STViz/Properties/AssemblyInfo.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-﻿/*
- * [The "BSD licence"]
- * Copyright (c) 2005-2008 Terence Parr
- * All rights reserved.
- *
- * Conversion to C#:
- * Copyright (c) 2008-2009 Sam Harwell
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in the
- *    documentation and/or other materials provided with the distribution.
- * 3. The name of the author may not be used to endorse or promote products
- *    derived from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
- * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
- * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
- * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-
-using System.Reflection;
-using System.Resources;
-using System.Runtime.CompilerServices;
-using System.Runtime.InteropServices;
-using System.Windows;
-
-// General Information about an assembly is controlled through the following
-// set of attributes. Change these attribute values to modify the information
-// associated with an assembly.
-[assembly: AssemblyTitle("STViz")]
-[assembly: AssemblyDescription("")]
-[assembly: AssemblyConfiguration("")]
-[assembly: AssemblyCompany("Sam Harwell")]
-[assembly: AssemblyProduct("STViz")]
-[assembly: AssemblyCopyright("Copyright © Sam Harwell 2009")]
-[assembly: AssemblyTrademark("")]
-[assembly: AssemblyCulture("")]
-
-// Setting ComVisible to false makes the types in this assembly not visible
-// to COM components.  If you need to access a type in this assembly from
-// COM, set the ComVisible attribute to true on that type.
-[assembly: ComVisible(false)]
-
-//In order to begin building localizable applications, set
-//<UICulture>CultureYouAreCodingWith</UICulture> in your .csproj file
-//inside a <PropertyGroup>.  For example, if you are using US english
-//in your source files, set the <UICulture> to en-US.  Then uncomment
-//the NeutralResourceLanguage attribute below.  Update the "en-US" in
-//the line below to match the UICulture setting in the project file.
-
-//[assembly: NeutralResourcesLanguage("en-US", UltimateResourceFallbackLocation.Satellite)]
-
-
-[assembly: ThemeInfo(
-    ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located
-    //(used if a resource is not found in the page,
-    // or application resource dictionaries)
-    ResourceDictionaryLocation.SourceAssembly //where the generic resource dictionary is located
-    //(used if a resource is not found in the page,
-    // app, or any theme specific resource dictionaries)
-)]
-
-
-// Version information for an assembly consists of the following four values:
-//
-//      Major Version
-//      Minor Version
-//      Build Number
-//      Revision
-//
-// You can specify all the values or you can default the Build and Revision Numbers
-// by using the '*' as shown below:
-// [assembly: AssemblyVersion("1.0.*")]
-[assembly: AssemblyVersion("1.0.0.0")]
-[assembly: AssemblyFileVersion("1.0.0.0")]
diff --git a/STViz/Properties/Resources.Designer.cs b/STViz/Properties/Resources.Designer.cs
deleted file mode 100644
index c449d45..0000000
--- a/STViz/Properties/Resources.Designer.cs
+++ /dev/null
@@ -1,71 +0,0 @@
-﻿//------------------------------------------------------------------------------
-// <auto-generated>
-//     This code was generated by a tool.
-//     Runtime Version:2.0.50727.4927
-//
-//     Changes to this file may cause incorrect behavior and will be lost if
-//     the code is regenerated.
-// </auto-generated>
-//------------------------------------------------------------------------------
-
-namespace STViz.Properties
-{
-
-
-    /// <summary>
-    ///   A strongly-typed resource class, for looking up localized strings, etc.
-    /// </summary>
-    // This class was auto-generated by the StronglyTypedResourceBuilder
-    // class via a tool like ResGen or Visual Studio.
-    // To add or remove a member, edit your .ResX file then rerun ResGen
-    // with the /str option, or rebuild your VS project.
-    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
-    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
-    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
-    internal class Resources
-    {
-
-        private static global::System.Resources.ResourceManager resourceMan;
-
-        private static global::System.Globalization.CultureInfo resourceCulture;
-
-        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
-        internal Resources()
-        {
-        }
-
-        /// <summary>
-        ///   Returns the cached ResourceManager instance used by this class.
-        /// </summary>
-        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
-        internal static global::System.Resources.ResourceManager ResourceManager
-        {
-            get
-            {
-                if ((resourceMan == null))
-                {
-                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("STViz.Properties.Resources", typeof(Resources).Assembly);
-                    resourceMan = temp;
-                }
-                return resourceMan;
-            }
-        }
-
-        /// <summary>
-        ///   Overrides the current thread's CurrentUICulture property for all
-        ///   resource lookups using this strongly typed resource class.
-        /// </summary>
-        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
-        internal static global::System.Globalization.CultureInfo Culture
-        {
-            get
-            {
-                return resourceCulture;
-            }
-            set
-            {
-                resourceCulture = value;
-            }
-        }
-    }
-}
diff --git a/STViz/Properties/Resources.resx b/STViz/Properties/Resources.resx
deleted file mode 100644
index af7dbeb..0000000
--- a/STViz/Properties/Resources.resx
+++ /dev/null
@@ -1,117 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<root>
-  <!--
-    Microsoft ResX Schema
-
-    Version 2.0
-
-    The primary goals of this format is to allow a simple XML format
-    that is mostly human readable. The generation and parsing of the
-    various data types are done through the TypeConverter classes
-    associated with the data types.
-
-    Example:
-
-    ... ado.net/XML headers & schema ...
-    <resheader name="resmimetype">text/microsoft-resx</resheader>
-    <resheader name="version">2.0</resheader>
-    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
-    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
-    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
-    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
-    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
-        <value>[base64 mime encoded serialized .NET Framework object]</value>
-    </data>
-    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
-        <comment>This is a comment</comment>
-    </data>
-
-    There are any number of "resheader" rows that contain simple
-    name/value pairs.
-
-    Each data row contains a name, and value. The row also contains a
-    type or mimetype. Type corresponds to a .NET class that support
-    text/value conversion through the TypeConverter architecture.
-    Classes that don't support this are serialized and stored with the
-    mimetype set.
-
-    The mimetype is used for serialized objects, and tells the
-    ResXResourceReader how to depersist the object. This is currently not
-    extensible. For a given mimetype the value must be set accordingly:
-
-    Note - application/x-microsoft.net.object.binary.base64 is the format
-    that the ResXResourceWriter will generate, however the reader can
-    read any of the formats listed below.
-
-    mimetype: application/x-microsoft.net.object.binary.base64
-    value   : The object must be serialized with
-            : System.Serialization.Formatters.Binary.BinaryFormatter
-            : and then encoded with base64 encoding.
-
-    mimetype: application/x-microsoft.net.object.soap.base64
-    value   : The object must be serialized with
-            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
-            : and then encoded with base64 encoding.
-
-    mimetype: application/x-microsoft.net.object.bytearray.base64
-    value   : The object must be serialized into a byte array
-            : using a System.ComponentModel.TypeConverter
-            : and then encoded with base64 encoding.
-    -->
-  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
-    <xsd:element name="root" msdata:IsDataSet="true">
-      <xsd:complexType>
-        <xsd:choice maxOccurs="unbounded">
-          <xsd:element name="metadata">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" />
-              </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" />
-              <xsd:attribute name="type" type="xsd:string" />
-              <xsd:attribute name="mimetype" type="xsd:string" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="assembly">
-            <xsd:complexType>
-              <xsd:attribute name="alias" type="xsd:string" />
-              <xsd:attribute name="name" type="xsd:string" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="data">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
-                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
-              </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
-              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
-              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="resheader">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
-              </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" use="required" />
-            </xsd:complexType>
-          </xsd:element>
-        </xsd:choice>
-      </xsd:complexType>
-    </xsd:element>
-  </xsd:schema>
-  <resheader name="resmimetype">
-    <value>text/microsoft-resx</value>
-  </resheader>
-  <resheader name="version">
-    <value>2.0</value>
-  </resheader>
-  <resheader name="reader">
-    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
-  </resheader>
-  <resheader name="writer">
-    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
-  </resheader>
-</root>
\ No newline at end of file
diff --git a/STViz/Properties/Settings.Designer.cs b/STViz/Properties/Settings.Designer.cs
deleted file mode 100644
index 7e58346..0000000
--- a/STViz/Properties/Settings.Designer.cs
+++ /dev/null
@@ -1,30 +0,0 @@
-﻿//------------------------------------------------------------------------------
-// <auto-generated>
-//     This code was generated by a tool.
-//     Runtime Version:2.0.50727.4927
-//
-//     Changes to this file may cause incorrect behavior and will be lost if
-//     the code is regenerated.
-// </auto-generated>
-//------------------------------------------------------------------------------
-
-namespace STViz.Properties
-{
-
-
-    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
-    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
-    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
-    {
-
-        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
-
-        public static Settings Default
-        {
-            get
-            {
-                return defaultInstance;
-            }
-        }
-    }
-}
diff --git a/STViz/Properties/Settings.settings b/STViz/Properties/Settings.settings
deleted file mode 100644
index 033d7a5..0000000
--- a/STViz/Properties/Settings.settings
+++ /dev/null
@@ -1,7 +0,0 @@
-﻿<?xml version='1.0' encoding='utf-8'?>
-<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
-  <Profiles>
-    <Profile Name="(Default)" />
-  </Profiles>
-  <Settings />
-</SettingsFile>
\ No newline at end of file
diff --git a/STViz/STViz.csproj b/STViz/STViz.csproj
deleted file mode 100644
index 346714d..0000000
--- a/STViz/STViz.csproj
+++ /dev/null
@@ -1,120 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <PropertyGroup>
-    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
-    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
-    <ProductVersion>9.0.30729</ProductVersion>
-    <SchemaVersion>2.0</SchemaVersion>
-    <ProjectGuid>{C6D89C2E-A3AB-4E68-B6B6-C7AEF363BDFA}</ProjectGuid>
-    <OutputType>WinExe</OutputType>
-    <AppDesignerFolder>Properties</AppDesignerFolder>
-    <RootNamespace>STViz</RootNamespace>
-    <AssemblyName>STViz</AssemblyName>
-    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
-    <FileAlignment>512</FileAlignment>
-    <ProjectTypeGuids>{60dc8134-eba5-43b8-bcc9-bb4bc16c2548};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
-    <WarningLevel>4</WarningLevel>
-    <SignAssembly>true</SignAssembly>
-    <AssemblyOriginatorKeyFile>..\Antlr3\Key.snk</AssemblyOriginatorKeyFile>
-    <SccProjectName>Perforce Project</SccProjectName>
-    <SccLocalPath>..\..\..</SccLocalPath>
-    <SccAuxPath>
-    </SccAuxPath>
-    <SccProvider>MSSCCI:Perforce SCM</SccProvider>
-  </PropertyGroup>
-  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
-    <DebugSymbols>true</DebugSymbols>
-    <DebugType>full</DebugType>
-    <Optimize>false</Optimize>
-    <OutputPath>bin\Debug\</OutputPath>
-    <DefineConstants>DEBUG;TRACE</DefineConstants>
-    <ErrorReport>prompt</ErrorReport>
-    <WarningLevel>4</WarningLevel>
-  </PropertyGroup>
-  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
-    <DebugType>pdbonly</DebugType>
-    <Optimize>true</Optimize>
-    <OutputPath>bin\Release\</OutputPath>
-    <DefineConstants>TRACE</DefineConstants>
-    <ErrorReport>prompt</ErrorReport>
-    <WarningLevel>4</WarningLevel>
-  </PropertyGroup>
-  <ItemGroup>
-    <Reference Include="System" />
-    <Reference Include="System.Core">
-      <RequiredTargetFramework>3.5</RequiredTargetFramework>
-    </Reference>
-    <Reference Include="System.Xml.Linq">
-      <RequiredTargetFramework>3.5</RequiredTargetFramework>
-    </Reference>
-    <Reference Include="System.Data.DataSetExtensions">
-      <RequiredTargetFramework>3.5</RequiredTargetFramework>
-    </Reference>
-    <Reference Include="System.Data" />
-    <Reference Include="System.Xml" />
-    <Reference Include="WindowsBase" />
-    <Reference Include="PresentationCore" />
-    <Reference Include="PresentationFramework" />
-  </ItemGroup>
-  <ItemGroup>
-    <ApplicationDefinition Include="App.xaml">
-      <Generator>MSBuild:Compile</Generator>
-      <SubType>Designer</SubType>
-    </ApplicationDefinition>
-    <Compile Include="App.xaml.cs">
-      <DependentUpon>App.xaml</DependentUpon>
-      <SubType>Code</SubType>
-    </Compile>
-  </ItemGroup>
-  <ItemGroup>
-    <Compile Include="Properties\AssemblyInfo.cs">
-      <SubType>Code</SubType>
-    </Compile>
-    <Compile Include="Properties\Resources.Designer.cs">
-      <AutoGen>True</AutoGen>
-      <DesignTime>True</DesignTime>
-      <DependentUpon>Resources.resx</DependentUpon>
-    </Compile>
-    <Compile Include="Properties\Settings.Designer.cs">
-      <AutoGen>True</AutoGen>
-      <DependentUpon>Settings.settings</DependentUpon>
-      <DesignTimeSharedInput>True</DesignTimeSharedInput>
-    </Compile>
-    <Compile Include="TemplateVisualizer.xaml.cs">
-      <DependentUpon>TemplateVisualizer.xaml</DependentUpon>
-    </Compile>
-    <EmbeddedResource Include="Properties\Resources.resx">
-      <Generator>ResXFileCodeGenerator</Generator>
-      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
-    </EmbeddedResource>
-    <None Include="..\Antlr3\Key.snk">
-      <Link>Key.snk</Link>
-    </None>
-    <None Include="app.config" />
-    <None Include="Properties\Settings.settings">
-      <Generator>SettingsSingleFileGenerator</Generator>
-      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
-    </None>
-    <AppDesigner Include="Properties\" />
-  </ItemGroup>
-  <ItemGroup>
-    <ProjectReference Include="..\StringTemplate4\StringTemplate4.csproj">
-      <Project>{BBE5D9E6-2F4C-46EF-8CDB-17F886A36837}</Project>
-      <Name>StringTemplate4</Name>
-    </ProjectReference>
-  </ItemGroup>
-  <ItemGroup>
-    <Page Include="TemplateVisualizer.xaml">
-      <Generator>MSBuild:Compile</Generator>
-      <SubType>Designer</SubType>
-    </Page>
-  </ItemGroup>
-  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
-  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
-       Other similar extension points exist, see Microsoft.Common.targets.
-  <Target Name="BeforeBuild">
-  </Target>
-  <Target Name="AfterBuild">
-  </Target>
-  -->
-</Project>
\ No newline at end of file
diff --git a/STViz/STViz.csproj.vspscc b/STViz/STViz.csproj.vspscc
deleted file mode 100644
index 98e25f5..0000000
--- a/STViz/STViz.csproj.vspscc
+++ /dev/null
@@ -1,10 +0,0 @@
-﻿""
-{
-"FILE_VERSION" = "9237"
-"ENLISTMENT_CHOICE" = "NEVER"
-"PROJECT_FILE_RELATIVE_PATH" = "relative:antlrcs\\main\\STViz"
-"NUMBER_OF_EXCLUDED_FILES" = "0"
-"ORIGINAL_PROJECT_FILE_PATH" = ""
-"NUMBER_OF_NESTED_PROJECTS" = "0"
-"SOURCE_CONTROL_SETTINGS_PROVIDER" = "PROJECT"
-}
diff --git a/STViz/TemplateVisualizer.xaml b/STViz/TemplateVisualizer.xaml
deleted file mode 100644
index 028ee63..0000000
--- a/STViz/TemplateVisualizer.xaml
+++ /dev/null
@@ -1,54 +0,0 @@
-﻿<Window x:Class="STViz.TemplateVisualizer"
-    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
-    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
-    Title="StringTemplate Visualizer" Height="522" Width="591">
-
-    <Window.Resources>
-        <DataTemplate x:Key="AttributeListItemTemplate">
-            <TextBlock><TextBlock Text="{Binding Key}" /><Run> = </Run><TextBlock Text="{Binding Value}" /></TextBlock>
-        </DataTemplate>
-
-        <DataTemplate x:Key="TemplateStackListItemTemplate">
-            <TextBlock Text="{Binding Name}" />
-        </DataTemplate>
-
-        <HierarchicalDataTemplate x:Key="TemplateEventsItemTemplate" ItemsSource="{Binding Path=Template.InterpreterEvents}">
-            <TextBlock Text="{Binding Template.Name}" />
-        </HierarchicalDataTemplate>
-    </Window.Resources>
-
-    <DockPanel>
-        <Menu Height="22" Name="menu1" VerticalAlignment="Top" DockPanel.Dock="Top">
-            <MenuItem Header="File">
-                <MenuItem Header="Save" />
-            </MenuItem>
-            <MenuItem Header="Edit">
-                <MenuItem Header="Copy" />
-            </MenuItem>
-        </Menu>
-        <Grid Name="grid1">
-            <RichTextBox Margin="204,6,6,171" Name="txtOutput" IsReadOnly="True" Height="285" Width="359" />
-            <ListBox Margin="6,0,0,6" Name="lstAttributes" DataContext="{Binding ElementName=templatesTree, Path=SelectedItem, Mode=OneWay}" ItemsSource="{Binding Path=Template.Attributes}" ItemTemplate="{StaticResource AttributeListItemTemplate}" Height="217" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="192" />
-            <TreeView Margin="6,6,0,229" Name="templatesTree" ItemsSource="{Binding}" ItemTemplate="{StaticResource TemplateEventsItemTemplate}" HorizontalAlignment="Left" Width="192" SelectedItemChanged="OnTemplatesTreeSelectedItemChanged" />
-            <TabControl Height="159" Margin="204,0,6,6" Name="tabControl1" VerticalAlignment="Bottom">
-                <TabItem Header="template" Name="tabItem1">
-                        <RichTextBox Name="txtTemplate" IsReadOnly="True" VerticalScrollBarVisibility="Auto" DataContextChanged="OnTextTemplateDataContextChanged">
-                            <RichTextBox.DataContext>
-                                <Binding ElementName="templatesTree" Path="SelectedItem" Mode="OneWay" />
-                                <!--<Binding ElementName="templatesTree" Path="SelectedValue" />-->
-                            </RichTextBox.DataContext>
-                            <!--<RichTextBox.>
-                    <Binding Path="CompiledTemplate.Template" Mode="OneWay"/>
-                </RichTextBox.Text>-->
-                        </RichTextBox>
-                </TabItem>
-                <TabItem Header="stack trace" >
-                    <ListBox Name="lstStack" DataContext="{Binding ElementName=templatesTree, Path=SelectedItem, Mode=OneWay}" ItemsSource="{Binding Path=Template.EnclosingInstanceStack}" ItemTemplate="{StaticResource TemplateStackListItemTemplate}" />
-                </TabItem>
-                <TabItem Header="bytecode">
-                    <TextBox DataContext="{Binding ElementName=templatesTree, Path=SelectedItem, Mode=OneWay}" Text="{Binding Mode=OneWay, Path=Template.CompiledTemplate.Disassembly}" IsReadOnly="True" VerticalScrollBarVisibility="Auto" />
-                </TabItem>
-            </TabControl>
-        </Grid>
-    </DockPanel>
-</Window>
diff --git a/STViz/TemplateVisualizer.xaml.cs b/STViz/TemplateVisualizer.xaml.cs
deleted file mode 100644
index 912529c..0000000
--- a/STViz/TemplateVisualizer.xaml.cs
+++ /dev/null
@@ -1,155 +0,0 @@
-﻿/*
- * [The "BSD licence"]
- * Copyright (c) 2005-2008 Terence Parr
- * All rights reserved.
- *
- * Conversion to C#:
- * Copyright (c) 2008-2009 Sam Harwell
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in the
- *    documentation and/or other materials provided with the distribution.
- * 3. The name of the author may not be used to endorse or promote products
- *    derived from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
- * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
- * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
- * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-
-namespace STViz
-{
-    using System;
-    using System.Collections.Generic;
-    using System.Windows;
-    using StringTemplate;
-    using File = System.IO.File;
-    using Path = System.IO.Path;
-    using StringWriter = System.IO.StringWriter;
-    using System.Windows.Documents;
-    using System.Windows.Media;
-    using StringTemplate.Debug;
-
-    public partial class TemplateVisualizer : Window
-    {
-        internal TemplateVisualizer()
-        {
-            InitializeComponent();
-
-            StringWriter sw = new StringWriter();
-            var template = CreateDefaultTemplate();
-            Interpreter interp = new Interpreter(template.groupThatCreatedThisInstance);
-            interp.Exec(new AutoIndentWriter(sw), template);
-            IList<InterpEvent> events = interp.Events;
-
-            string text = sw.ToString();
-            templatesTree.Items.Add(new RootEvent(template, 0, text.Length));
-            txtOutput.Document = new FlowDocument(new Paragraph(new Run(text)));
-        }
-
-        public TemplateVisualizer(DebugTemplate template, string output, List<InterpEvent> allEvents, List<TemplateMessage> errors)
-        {
-            InitializeComponent();
-
-            templatesTree.Items.Add(new RootEvent(template, 0, output.Length));
-            txtOutput.Document = new FlowDocument(new Paragraph(new Run(output)));
-        }
-
-        private static DebugTemplate CreateDefaultTemplate()
-        {
-            string templates =
-                "method(type,name,args,stats) ::= <<\n" +
-                "public <type> <ick()> <name>(<args:{a| int <a>}; separator=\", \">) {\n" +
-                "    <if(locals)>int locals[<locals>];<endif>\n" +
-                "    <stats;separator=\"\\n\">\n" +
-                "}\n" +
-                ">>\n" +
-                "assign(a,b) ::= \"<a> = <b> <a,b:{foo}>;\"\n" +
-                "return(x) ::= <<return <x>;>>\n" +
-                "paren(x) ::= \"(<x>)\"\n";
-
-            string tmpdir = Path.GetTempPath();
-            File.WriteAllText(Path.Combine(tmpdir, "t.stg"), templates);
-            TemplateGroup group = new TemplateGroupFile(Path.Combine(tmpdir, "t.stg"));
-            group.Debug = true;
-            DebugTemplate st = (DebugTemplate)group.GetInstanceOf("method");
-            st.code.Dump();
-            st.Add("type", "float");
-            st.Add("name", "foo");
-            st.Add("locals", 3);
-            st.Add("args", new String[] { "x", "y", "z" });
-            Template s1 = group.GetInstanceOf("assign");
-            Template paren = group.GetInstanceOf("paren");
-            paren.Add("x", "x");
-            s1.Add("a", paren);
-            s1.Add("b", "y");
-            Template s2 = group.GetInstanceOf("assign");
-            s2.Add("a", "y");
-            s2.Add("b", "z");
-            Template s3 = group.GetInstanceOf("return");
-            s3.Add("x", "3.14159");
-            st.Add("stats", s1);
-            st.Add("stats", s2);
-            st.Add("stats", s3);
-
-            return st;
-        }
-
-        private void OnTextTemplateDataContextChanged(object sender, DependencyPropertyChangedEventArgs e)
-        {
-            txtTemplate.Document.Blocks.Clear();
-
-            InterpEvent templateEvent = e.NewValue as InterpEvent;
-            if (templateEvent == null)
-                return;
-
-            Template template = templateEvent.Template;
-            if (template != null)
-            {
-                txtTemplate.Document.Blocks.Add(new Paragraph(new Run(template.CompiledTemplate.Template)));
-                if (template.IsSubtemplate)
-                {
-                    Highlight(txtTemplate.Document, template.CompiledTemplate.embeddedStart, template.CompiledTemplate.embeddedStop - template.CompiledTemplate.embeddedStart + 1);
-                }
-            }
-        }
-
-        private static void Highlight(FlowDocument document, int start, int length)
-        {
-            var range = new TextRange(document.ContentStart, document.ContentEnd);
-            range.ClearAllProperties();
-            range = new TextRange(document.ContentStart.GetPositionAtOffset(start + 2), document.ContentStart.GetPositionAtOffset(start + length + 2));
-            range.ApplyPropertyValue(TextElement.BackgroundProperty, Brushes.LightGray);
-        }
-
-        private void OnTemplatesTreeSelectedItemChanged(object sender, RoutedPropertyChangedEventArgs<object> e)
-        {
-            InterpEvent debugEvent = e.NewValue as InterpEvent;
-            if (debugEvent == null)
-                return;
-
-            Highlight(txtOutput.Document, debugEvent.Start, debugEvent.Stop - debugEvent.Start + 1);
-        }
-
-        private class RootEvent : InterpEvent
-        {
-            public RootEvent(DebugTemplate template, int start, int stop)
-                : base(template, start, stop)
-            {
-            }
-        }
-    }
-}
diff --git a/STViz/app.config b/STViz/app.config
deleted file mode 100644
index 49cc43e..0000000
--- a/STViz/app.config
+++ /dev/null
@@ -1,3 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8" ?>
-<configuration>
-</configuration>
\ No newline at end of file

