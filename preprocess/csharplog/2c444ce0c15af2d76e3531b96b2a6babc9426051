commit 2c444ce0c15af2d76e3531b96b2a6babc9426051
Author:     Sam Harwell <sam@tunnelvisionlabs.com>
AuthorDate: Fri Aug 9 23:32:54 2013 -0500
Commit:     Sam Harwell <sam@tunnelvisionlabs.com>
CommitDate: Fri Aug 9 23:57:16 2013 -0500

Remove the -XdbgST feature from the Release build configuration, which removes the Antlr3.exe dependency on WPF and allows its use on Mono (fixes #17)

diff --git a/Antlr3/AntlrTool.cs b/Antlr3/AntlrTool.cs
index a96f036..f9d88f7 100644
--- a/Antlr3/AntlrTool.cs
+++ b/Antlr3/AntlrTool.cs
@@ -364,9 +364,11 @@ namespace Antlr3
internalOption_watchNFAConversion = true;
break;

+#if DEBUG
case "-XdbgST":
CodeGenerator.LaunchTemplateInspector = true;
break;
+#endif

case "-Xmaxinlinedfastates":
if (i + 1 >= args.Length)
@@ -971,7 +973,9 @@ namespace Antlr3
Console.Error.WriteLine("  -Xnomergestopstates     do not merge stop states");
Console.Error.WriteLine("  -Xdfaverbose            generate DFA states in DOT with NFA configs");
Console.Error.WriteLine("  -Xwatchconversion       print a message for each NFA before converting");
+#if DEBUG
Console.Error.WriteLine("  -XdbgST                 put tags at start/stop of all templates in output");
+#endif
Console.Error.WriteLine("  -Xnfastates             for nondeterminisms, list NFA states for each path");
Console.Error.WriteLine("  -Xm m                   max number of rule invocations during conversion           [" + NFAContext.MAX_SAME_RULE_INVOCATIONS_PER_NFA_CONFIG_STACK + "]");
Console.Error.WriteLine("  -Xmaxdfaedges m         max \"comfortable\" number of edges for single DFA state     [" + DFA.MAX_STATE_TRANSITIONS_FOR_TABLE + "]");
diff --git a/Antlr3/Codegen/CodeGenerator.cs b/Antlr3/Codegen/CodeGenerator.cs
index c3b9f68..c45163c 100644
--- a/Antlr3/Codegen/CodeGenerator.cs
+++ b/Antlr3/Codegen/CodeGenerator.cs
@@ -37,7 +37,9 @@ namespace Antlr3.Codegen
using Antlr3.Analysis;
using Antlr3.Extensions;
using Antlr3.Grammars;
+#if DEBUG
using Antlr4.StringTemplate.Visualizer.Extensions;
+#endif

using Activator = System.Activator;
using ANTLRLexer = Antlr3.Grammars.ANTLRLexer;
@@ -121,7 +123,9 @@ namespace Antlr3.Codegen
public static int MaxSwitchCaseLabels = DefaultMaxSwitchCaseLabels;
public static int MinSwitchAlts = DefaultMinSwitchAlts;
public static int MaxAcyclicDfaStatesInline = DefaultMaxAcyclicDfaStatesInline;
+#if DEBUG
public static bool LaunchTemplateInspector = false;
+#endif

public bool GenerateSwitchesWhenPossible = true;

@@ -597,7 +601,9 @@ namespace Antlr3.Codegen
if (string.IsNullOrEmpty(name) && superGroup == null)
{
TemplateGroup group = new ToolTemplateGroupFile(groupFileName);
+#if DEBUG
group.TrackCreationEvents = CodeGenerator.LaunchTemplateInspector;
+#endif
group.IterateAcrossValues = true;
_coreTemplates[language] = group;
return group;
@@ -605,7 +611,9 @@ namespace Antlr3.Codegen
else
{
TemplateGroup group = new ToolTemplateGroupFile(groupFileName);
+#if DEBUG
group.TrackCreationEvents = CodeGenerator.LaunchTemplateInspector;
+#endif
group.IterateAcrossValues = true;
group.ImportTemplates(superGroup);

@@ -835,12 +843,14 @@ namespace Antlr3.Codegen
if (ErrorManager.GetErrorState().errors > 0)
return null;

+#if DEBUG
if (CodeGenerator.LaunchTemplateInspector)
{
outputFileST.Visualize();
if (_templates.IsDefined("headerFile"))
headerFileST.Visualize();
}
+#endif

// WRITE FILES
try
diff --git a/bin/prep/prepare.ps1 b/bin/prep/prepare.ps1
index 4f06fa2..8de575a 100644
--- a/bin/prep/prepare.ps1
+++ b/bin/prep/prepare.ps1
@@ -8,6 +8,7 @@ if (!(Test-Path $SolutionPath)) {
}

$BuildConfig = "Release"
+$DebugBuild = false

# clean up from any previous builds
$CleanItems = "Runtime", "Tool", "Bootstrap", "ST3", "ST4"
@@ -35,7 +36,13 @@ $ArchivePath = ".\Backup\Bootstrap-" + [System.IO.Path]::GetFileNameWithoutExten
.\7z.exe a -r $ArchivePath "..\Bootstrap\*"

# copy the new bootstrap files
-$BootstrapBinaries = "Antlr3.exe", "Antlr3.exe.config", "Antlr3.Runtime.dll", "Antlr3.Runtime.Debug.dll", "Antlr4.StringTemplate.dll", "Antlr4.StringTemplate.Visualizer.dll", "Antlr3.targets", "Antlr3.props", "AntlrBuildTask.dll"
+if ($DebugBuild) {
+  $BootstrapBinaries = "Antlr3.exe", "Antlr3.exe.config", "Antlr3.Runtime.dll", "Antlr3.Runtime.Debug.dll", "Antlr4.StringTemplate.dll", "Antlr4.StringTemplate.Visualizer.dll", "Antlr3.targets", "Antlr3.props", "AntlrBuildTask.dll"
+}
+else {
+  $BootstrapBinaries = "Antlr3.exe", "Antlr3.exe.config", "Antlr3.Runtime.dll", "Antlr3.Runtime.Debug.dll", "Antlr4.StringTemplate.dll", "Antlr3.targets", "Antlr3.props", "AntlrBuildTask.dll"
+}
+
$BootstrapBinaries | ForEach-Object {
copy -force "..\$BuildConfig\$_" "..\Bootstrap"
if ($LASTEXITCODE -ne 0) {
@@ -114,7 +121,9 @@ copy "..\$BuildConfig\Antlr3.exe.config" ".\Tool"
copy "..\$BuildConfig\Antlr3.Runtime.dll" ".\Tool"
copy "..\$BuildConfig\Antlr3.Runtime.Debug.dll" ".\Tool"
copy "..\$BuildConfig\Antlr4.StringTemplate.dll" ".\Tool"
-copy "..\$BuildConfig\Antlr4.StringTemplate.Visualizer.dll" ".\Tool"
+if ($DebugBuild) {
+  copy "..\$BuildConfig\Antlr4.StringTemplate.Visualizer.dll" ".\Tool"
+}
copy "..\$BuildConfig\Antlr3.props" ".\Tool"
copy "..\$BuildConfig\Antlr3.targets" ".\Tool"
copy "..\$BuildConfig\AntlrBuildTask.dll" ".\Tool"
@@ -127,13 +136,17 @@ copy "..\$BuildConfig\Antlr3.pdb" ".\Tool"
copy "..\$BuildConfig\Antlr3.Runtime.pdb" ".\Tool"
copy "..\$BuildConfig\Antlr3.Runtime.Debug.pdb" ".\Tool"
copy "..\$BuildConfig\Antlr4.StringTemplate.pdb" ".\Tool"
-copy "..\$BuildConfig\Antlr4.StringTemplate.Visualizer.pdb" ".\Tool"
+if ($DebugBuild) {
+  copy "..\$BuildConfig\Antlr4.StringTemplate.Visualizer.pdb" ".\Tool"
+}
copy "..\$BuildConfig\AntlrBuildTask.pdb" ".\Tool"
copy "..\$BuildConfig\Antlr3.xml" ".\Tool"
copy "..\$BuildConfig\Antlr3.Runtime.xml" ".\Tool"
copy "..\$BuildConfig\Antlr3.Runtime.Debug.xml" ".\Tool"
copy "..\$BuildConfig\Antlr4.StringTemplate.xml" ".\Tool"
-copy "..\$BuildConfig\Antlr4.StringTemplate.Visualizer.xml" ".\Tool"
+if ($DebugBuild) {
+  copy "..\$BuildConfig\Antlr4.StringTemplate.Visualizer.xml" ".\Tool"
+}
copy "..\$BuildConfig\AntlrBuildTask.xml" ".\Tool"

mkdir "Tool\Codegen"

