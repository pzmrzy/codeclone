commit 6e420e9767dd0eabcf9d5018fa5526350b72a8a1
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Sun Aug 7 14:36:18 2011 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Sun Aug 7 14:36:18 2011 -0800

(C# 3) Add DebugEvents.IsEarlyEval, use in the visualizer to ignore events from templates rendered independently of the hierarchy being displayed.

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 9029]

diff --git a/Antlr4.StringTemplate.Visualizer/TemplateVisualizerFrame.xaml.cs b/Antlr4.StringTemplate.Visualizer/TemplateVisualizerFrame.xaml.cs
index a208cf4..691dc07 100644
--- a/Antlr4.StringTemplate.Visualizer/TemplateVisualizerFrame.xaml.cs
+++ b/Antlr4.StringTemplate.Visualizer/TemplateVisualizerFrame.xaml.cs
@@ -152,6 +152,9 @@ namespace Antlr4.StringTemplate.Visualizer

foreach (var e in events)
{
+                if (e.Frame.GetDebugState().IsEarlyEval)
+                    continue;
+
if (e.OutputInterval.Contains(position))
return e;
}
diff --git a/Antlr4.StringTemplate/Debug/DebugEvents.cs b/Antlr4.StringTemplate/Debug/DebugEvents.cs
index 7270bd6..c4630c4 100644
--- a/Antlr4.StringTemplate/Debug/DebugEvents.cs
+++ b/Antlr4.StringTemplate/Debug/DebugEvents.cs
@@ -49,11 +49,13 @@ namespace Antlr4.StringTemplate.Debug
*
*  All events get added to the enclosingInstance's event list.
*/
-        public List<InterpEvent> Events = new List<InterpEvent>();
+        public readonly List<InterpEvent> Events = new List<InterpEvent>();

/** All templates evaluated and embedded in this ST. Used
*  for tree view in STViz.
*/
-        public List<EvalTemplateEvent> ChildEvalTemplateEvents = new List<EvalTemplateEvent>();
+        public readonly List<EvalTemplateEvent> ChildEvalTemplateEvents = new List<EvalTemplateEvent>();
+
+        public bool IsEarlyEval = false;
}
}
diff --git a/Antlr4.StringTemplate/Interpreter.cs b/Antlr4.StringTemplate/Interpreter.cs
index f94ea87..85f308c 100644
--- a/Antlr4.StringTemplate/Interpreter.cs
+++ b/Antlr4.StringTemplate/Interpreter.cs
@@ -1294,6 +1294,13 @@ namespace Antlr4.StringTemplate
Interpreter interp = new Interpreter(group, new NoIndentWriter(sw), culture);
interp.WriteObjectNoOptions(self, value, -1, -1);
*/
+
+                if (_debug && !frame.GetDebugState().IsEarlyEval)
+                {
+                    frame = new TemplateFrame(frame.Template, frame);
+                    frame.GetDebugState().IsEarlyEval = true;
+                }
+
WriteObjectNoOptions(new NoIndentWriter(sw), frame, value);

return sw.ToString();
diff --git a/Antlr4.StringTemplate/TemplateFrame.cs b/Antlr4.StringTemplate/TemplateFrame.cs
index b5ab7a1..6250d6e 100644
--- a/Antlr4.StringTemplate/TemplateFrame.cs
+++ b/Antlr4.StringTemplate/TemplateFrame.cs
@@ -50,6 +50,9 @@ namespace Antlr4.StringTemplate
_parent = parent;

_depth = (parent != null) ? parent._depth + 1 : 1;
+
+            if (parent != null && parent._debugState != null && parent._debugState.IsEarlyEval)
+                GetDebugState().IsEarlyEval = true;
}

public Template Template

