commit 47679131a787798b5aa477cbad942d23e119b532
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Mon Mar 16 10:51:10 2009 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Mon Mar 16 10:51:10 2009 -0800

C# Port:
* Merge CL5873,5875,5876,5877,5878

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 5886]

diff --git a/Antlr3/AntlrTool.cs b/Antlr3/AntlrTool.cs
index 2d5a875..389b1da 100644
--- a/Antlr3/AntlrTool.cs
+++ b/Antlr3/AntlrTool.cs
@@ -55,12 +55,12 @@ namespace Antlr3
{
public string VERSION = "3.1.2";
public const string UNINITIALIZED_DIR = "<unset-dir>";
-        private HashSet<string> grammarFileNames = new HashSet<string>();
+        private IList<string> grammarFileNames = new List<string>();
private bool generate_NFA_dot = false;
private bool generate_DFA_dot = false;
private string outputDirectory = ".";
private bool haveOutputDir = false;
-        private string inputDirectory = "";
+        private string inputDirectory;
private string parentGrammarDirectory;
private string grammarOutputDirectory;
private bool haveInputDir = false;
@@ -585,11 +585,11 @@ namespace Antlr3

public virtual void sortGrammarFiles()
{
-            //System.out.println("Grammar names "+getGrammarFileNames());
+            //Console.Out.WriteLine( "Grammar names " + GrammarFileNames );
Graph g = new Graph();
foreach ( string gfile in GrammarFileNames )
{
-                GrammarSpelunker grammar = new GrammarSpelunker( gfile );
+                GrammarSpelunker grammar = new GrammarSpelunker( inputDirectory, gfile );
grammar.parse();
string vocabName = grammar.getTokenVocab();
string grammarName = grammar.getGrammarName();
@@ -601,12 +601,12 @@ namespace Antlr3
}
List<object> sorted = g.Sort();
//Console.Out.WriteLine( "sorted=" + sorted );
-            grammarFileNames.Clear(); // wipe so we can give new ordered list
+            GrammarFileNames.Clear(); // wipe so we can give new ordered list
for ( int i = 0; i < sorted.Count; i++ )
{
string f = (string)sorted[i];
if ( GrammarExtensions.Any( ext => f.EndsWith( ext, StringComparison.OrdinalIgnoreCase ) ) )
-                    grammarFileNames.Add( f );
+                    addGrammarFile( f );
}
//Console.Out.WriteLine( "new grammars=" + grammarFileNames );
}
@@ -1086,16 +1086,12 @@ namespace Antlr3
*
* @return the grammarFileNames
*/
-        public virtual HashSet<string> GrammarFileNames
+        public virtual IList<string> GrammarFileNames
{
get
{
return grammarFileNames;
}
-            set
-            {
-                grammarFileNames = value;
-            }
}

/**
@@ -1401,7 +1397,8 @@ namespace Antlr3

public virtual void addGrammarFile( string grammarFileName )
{
-            grammarFileNames.Add( grammarFileName );
+            if ( !GrammarFileNames.Contains( grammarFileName ) )
+                GrammarFileNames.Add( grammarFileName );
}
}
}
diff --git a/Antlr3/Tool/GrammarSpelunker.cs b/Antlr3/Tool/GrammarSpelunker.cs
index 62d1acf..ece1b97 100644
--- a/Antlr3/Tool/GrammarSpelunker.cs
+++ b/Antlr3/Tool/GrammarSpelunker.cs
@@ -38,6 +38,7 @@ namespace Antlr3.Tool
using Console = System.Console;
#endif
using Exception = System.Exception;
+    using Path = System.IO.Path;
using StringBuilder = System.Text.StringBuilder;
using TextReader = System.IO.TextReader;

@@ -65,10 +66,12 @@ namespace Antlr3.Tool
protected string grammarName;
protected string tokenVocab;
protected string language = "Java"; // default
+        protected string inputDirectory;
protected List<string> importedGrammars;

-        public GrammarSpelunker( string grammarFileName )
+        public GrammarSpelunker( string inputDirectory, string grammarFileName )
{
+            this.inputDirectory = inputDirectory;
this.grammarFileName = grammarFileName;
}

@@ -89,7 +92,11 @@ namespace Antlr3.Tool

public virtual void parse()
{
-            TextReader r = new System.IO.StreamReader( grammarFileName );
+            string fileName = grammarFileName;
+            if ( inputDirectory != null )
+                fileName = Path.Combine( inputDirectory, grammarFileName );
+
+            TextReader r = new System.IO.StreamReader( fileName );
try
{
scanner = new Scanner( r );
@@ -309,7 +316,7 @@ namespace Antlr3.Tool
/** Tester; Give grammar filename as arg */
public static void Main( string[] args )
{
-            GrammarSpelunker g = new GrammarSpelunker( args[0] );
+            GrammarSpelunker g = new GrammarSpelunker( ".", args[0] );
g.parse();
Console.Out.WriteLine( g.grammarModifier + " grammar " + g.grammarName );
Console.Out.WriteLine( "language=" + g.language );

