commit cf4850b1788f697f82b45e2e1d65c46c2507fdf6
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Thu Mar 31 18:21:53 2011 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Thu Mar 31 18:21:53 2011 -0800

(C# 3) Fix a couple compile errors

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 8010]

diff --git a/Antlr3/Grammars/CodeGenTreeWalker.g3 b/Antlr3/Grammars/CodeGenTreeWalker.g3
index d8e3c12..6872cec 100644
--- a/Antlr3/Grammars/CodeGenTreeWalker.g3
+++ b/Antlr3/Grammars/CodeGenTreeWalker.g3
@@ -653,7 +653,7 @@ tree_ returns [StringTemplate code]
if ( state.backtracking == 0 )
{
$code = templates.GetInstanceOf("tree");
-		NFAState afterDOWN = (NFAState)$start.NFATreeDownState.GetTransition(0).target;
+		NFAState afterDOWN = (NFAState)$start.NFATreeDownState.GetTransition(0).Target;
LookaheadSet s = grammar.Look(afterDOWN);
if ( s.Member(Label.UP) ) {
// nullable child list if we can see the UP as the next token
diff --git a/Antlr3/Grammars/TreeToNFAConverter.g3 b/Antlr3/Grammars/TreeToNFAConverter.g3
index b835701..0c6c45e 100644
--- a/Antlr3/Grammars/TreeToNFAConverter.g3
+++ b/Antlr3/Grammars/TreeToNFAConverter.g3
@@ -301,7 +301,7 @@ ebnf returns [StateCluster g=null]
grammar.SetDecisionBlockAST(d, blk);
bg.right.SetDecisionASTNode(eob);
// make block entry state also have same decision for interpreting grammar
-			NFAState altBlockState = (NFAState)$g.left.GetTransition(0).target;
+			NFAState altBlockState = (NFAState)$g.left.GetTransition(0).Target;
altBlockState.SetDecisionASTNode($start);
altBlockState.DecisionNumber = d;
$g.left.DecisionNumber = d; // this is the bypass decision (2 alts)
@@ -323,7 +323,7 @@ ebnf returns [StateCluster g=null]
grammar.SetDecisionBlockAST(d, blk);
bg.right.SetDecisionASTNode(eob);
// make block entry state also have same decision for interpreting grammar
-			NFAState altBlockState = (NFAState)$g.left.GetTransition(0).target;
+			NFAState altBlockState = (NFAState)$g.left.GetTransition(0).Target;
altBlockState.SetDecisionASTNode($start);
altBlockState.DecisionNumber = d;
}
@@ -646,7 +646,7 @@ setElement[IIntSet elements]
|	gset=set
{
Transition setTrans = $gset.g.left.GetTransition(0);
-			elements.AddAll(setTrans.label.Set);
+			elements.AddAll(setTrans.Label.Set);
}

|	^(	NOT {ns=new IntervalSet();}

