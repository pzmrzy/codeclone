commit 04702e2c51a900782c2f12359f75c14afcaf5a8d
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Wed Jan 20 11:50:44 2010 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Wed Jan 20 11:50:44 2010 -0800

C# Port:
* Merge CL6432

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 6576]

diff --git a/Antlr3.Test/ST4/StringTemplateTestBase.cs b/Antlr3.Test/ST4/StringTemplateTestBase.cs
index 1228ac5..3447d57 100644
--- a/Antlr3.Test/ST4/StringTemplateTestBase.cs
+++ b/Antlr3.Test/ST4/StringTemplateTestBase.cs
@@ -35,6 +35,7 @@
public virtual void TestInitialize()
{
TemplateGroup.defaultGroup = new TemplateGroup();
+            StringTemplate.Compiler.TemplateCompiler.subtemplateCount = 0;
}

public void WriteFile(string dir, string fileName, string content)
diff --git a/Antlr3.Test/ST4/TestRuntimeErrors.cs b/Antlr3.Test/ST4/TestRuntimeErrors.cs
index 3fb978d..e5cfc32 100644
--- a/Antlr3.Test/ST4/TestRuntimeErrors.cs
+++ b/Antlr3.Test/ST4/TestRuntimeErrors.cs
@@ -45,12 +45,6 @@ namespace AntlrUnitTests.ST4
[TestClass]
public class TestRuntimeErrors : StringTemplateTestBase
{
-        public override void TestInitialize()
-        {
-            StringTemplate.Compiler.TemplateCompiler.subtemplateCount = 0;
-            base.TestInitialize();
-        }
-
public class UserHiddenName
{
private string name;
diff --git a/Antlr3.Test/ST4/TestSubtemplates.cs b/Antlr3.Test/ST4/TestSubtemplates.cs
index 0279a12..51012e8 100644
--- a/Antlr3.Test/ST4/TestSubtemplates.cs
+++ b/Antlr3.Test/ST4/TestSubtemplates.cs
@@ -158,7 +158,9 @@ namespace AntlrUnitTests.ST4
e.Add("phones", "2");
e.Add("salaries", "big");
e.Add("salaries", "huge");
-            String expecting = "0. Ter@1: big" + newline + "1. Tom@2: huge" + newline;
+            String expecting =
+                "0. Ter@1: big" + newline +
+                "1. Tom@2: huge" + newline;
Assert.AreEqual(expecting, e.Render());
}

@@ -204,10 +206,11 @@ namespace AntlrUnitTests.ST4
e.Add("phones", "1");
e.Add("phones", "2");
e.Add("salaries", "big");
+            e.Render();
+            String errorExpecting = "iterating through 3 arguments but parallel map has 2 formal arguments in context anonymous" + newline;
+            Assert.AreEqual(errorExpecting, errors.ToString());
String expecting = "Ter@1, Tom@2";
Assert.AreEqual(expecting, e.Render());
-            String errorExpecting = "template _sub13's actual and formal argument count does not match in context anonymous" + newline;
-            Assert.AreEqual(errorExpecting, errors.ToString());
}

[TestMethod]
diff --git a/StringTemplate4/ErrorType.cs b/StringTemplate4/ErrorType.cs
index 07ff4a6..2c7130f 100644
--- a/StringTemplate4/ErrorType.cs
+++ b/StringTemplate4/ErrorType.cs
@@ -40,7 +40,7 @@ namespace StringTemplate
//public static readonly ErrorType NoSuchProperty = new ErrorType("{0} doesn't have a {1} property");
public static readonly ErrorType ExpectingSingleArgument = new ErrorType("expecting single arg in template reference {0} (not {1})");
public static readonly ErrorType MissingFormalArguments = new ErrorType("missing argument definitions");
-        public static readonly ErrorType ArgumentCountMismatch = new ErrorType("template {0}'s actual and formal argument count does not match");
+        public static readonly ErrorType ArgumentCountMismatch = new ErrorType("iterating through {0} arguments but parallel map has {1} formal arguments");
public static readonly ErrorType ExpectingString = new ErrorType("function {0} expects a string not {1}");

// COMPILE-TIME SYNTAX/SEMANTIC ERRORS
diff --git a/StringTemplate4/Interpreter.cs b/StringTemplate4/Interpreter.cs
index 57cb402..5313cf6 100644
--- a/StringTemplate4/Interpreter.cs
+++ b/StringTemplate4/Interpreter.cs
@@ -647,7 +647,7 @@ namespace StringTemplate
object[] formalArgumentNames = formalArguments.Keys.ToArray();
if (formalArgumentNames.Length != numAttributes)
{
-                ErrorManager.RuntimeError(self, ErrorType.ArgumentCountMismatch, template.Name);
+                ErrorManager.RuntimeError(self, ErrorType.ArgumentCountMismatch, numAttributes, formalArgumentNames.Length);
// truncate arg list to match smaller size
int shorterSize = Math.Min(formalArgumentNames.Length, numAttributes);
numAttributes = shorterSize;

