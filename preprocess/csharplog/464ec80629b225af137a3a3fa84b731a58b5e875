commit 464ec80629b225af137a3a3fa84b731a58b5e875
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Sun Apr 10 18:11:17 2011 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Sun Apr 10 18:11:17 2011 -0800

(C# 3) CL8147: Fix region overrides

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 8160]

diff --git a/Antlr4.StringTemplate/Compiler/CodeGenerator.g3 b/Antlr4.StringTemplate/Compiler/CodeGenerator.g3
index 6179d38..5bb7088 100644
--- a/Antlr4.StringTemplate/Compiler/CodeGenerator.g3
+++ b/Antlr4.StringTemplate/Compiler/CodeGenerator.g3
@@ -277,9 +277,8 @@ includeExpr
emit2($INCLUDE_REGION,Bytecode.INSTR_NEW,impl.name,0);
}
|	^(INCLUDE_SUPER_REGION ID)	{
-									CompiledTemplate impl =
-										TemplateCompiler.DefineBlankRegion(outermostImpl, $ID.Token);
-									emit2($INCLUDE_SUPER_REGION,Bytecode.INSTR_SUPER_NEW,impl.name,0);
+									string mangled = TemplateGroup.GetMangledRegionName(outermostImpl.name, $ID.Text);
+									emit2($INCLUDE_SUPER_REGION,Bytecode.INSTR_SUPER_NEW,mangled,0);
}
|	primary
;
diff --git a/Antlr4.Test.StringTemplate/TestRegions.cs b/Antlr4.Test.StringTemplate/TestRegions.cs
index 7cfa97d..360377c 100644
--- a/Antlr4.Test.StringTemplate/TestRegions.cs
+++ b/Antlr4.Test.StringTemplate/TestRegions.cs
@@ -280,22 +280,29 @@ namespace Antlr4.Test.StringTemplate
}

[TestMethod]
+        public void TestRegionOverrideRefSuperRegion2Levels()
+        {
+            string g =
+                    "a() ::= \"X<@r()>Y\"\n" +
+                    "@a.r() ::= \"foo\"\n";
+            TemplateGroup group = new TemplateGroupString(g);
+
+            string sub =
+                    "@a.r() ::= \"<@super.r()>2\"\n";
+            TemplateGroup subGroup = new TemplateGroupString(sub);
+            subGroup.ImportTemplates(group);
+
+            Template st = subGroup.GetInstanceOf("a");
+
+            string result = st.Render();
+            string expecting = "Xfoo2Y";
+            Assert.AreEqual(expecting, result);
+        }
+
+        [TestMethod]
public void TestRegionOverrideRefSuperRegion3Levels()
{
string dir = tmpdir;
-            // Bug: This was causing infinite recursion:
-            // GetInstanceOf(super::a)
-            // GetInstanceOf(sub::a)
-            // GetInstanceOf(subsub::a)
-            // GetInstanceOf(subsub::region__a__r)
-            // GetInstanceOf(subsub::super.region__a__r)
-            // GetInstanceOf(subsub::super.region__a__r)
-            // GetInstanceOf(subsub::super.region__a__r)
-            // ...
-            // Somehow, the ref to super in subsub is not moving up the chain
-            // to the @super.r(); oh, i introduced a bug when i put setGroup
-            // into STG.GetInstanceOf()!
-
string g =
"a() ::= \"X<@r()>Y\"" +
"@a.r() ::= \"foo\"" + newline;

