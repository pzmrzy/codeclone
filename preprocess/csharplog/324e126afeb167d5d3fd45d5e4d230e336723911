commit 324e126afeb167d5d3fd45d5e4d230e336723911
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Wed Jun 22 15:59:54 2011 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Wed Jun 22 15:59:54 2011 -0800

(C# 3) Fix a runtime error in the test harness (Console.Error gets closed?)

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 8732]

diff --git a/Antlr4.StringTemplate/Misc/ErrorManager.cs b/Antlr4.StringTemplate/Misc/ErrorManager.cs
index bb7978b..a61051c 100644
--- a/Antlr4.StringTemplate/Misc/ErrorManager.cs
+++ b/Antlr4.StringTemplate/Misc/ErrorManager.cs
@@ -40,7 +40,7 @@ namespace Antlr4.StringTemplate.Misc

public class ErrorManager
{
-        private static ITemplateErrorListener _defaultErrorListener = new TextWriterErrorListener(Console.Error);
+        private static ITemplateErrorListener _defaultErrorListener = new ConsoleErrorListener();

private readonly ITemplateErrorListener _listener;

@@ -171,5 +171,45 @@ namespace Antlr4.StringTemplate.Misc
{
Listener.InternalError(new TemplateMessage(ErrorType.INTERNAL_ERROR, self, e, msg));
}
+
+        private class ConsoleErrorListener : ITemplateErrorListener
+        {
+            public virtual void CompiletimeError(TemplateMessage msg)
+            {
+                Console.Error.WriteLine(msg);
+            }
+
+            public virtual void RuntimeError(TemplateMessage msg)
+            {
+                if (msg.Error != ErrorType.NO_SUCH_PROPERTY)
+                {
+                    // ignore these
+                    Console.Error.WriteLine(msg);
+                }
+            }
+
+            public virtual void IOError(TemplateMessage msg)
+            {
+                Console.Error.WriteLine(msg);
+            }
+
+            public virtual void InternalError(TemplateMessage msg)
+            {
+                Console.Error.WriteLine(msg);
+                // throw new Error("internal error", msg.cause);
+            }
+
+            public virtual void Error(string s)
+            {
+                Error(s, null);
+            }
+
+            public virtual void Error(string s, Exception e)
+            {
+                Console.Error.WriteLine(s);
+                if (e != null)
+                    Console.Error.WriteLine(e.StackTrace);
+            }
+        }
}
}

