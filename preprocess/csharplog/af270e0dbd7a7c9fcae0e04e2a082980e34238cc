commit af270e0dbd7a7c9fcae0e04e2a082980e34238cc
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Mon Jan 31 15:22:55 2011 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Mon Jan 31 15:22:55 2011 -0800

(C# 3) Merge CL7537

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 7587]

diff --git a/Antlr3.Test/Antlr3.Test.csproj b/Antlr3.Test/Antlr3.Test.csproj
index 30d0c4c..6e4bcdc 100644
--- a/Antlr3.Test/Antlr3.Test.csproj
+++ b/Antlr3.Test/Antlr3.Test.csproj
@@ -72,6 +72,7 @@
<Compile Include="TestSets.cs" />
<Compile Include="TestSymbolDefinitions.cs" />
<Compile Include="TestSyntacticPredicateEvaluation.cs" />
+    <Compile Include="TestSyntaxErrors.cs" />
<Compile Include="TestTemplates.cs" />
<Compile Include="TestTokenRewriteStream.cs" />
<Compile Include="TestTopologicalSort.cs" />
diff --git a/Antlr3.Test/TestSyntaxErrors.cs b/Antlr3.Test/TestSyntaxErrors.cs
new file mode 100644
index 0000000..269f68e
--- /dev/null
+++ b/Antlr3.Test/TestSyntaxErrors.cs
@@ -0,0 +1,108 @@
+ï»¿/*
+ * [The "BSD licence"]
+ * Copyright (c) 2011 Terence Parr
+ * All rights reserved.
+ *
+ * Conversion to C#:
+ * Copyright (c) 2011 Sam Harwell, Pixel Mine, Inc.
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. The name of the author may not be used to endorse or promote products
+ *    derived from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+ * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+namespace AntlrUnitTests
+{
+    using Microsoft.VisualStudio.TestTools.UnitTesting;
+
+    using Console = System.Console;
+    using Regex = System.Text.RegularExpressions.Regex;
+
+    [TestClass]
+    public class TestSyntaxErrors : BaseTest
+    {
+        [TestMethod]
+        public void TestLL2()
+        {
+            string grammar =
+                "grammar T;\n" +
+                "a : 'a' 'b'" +
+                "  | 'a' 'c'" +
+                ";\n" +
+                "q : 'e' ;\n";
+            string found = execParser("T.g", grammar, "TParser", "TLexer", "a", "ae", false);
+            string expecting = "input line 1:1 no viable alternative at input 'e'" + NewLine;
+            string result = Regex.Replace(stderrDuringParse, ".*?/input ", "input ");
+            Assert.AreEqual(expecting, result);
+        }
+
+        [TestMethod]
+        public void TestLL3()
+        {
+            string grammar =
+                "grammar T;\n" +
+                "a : 'a' 'b'* 'c'" +
+                "  | 'a' 'b' 'd'" +
+                "  ;\n" +
+                "q : 'e' ;\n";
+            Console.WriteLine(grammar);
+            string found = execParser("T.g", grammar, "TParser", "TLexer", "a", "abe", false);
+            string expecting = "input line 1:2 no viable alternative at input 'e'" + NewLine;
+            string result = Regex.Replace(stderrDuringParse, ".*?/input ", "input ");
+            Assert.AreEqual(expecting, result);
+        }
+
+        [TestMethod]
+        public void TestLLStar()
+        {
+            string grammar =
+                "grammar T;\n" +
+                "a : 'a'+ 'b'" +
+                "  | 'a'+ 'c'" +
+                ";\n" +
+                "q : 'e' ;\n";
+            string found = execParser("T.g", grammar, "TParser", "TLexer", "a", "aaae", false);
+            string expecting = "input line 1:3 no viable alternative at input 'e'" + NewLine;
+            string result = Regex.Replace(stderrDuringParse, ".*?/input ", "input ");
+            Assert.AreEqual(expecting, result);
+        }
+
+        [TestMethod]
+        public void TestSynPred()
+        {
+            string grammar =
+                "grammar T;\n" +
+                "a : (e '.')=> e '.'" +
+                "  | (e ';')=> e ';'" +
+                "  | 'z'" +
+                "  ;\n" +
+                "e : '(' e ')'" +
+                "  | 'i'" +
+                "  ;\n";
+            Console.WriteLine(grammar);
+            string found = execParser("T.g", grammar, "TParser", "TLexer", "a", "((i))z", false);
+            string expecting = "input line 1:5 no viable alternative at input 'z'" + NewLine;
+            string result = Regex.Replace(stderrDuringParse, ".*?/input ", "input ");
+            Assert.AreEqual(expecting, result);
+        }
+    }
+}
diff --git a/Antlr3.vsmdi b/Antlr3.vsmdi
index 48dffab..c242cd6 100644
--- a/Antlr3.vsmdi
+++ b/Antlr3.vsmdi
@@ -856,6 +856,14 @@
<TestLink id="a8400536-b318-34ff-fb5e-65216d673b7a" name="TestSoleArgUsingApplySyntax" storage="antlr4.test.stringtemplate\bin\debug\antlr4.test.stringtemplate.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
</TestLinks>
</TestList>
+  <TestList name="Syntax Errors" id="8574b040-8928-4c86-9ff6-9e1ba4561605" parentListId="8c43106b-9dc1-4907-a29f-aa66a61bf5b6">
+    <TestLinks>
+      <TestLink id="1e931e0c-a0b2-9b4e-a311-00e5c5bdda08" name="TestLL2" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+      <TestLink id="ea3ff6a9-c744-372a-72a8-6d9f6dbdacb2" name="TestLL3" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+      <TestLink id="7843afd0-b0ce-9e28-841a-5bdeb9287422" name="TestLLStar" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+      <TestLink id="a6522a82-07bd-0837-6b84-ee3cb84955e1" name="TestSynPred" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+    </TestLinks>
+  </TestList>
<TestList name="Interpreted lexing" id="8863002f-5b85-4a70-b1bf-bf68c57c9fee" parentListId="8c43106b-9dc1-4907-a29f-aa66a61bf5b6">
<TestLinks>
<TestLink id="13f36ad3-33de-62d4-e805-f3ac6be93277" name="TestMultAltLoop" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

