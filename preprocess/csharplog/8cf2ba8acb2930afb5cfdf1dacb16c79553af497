commit 8cf2ba8acb2930afb5cfdf1dacb16c79553af497
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Fri Jan 21 17:51:45 2011 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Fri Jan 21 17:51:45 2011 -0800

(C# 3) Use Array.Resize where applicable
Use List<FormalArgument> instead of Dictionary<string,FormalArgument> to hold template arguments

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 7490]

diff --git a/Antlr4.StringTemplate/AutoIndentWriter.cs b/Antlr4.StringTemplate/AutoIndentWriter.cs
index 357cc31..2b68b38 100644
--- a/Antlr4.StringTemplate/AutoIndentWriter.cs
+++ b/Antlr4.StringTemplate/AutoIndentWriter.cs
@@ -119,9 +119,7 @@ namespace Antlr4.StringTemplate
{
if ((anchors_sp + 1) >= anchors.Length)
{
-                int[] a = new int[anchors.Length * 2];
-                Array.Copy(anchors, 0, a, 0, anchors.Length - 1);
-                anchors = a;
+                Array.Resize(ref anchors, anchors.Length * 2);
}
anchors_sp++;
anchors[anchors_sp] = charPosition;
diff --git a/Antlr4.StringTemplate/Compiler/CompilationState.cs b/Antlr4.StringTemplate/Compiler/CompilationState.cs
index 0fc35aa..0801e74 100644
--- a/Antlr4.StringTemplate/Compiler/CompilationState.cs
+++ b/Antlr4.StringTemplate/Compiler/CompilationState.cs
@@ -72,8 +72,8 @@ namespace Antlr4.StringTemplate.Compiler
public virtual void refAttr(IToken templateToken, CommonTree id)
{
string name = id.Text;
-            FormalArgument arg;
-            if (impl.formalArguments != null && impl.formalArguments.TryGetValue(name, out arg) && arg != null)
+            FormalArgument arg = impl.TryGetFormalArgument(name);
+            if (arg != null)
{
int index = arg.index;
emit1(id, Bytecode.INSTR_LOAD_LOCAL, index);
@@ -200,12 +200,8 @@ namespace Antlr4.StringTemplate.Compiler
if ((ip + n) >= impl.instrs.Length)
{
// ensure room for full instruction
-                byte[] c = new byte[impl.instrs.Length * 2];
-                Array.Copy(impl.instrs, 0, c, 0, impl.instrs.Length);
-                impl.instrs = c;
-                Interval[] sm = new Interval[impl.sourceMap.Length * 2];
-                Array.Copy(impl.sourceMap, 0, sm, 0, impl.sourceMap.Length);
-                impl.sourceMap = sm;
+                Array.Resize(ref impl.instrs, impl.instrs.Length * 2);
+                Array.Resize(ref impl.sourceMap, impl.sourceMap.Length * 2);
}
}

diff --git a/Antlr4.StringTemplate/Compiler/CompiledTemplate.cs b/Antlr4.StringTemplate/Compiler/CompiledTemplate.cs
index ca988c6..b06980c 100644
--- a/Antlr4.StringTemplate/Compiler/CompiledTemplate.cs
+++ b/Antlr4.StringTemplate/Compiler/CompiledTemplate.cs
@@ -36,8 +36,10 @@ namespace Antlr4.StringTemplate.Compiler
using Antlr.Runtime.Tree;
using Antlr.Runtime;
using Antlr4.StringTemplate.Misc;
+    using System.Linq;
using StringWriter = System.IO.StringWriter;
using Console = System.Console;
+    using ArgumentNullException = System.ArgumentNullException;

/** The result of compiling an ST.  Contains all the bytecode instructions,
*  string table, bytecode address to source code map, and other bookkeeping
@@ -61,7 +63,7 @@ namespace Antlr4.StringTemplate.Compiler
public CommonTree ast;

/** Must be non null map if !noFormalArgs */
-        public IDictionary<string, FormalArgument> formalArguments;
+        public List<FormalArgument> formalArguments;

public bool hasFormalArgs;

@@ -103,6 +105,16 @@ namespace Antlr4.StringTemplate.Compiler
template = "";
}

+        public virtual FormalArgument TryGetFormalArgument(string name)
+        {
+            if (name == null)
+                throw new ArgumentNullException("name");
+            if (formalArguments == null)
+                return null;
+
+            return formalArguments.FirstOrDefault(i => i.name == name);
+        }
+
public virtual void addImplicitlyDefinedTemplate(CompiledST sub)
{
if (implicitlyDefinedTemplates == null)
@@ -116,13 +128,7 @@ namespace Antlr4.StringTemplate.Compiler
if (formalArguments == null)
return 0;

-            int n = 0;
-            foreach (string arg in formalArguments.Keys)
-            {
-                if (formalArguments[arg].defaultValueToken != null)
-                    n++;
-            }
-
+            int n = formalArguments.Count(i => i.defaultValueToken != null);
return n;
}

@@ -131,9 +137,8 @@ namespace Antlr4.StringTemplate.Compiler
if (formalArguments == null)
return;

-            foreach (string a in formalArguments.Keys)
+            foreach (FormalArgument fa in formalArguments)
{
-                FormalArgument fa = formalArguments[a];
if (fa.defaultValueToken != null)
{
string argSTname = fa.name + "_default_value";
@@ -163,10 +168,10 @@ namespace Antlr4.StringTemplate.Compiler
public virtual void addArg(FormalArgument a)
{
if (formalArguments == null)
-                formalArguments = new Dictionary<string, FormalArgument>();
+                formalArguments = new List<FormalArgument>();

a.index = formalArguments.Count;
-            formalArguments[a.name] = a;
+            formalArguments.Add(a);
}

public virtual void defineImplicitlyDefinedTemplates(STGroup group)
diff --git a/Antlr4.StringTemplate/Interpreter.cs b/Antlr4.StringTemplate/Interpreter.cs
index 56189f6..fba76ba 100644
--- a/Antlr4.StringTemplate/Interpreter.cs
+++ b/Antlr4.StringTemplate/Interpreter.cs
@@ -575,7 +575,7 @@ namespace Antlr4.StringTemplate
foreach (string argName in attrs.Keys)
{
// don't let it throw an exception in rawSetAttribute
-                if (!st.impl.formalArguments.ContainsKey(argName))
+                if (!st.impl.formalArguments.Any(i => i.name == argName))
{
errMgr.runTimeError(self, current_ip, ErrorType.NO_SUCH_ATTRIBUTE, argName);
continue;
@@ -610,7 +610,7 @@ namespace Antlr4.StringTemplate
if (st.impl.formalArguments == null)
return;

-            Iterator argNames = st.impl.formalArguments.Keys.iterator();
+            Iterator argNames = st.impl.formalArguments.Select(i => i.name).iterator();
for (int i = 0; i < numToStore; i++)
{
// value to store
@@ -875,7 +875,7 @@ namespace Antlr4.StringTemplate
// ensure arguments line up
int numExprs = exprs.Count;
CompiledST code = prototype.impl;
-            IDictionary<string, FormalArgument> formalArguments = code.formalArguments;
+            List<FormalArgument> formalArguments = code.formalArguments;
if (!code.hasFormalArgs || formalArguments == null)
{
errMgr.runTimeError(self, current_ip, ErrorType.MISSING_FORMAL_ARGUMENTS);
@@ -883,7 +883,7 @@ namespace Antlr4.StringTemplate
}

// todo: track formal args not names for efficient filling of locals
-            object[] formalArgumentNames = formalArguments.Keys.ToArray();
+            object[] formalArgumentNames = formalArguments.Select(i => i.name).ToArray();
int nformalArgs = formalArgumentNames.Length;
if (prototype.isAnonSubtemplate())
nformalArgs -= predefinedAnonSubtemplateAttributes.Count;
@@ -895,9 +895,7 @@ namespace Antlr4.StringTemplate
// truncate arg list to match smaller size
int shorterSize = Math.Min(formalArgumentNames.Length, numExprs);
numExprs = shorterSize;
-                object[] newFormalArgumentNames = new object[shorterSize];
-                Array.Copy(formalArgumentNames, 0, newFormalArgumentNames, 0, shorterSize);
-                formalArgumentNames = newFormalArgumentNames;
+                Array.Resize(ref formalArgumentNames, shorterSize);
}

// keep walking while at least one attribute has values
@@ -1279,7 +1277,7 @@ namespace Antlr4.StringTemplate
{
if (invokedST.impl.formalArguments == null)
return;
-            foreach (FormalArgument arg in invokedST.impl.formalArguments.Values)
+            foreach (FormalArgument arg in invokedST.impl.formalArguments)
{
// if no value for attribute and default arg, inject default arg into self
if (invokedST.locals[arg.index] == ST.EMPTY_ATTR && arg.compiledDefaultValue != null)
diff --git a/Antlr4.StringTemplate/Misc/TemplateDump.cs b/Antlr4.StringTemplate/Misc/TemplateDump.cs
index 9c291da..f3cecf1 100644
--- a/Antlr4.StringTemplate/Misc/TemplateDump.cs
+++ b/Antlr4.StringTemplate/Misc/TemplateDump.cs
@@ -132,7 +132,7 @@ namespace Antlr4.StringTemplate.Misc
buf.Append(self.getName());
buf.Append("(");
if (self.impl.formalArguments != null)
-                buf.Append(string.Join(",", self.impl.formalArguments.Keys.ToArray()));
+                buf.Append(string.Join(",", self.impl.formalArguments.Select(i => i.name).ToArray()));
buf.Append(")@");
buf.Append(GetHashCode());
buf.Append(">");
diff --git a/Antlr4.StringTemplate/Template.cs b/Antlr4.StringTemplate/Template.cs
index 08c1664..a775918 100644
--- a/Antlr4.StringTemplate/Template.cs
+++ b/Antlr4.StringTemplate/Template.cs
@@ -182,18 +182,14 @@ namespace Antlr4.StringTemplate
FormalArgument arg = null;
if (impl.hasFormalArgs)
{
-                if (impl.formalArguments != null)
-                    impl.formalArguments.TryGetValue(name, out arg);
-
+                arg = impl.TryGetFormalArgument(name);
if (arg == null)
throw new ArgumentException("no such attribute: " + name);
}
else
{
// define and make room in locals (a hack to make new ST("simple template") work.)
-                if (impl.formalArguments != null)
-                    impl.formalArguments.TryGetValue(name, out arg);
-
+                arg = impl.TryGetFormalArgument(name);
if (arg == null)
{
// not defined
@@ -252,8 +248,7 @@ namespace Antlr4.StringTemplate
return;
}

-            FormalArgument arg;
-            impl.formalArguments.TryGetValue(name, out arg);
+            FormalArgument arg = impl.TryGetFormalArgument(name);
if (arg == null)
throw new ArgumentException("no such attribute: " + name);

@@ -269,8 +264,7 @@ namespace Antlr4.StringTemplate
if (impl.formalArguments == null)
throw new ArgumentException("no such attribute: " + name);

-            FormalArgument arg;
-            impl.formalArguments.TryGetValue(name, out arg);
+            FormalArgument arg = impl.TryGetFormalArgument(name);
if (arg == null)
throw new ArgumentException("no such attribute: " + name);

@@ -286,10 +280,7 @@ namespace Antlr4.StringTemplate
ST p = this;
while (p != null)
{
-                FormalArgument localArg = null;
-                if (p.impl.formalArguments != null)
-                    p.impl.formalArguments.TryGetValue(name, out localArg);
-
+                FormalArgument localArg = p.impl.TryGetFormalArgument(name);
if (localArg != null)
{
object o = p.locals[localArg.index];
@@ -315,7 +306,7 @@ namespace Antlr4.StringTemplate
return null;

IDictionary<string, object> attributes = new Dictionary<string, object>();
-            foreach (FormalArgument a in impl.formalArguments.Values)
+            foreach (FormalArgument a in impl.formalArguments)
{
object o = locals[a.index];
if (o == ST.EMPTY_ATTR)
diff --git a/Antlr4.StringTemplate/TemplateGroup.cs b/Antlr4.StringTemplate/TemplateGroup.cs
index 79b17f2..3e7dd59 100644
--- a/Antlr4.StringTemplate/TemplateGroup.cs
+++ b/Antlr4.StringTemplate/TemplateGroup.cs
@@ -631,7 +631,7 @@ namespace Antlr4.StringTemplate
buf.Append(name);
buf.Append('(');
if (c.formalArguments != null)
-                    buf.Append(string.Join(",", c.formalArguments.Values.Select(i => i.ToString()).ToArray()));
+                    buf.Append(string.Join(",", c.formalArguments.Select(i => i.ToString()).ToArray()));

buf.Append(')');
buf.Append(" ::= <<" + Environment.NewLine);

