commit df93ccd67c20fbe9ce8103bf09a0d321d648a371
Author:     Sam Harwell <sam@tunnelvisionlabs.com>
AuthorDate: Fri Aug 9 21:02:17 2013 -0500
Commit:     Sam Harwell <sam@tunnelvisionlabs.com>
CommitDate: Fri Aug 9 23:56:22 2013 -0500

Handle cases where InternalPreserveStackTrace does not exist (fixes #4)

diff --git a/Antlr3.StringTemplate/Extensions/ExceptionExtensions.cs b/Antlr3.StringTemplate/Extensions/ExceptionExtensions.cs
index dca7de9..bb4df62 100644
--- a/Antlr3.StringTemplate/Extensions/ExceptionExtensions.cs
+++ b/Antlr3.StringTemplate/Extensions/ExceptionExtensions.cs
@@ -35,16 +35,21 @@ namespace Antlr3.ST.Extensions
using System;

using BindingFlags = System.Reflection.BindingFlags;
+    using MethodInfo = System.Reflection.MethodInfo;
using TextWriter = System.IO.TextWriter;

public static class ExceptionExtensions
{
-        private static readonly Action<Exception> _internalPreserveStackTrace =
-            (Action<Exception>)Delegate.CreateDelegate(
-                typeof(Action<Exception>),
-                typeof(Exception).GetMethod(
-                    "InternalPreserveStackTrace",
-                    BindingFlags.Instance | BindingFlags.NonPublic));
+        private static readonly Action<Exception> _internalPreserveStackTrace = GetInternalPreserveStackTraceDelegate();
+
+        private static Action<Exception> GetInternalPreserveStackTraceDelegate()
+        {
+            MethodInfo methodInfo = typeof(Exception).GetMethod("InternalPreserveStackTrace", BindingFlags.Instance | BindingFlags.NonPublic);
+            if (methodInfo == null)
+                return null;
+
+            return (Action<Exception>)Delegate.CreateDelegate(typeof(Action<Exception>), methodInfo);
+        }

#pragma warning disable 618
public static bool IsCritical(this Exception e)
@@ -65,7 +70,8 @@ namespace Antlr3.ST.Extensions

public static void PreserveStackTrace(this Exception e)
{
-            _internalPreserveStackTrace(e);
+            if (_internalPreserveStackTrace != null)
+                _internalPreserveStackTrace(e);
}

internal static void PrintStackTrace(this Exception e)
diff --git a/Antlr3/Extensions/ExceptionExtensions.cs b/Antlr3/Extensions/ExceptionExtensions.cs
index 88fe742..4c7a184 100644
--- a/Antlr3/Extensions/ExceptionExtensions.cs
+++ b/Antlr3/Extensions/ExceptionExtensions.cs
@@ -36,18 +36,23 @@ namespace Antlr3.Extensions
using System.Linq;

using BindingFlags = System.Reflection.BindingFlags;
+    using MethodInfo = System.Reflection.MethodInfo;
using StackFrame = System.Diagnostics.StackFrame;
using StackTrace = System.Diagnostics.StackTrace;
using TextWriter = System.IO.TextWriter;

public static class ExceptionExtensions
{
-        private static readonly Action<Exception> _internalPreserveStackTrace =
-            (Action<Exception>)Delegate.CreateDelegate(
-                typeof(Action<Exception>),
-                typeof(Exception).GetMethod(
-                    "InternalPreserveStackTrace",
-                    BindingFlags.Instance | BindingFlags.NonPublic));
+        private static readonly Action<Exception> _internalPreserveStackTrace = GetInternalPreserveStackTraceDelegate();
+
+        private static Action<Exception> GetInternalPreserveStackTraceDelegate()
+        {
+            MethodInfo methodInfo = typeof(Exception).GetMethod("InternalPreserveStackTrace", BindingFlags.Instance | BindingFlags.NonPublic);
+            if (methodInfo == null)
+                return null;
+
+            return (Action<Exception>)Delegate.CreateDelegate(typeof(Action<Exception>), methodInfo);
+        }

#pragma warning disable 618
public static bool IsCritical(this Exception e)
@@ -68,7 +73,8 @@ namespace Antlr3.Extensions

public static void PreserveStackTrace(this Exception e)
{
-            _internalPreserveStackTrace(e);
+            if (_internalPreserveStackTrace != null)
+                _internalPreserveStackTrace(e);
}

internal static StackFrame[] GetStackTrace(this Exception e)
diff --git a/Antlr4.StringTemplate/Extensions/ExceptionExtensions.cs b/Antlr4.StringTemplate/Extensions/ExceptionExtensions.cs
index 3bb3b77..ed85cb4 100644
--- a/Antlr4.StringTemplate/Extensions/ExceptionExtensions.cs
+++ b/Antlr4.StringTemplate/Extensions/ExceptionExtensions.cs
@@ -34,15 +34,20 @@ namespace Antlr4.StringTemplate.Extensions
{
using System;
using BindingFlags = System.Reflection.BindingFlags;
+    using MethodInfo = System.Reflection.MethodInfo;

public static class ExceptionExtensions
{
-        private static readonly Action<Exception> _internalPreserveStackTrace =
-            (Action<Exception>)Delegate.CreateDelegate(
-                typeof(Action<Exception>),
-                typeof(Exception).GetMethod(
-                    "InternalPreserveStackTrace",
-                    BindingFlags.Instance | BindingFlags.NonPublic));
+        private static readonly Action<Exception> _internalPreserveStackTrace = GetInternalPreserveStackTraceDelegate();
+
+        private static Action<Exception> GetInternalPreserveStackTraceDelegate()
+        {
+            MethodInfo methodInfo = typeof(Exception).GetMethod("InternalPreserveStackTrace", BindingFlags.Instance | BindingFlags.NonPublic);
+            if (methodInfo == null)
+                return null;
+
+            return (Action<Exception>)Delegate.CreateDelegate(typeof(Action<Exception>), methodInfo);
+        }

#pragma warning disable 618
public static bool IsCritical(this Exception e)
@@ -63,7 +68,8 @@ namespace Antlr4.StringTemplate.Extensions

public static void PreserveStackTrace(this Exception e)
{
-            _internalPreserveStackTrace(e);
+            if (_internalPreserveStackTrace != null)
+                _internalPreserveStackTrace(e);
}
}
}

