commit 4897e17b5b82b7ffb83cbc7d1959127fc74f7179
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Wed Jun 22 16:14:55 2011 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Wed Jun 22 16:14:55 2011 -0800

(C# 3) Merge CL8711, 8715 (fix empty rules not compiling properly)

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 8736]

diff --git a/Antlr3.Test/TestAttributes.cs b/Antlr3.Test/TestAttributes.cs
index 17112e4..676b40d 100644
--- a/Antlr3.Test/TestAttributes.cs
+++ b/Antlr3.Test/TestAttributes.cs
@@ -3145,7 +3145,7 @@ namespace AntlrUnitTests
object chunk = translator.chunks[i];
if ( chunk is StringTemplate )
{
-                    if ( ( (StringTemplate)chunk ).Name.Equals( "scopeSetAttributeRef" ) )
+                    if ( ( (StringTemplate)chunk ).Name.Equals( "/scopeSetAttributeRef" ) )
{
foundScopeSetAttributeRef = true;
}
diff --git a/Antlr3.Test/TestJavaCodeGeneration.cs b/Antlr3.Test/TestJavaCodeGeneration.cs
index bfb018f..47a2e92 100644
--- a/Antlr3.Test/TestJavaCodeGeneration.cs
+++ b/Antlr3.Test/TestJavaCodeGeneration.cs
@@ -158,5 +158,20 @@ namespace AntlrUnitTests
bool expecting = true;
Assert.AreEqual( expecting, found );
}
+
+        [TestMethod]
+        public void TestBlankRuleGetsNoException()
+        {
+            string grammar =
+                "grammar T;\n" +
+                "a : sync (ID sync)* ;\n" +
+                "sync : ;\n" +
+                "ID : 'a'..'z'+;\n";
+            bool found =
+                rawGenerateAndBuildRecognizer(
+                    "T.g", grammar, "TParser", "TLexer", false);
+            bool expecting = true; // should be ok
+            Assert.AreEqual(expecting, found);
+        }
}
}
diff --git a/Antlr3/Grammars/CodeGenTreeWalkerHelper.cs b/Antlr3/Grammars/CodeGenTreeWalkerHelper.cs
index 61db778..c078209 100644
--- a/Antlr3/Grammars/CodeGenTreeWalkerHelper.cs
+++ b/Antlr3/Grammars/CodeGenTreeWalkerHelper.cs
@@ -403,7 +403,7 @@ namespace Antlr3.Grammars
}

code = templates.GetInstanceOf(stName);
-            if (code.Name.Equals("rule"))
+            if (code.Name.Equals("/rule"))
code.SetAttribute("emptyRule", grammar.IsEmptyRule(block2));

code.SetAttribute("ruleDescriptor", ruleDescr);
diff --git a/Antlr3/Tool/Grammar.cs b/Antlr3/Tool/Grammar.cs
index 3d738a1..dec0b45 100644
--- a/Antlr3/Tool/Grammar.cs
+++ b/Antlr3/Tool/Grammar.cs
@@ -2677,7 +2677,7 @@ namespace Antlr3.Tool
}
}

-            return false;
+            return true;
}

public virtual bool IsAtomTokenType( int ttype )

