commit 9a4c6f3828253ee459bd26b0592c6070d25f50ee
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Fri Jun 17 07:08:22 2011 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Fri Jun 17 07:08:22 2011 -0800

(C# 3) Use AST operators instead of rewrite syntax
Simplify a duplicated grammar action

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 8653]

diff --git a/Antlr3/Grammars/ANTLR.g3 b/Antlr3/Grammars/ANTLR.g3
index d6e6120..a7d7f21 100644
--- a/Antlr3/Grammars/ANTLR.g3
+++ b/Antlr3/Grammars/ANTLR.g3
@@ -217,8 +217,7 @@ delegateGrammars
;

delegateGrammar
-	:	lab=id ASSIGN^ g=id {Grammar.ImportGrammar($g.tree, $lab.text);}
-	|	g2=id               {Grammar.ImportGrammar($g2.tree,null);}
+	:	(lab=id ASSIGN^)? g=id {HandleDelegateGrammar($g.start, $lab.text);}
;

tokensSpec
@@ -584,10 +583,8 @@ idList
;

id
-	:	TOKEN_REF
-		-> ID[$TOKEN_REF]
-	|	RULE_REF
-		-> ID[$RULE_REF]
+	:	TOKEN_REF<ID>
+	|	RULE_REF<ID>
;

// R E W R I T E  S Y N T A X
@@ -604,10 +601,9 @@ rewrite_with_sempred
;

rewrite_block
-	:	LPAREN
+	:	LPAREN<type=BLOCK;text="BLOCK">^
rewrite_alternative
-		RPAREN
-		-> ^(BLOCK[$LPAREN,"BLOCK"] rewrite_alternative EOB[$RPAREN,"<end-of-block>"])
+		RPAREN<type=EOB;text="<end-of-block>">
;

rewrite_alternative
@@ -649,7 +645,7 @@ rewrite_atom
;

label
-	:	TOKEN_REF<LABEL> {}
+	:	TOKEN_REF<LABEL>
|	RULE_REF<LABEL>
;

@@ -704,19 +700,17 @@ options{k=1;}

/** -> foo(a={...}, ...) */
rewrite_template_head
-	:	id lp=LPAREN
+	:	id LPAREN<type=TEMPLATE;text="TEMPLATE">^
rewrite_template_args
-		RPAREN
-		-> ^(TEMPLATE[$lp,"TEMPLATE"] id rewrite_template_args)
+		RPAREN!
;

/** -> ({expr})(a={...}, ...) */
rewrite_indirect_template_head
-	:	lp=LPAREN
+	:	LPAREN<type=TEMPLATE;text="TEMPLATE">^
ACTION
-		RPAREN
-		LPAREN rewrite_template_args RPAREN
-		-> ^(TEMPLATE[$lp,"TEMPLATE"] ACTION rewrite_template_args)
+		RPAREN!
+		LPAREN! rewrite_template_args RPAREN!
;

rewrite_template_args
@@ -727,8 +721,7 @@ rewrite_template_args
;

rewrite_template_arg
-	:	id a=ASSIGN ACTION
-		-> ^(ARG[$a,"ARG"] id ACTION)
+	:	id ASSIGN<type=ARG;text="ARG">^ ACTION
;

//////////////////////////////////////////////////////////////////////////////
diff --git a/Antlr3/Grammars/ANTLRParserHelper.cs b/Antlr3/Grammars/ANTLRParserHelper.cs
index 48c1914..60352a0 100644
--- a/Antlr3/Grammars/ANTLRParserHelper.cs
+++ b/Antlr3/Grammars/ANTLRParserHelper.cs
@@ -367,5 +367,10 @@ namespace Antlr3.Grammars
filter != null && filter.Equals( "true" ) );
}
}
+
+        private void HandleDelegateGrammar(IToken grammarName, string label)
+        {
+            Grammar.ImportGrammar(grammarName, label);
+        }
}
}
diff --git a/Antlr3/Tool/Grammar.cs b/Antlr3/Tool/Grammar.cs
index 0730ae5..3d738a1 100644
--- a/Antlr3/Tool/Grammar.cs
+++ b/Antlr3/Tool/Grammar.cs
@@ -2868,9 +2868,9 @@ namespace Antlr3.Tool
*  Do not create NFA here because NFA construction needs to hook up with
*  overridden rules in delegation root grammar.
*/
-        public virtual void ImportGrammar( GrammarAST grammarNameAST, string label )
+        public virtual void ImportGrammar( IToken grammarNameToken, string label )
{
-            string grammarName = grammarNameAST.Text;
+            string grammarName = grammarNameToken.Text;
//JSystem.@out.println("import "+gfile.getName());
string gname = grammarName + GrammarFileExtension;
TextReader br = null;
@@ -2898,7 +2898,7 @@ namespace Antlr3.Tool
{
ErrorManager.GrammarError( ErrorManager.MSG_INVALID_IMPORT,
this,
-                                              grammarNameAST.Token,
+                                              grammarNameToken,
this,
delegateGrammar );
return;
@@ -2909,7 +2909,7 @@ namespace Antlr3.Tool
{
ErrorManager.GrammarError( ErrorManager.MSG_IMPORT_NAME_CLASH,
this,
-                                              grammarNameAST.Token,
+                                              grammarNameToken,
this,
delegateGrammar );
return;

