commit bdd4c2e287d73bea995d25e73bff1574f4424cc6
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Wed Jan 20 18:07:04 2010 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Wed Jan 20 18:07:04 2010 -0800

C# Port:
* Merge 6488

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 6591]

diff --git a/Antlr3.Test/ST4/TestGroups.cs b/Antlr3.Test/ST4/TestGroups.cs
index 087d705..474c58b 100644
--- a/Antlr3.Test/ST4/TestGroups.cs
+++ b/Antlr3.Test/ST4/TestGroups.cs
@@ -333,7 +333,7 @@ namespace AntlrUnitTests.ST4
{
String templates =
"method(fields) ::= <<" + newline +
-                    "<fields:{f | <f:stat()>}>" + newline +  // THIS SHOULD BE ERROR; >1 arg?
+                    "<fields:{f | <f:stat()>}>" + newline +
">>" + newline +
"stat(f,value={<f.name>}) ::= \"x=<value>; // <f.name>\"" + newline
;
diff --git a/Antlr3.Test/ST4/TestInterptimeErrors.cs b/Antlr3.Test/ST4/TestInterptimeErrors.cs
index af0eb1e..44864a9 100644
--- a/Antlr3.Test/ST4/TestInterptimeErrors.cs
+++ b/Antlr3.Test/ST4/TestInterptimeErrors.cs
@@ -173,6 +173,27 @@ namespace AntlrUnitTests.ST4
}

[TestMethod]
+        public void TestPassUnknownAttr()
+        {
+            String templates =
+                "t() ::= \"<u(x={Ter})>\"\n" +
+                "u(y) ::= <<hi <x>!>>\n";
+            ErrorBuffer errors = new ErrorBuffer();
+            ErrorManager.ErrorListener = errors;
+            WriteFile(tmpdir, "t.stg", templates);
+            STGroup group = new STGroupFile(Path.Combine(tmpdir, "t.stg"));
+            ST st = group.GetInstanceOf("t");
+            String expected = "hi Ter!";
+            String result = st.Render();
+            Assert.AreEqual(expected, result);
+
+            // check error now
+            expected = "context [t u] can't set attribute x; template u has no such attribute" + newline;
+            result = errors.ToString();
+            Assert.AreEqual(expected, result);
+        }
+
+        [TestMethod]
public void TestSoleArg()
{
ErrorBuffer errors = new ErrorBuffer();
@@ -192,6 +213,28 @@ namespace AntlrUnitTests.ST4
}

[TestMethod]
+        public void TestSoleArgUsingApplySyntax()
+        {
+            ErrorBuffer errors = new ErrorBuffer();
+            ErrorManager.ErrorListener = errors;
+
+            String templates =
+                "t() ::= \"<{9}:u()>\"\n" +
+                "u(x,y) ::= \"<x>\"\n";
+
+            WriteFile(tmpdir, "t.stg", templates);
+            STGroup group = new STGroupFile(Path.Combine(tmpdir, "t.stg"));
+            ST st = group.GetInstanceOf("t");
+            String expected = "9";
+            String result = st.Render();
+            Assert.AreEqual(expected, result);
+
+            expected = "context [t] 1:1 expecting single arg in template reference u() (not 2 args)" + newline;
+            result = errors.ToString();
+            Assert.AreEqual(expected, result);
+        }
+
+        [TestMethod]
public void TestUndefinedArg()
{
ErrorBuffer errors = new ErrorBuffer();
diff --git a/Antlr3.vsmdi b/Antlr3.vsmdi
index 153aadd..97957a5 100644
--- a/Antlr3.vsmdi
+++ b/Antlr3.vsmdi
@@ -766,18 +766,20 @@
</TestList>
<TestList name="Interptime Errors" id="85574747-5efc-491e-bbfb-7051dc2e7261" parentListId="4adbb104-d28d-4362-8420-a9fefe69c167">
<TestLinks>
+      <TestLink id="a64737d9-209c-c4fe-e2ab-0bd55b6a1f5d" name="TestUndefinedArg" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
<TestLink id="0f4199bb-ac2f-44d2-06a6-2db2b49ee855" name="TestParallelAttributeIterationWithMissingArgs" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
-      <TestLink id="92ee7045-5199-7c37-32e5-98ac7bfe7540" name="TestStringTypeMismatch2" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
<TestLink id="8abfaaf3-3ca5-944a-9200-25268558f952" name="TestHiddenFieldNotError" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
-      <TestLink id="7b8810e3-0af7-a2e4-fdf0-b41b8ae635ac" name="TestParallelAttributeIterationWithMismatchArgListSizes" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
-      <TestLink id="384cd1ed-a801-929e-28e2-dd6664bf0ebd" name="TestHiddenPropertyNotError" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
<TestLink id="1b10d453-ae23-af27-51f5-f3d59b2b98e2" name="TestMissingEmbeddedTemplate" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
-      <TestLink id="a64737d9-209c-c4fe-e2ab-0bd55b6a1f5d" name="TestUndefinedArg" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
-      <TestLink id="aed1c1e7-29f4-3742-d9b0-a0d033c3345f" name="TestStringTypeMismatch" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
<TestLink id="8590099e-9776-bb69-d042-cd4ced293815" name="TestUndefinedArgNoProblemInCompatibilityMode" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
+      <TestLink id="d3f6102c-55db-a96e-3457-70bb66293020" name="TestSoleArgUsingApplySyntax" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
+      <TestLink id="746147eb-c844-cb14-bb5c-a83226aebcf9" name="TestSoleArg" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
<TestLink id="1176685d-ebd0-44cc-00de-f74cd74f114c" name="TestNoPropertyNotError" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
+      <TestLink id="7b8810e3-0af7-a2e4-fdf0-b41b8ae635ac" name="TestParallelAttributeIterationWithMismatchArgListSizes" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
+      <TestLink id="384cd1ed-a801-929e-28e2-dd6664bf0ebd" name="TestHiddenPropertyNotError" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
+      <TestLink id="0d6f29d1-0d3b-e054-fbaa-fe37c86e3936" name="TestPassUnknownAttr" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
+      <TestLink id="92ee7045-5199-7c37-32e5-98ac7bfe7540" name="TestStringTypeMismatch2" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
+      <TestLink id="aed1c1e7-29f4-3742-d9b0-a0d033c3345f" name="TestStringTypeMismatch" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
<TestLink id="98e0aed8-8f07-e829-7703-9ee5bbc63c6e" name="TestMissingSuperTemplate" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
-      <TestLink id="746147eb-c844-cb14-bb5c-a83226aebcf9" name="TestSoleArg" storage="antlr3.test\bin\debug\antlrunittests.dll" type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel,   PublicKeyToken=b03f5f7f11d50a3a" />
</TestLinks>
</TestList>
<TestList name="Interpreted lexing" id="8863002f-5b85-4a70-b1bf-bf68c57c9fee" parentListId="8c43106b-9dc1-4907-a29f-aa66a61bf5b6">
diff --git a/StringTemplate4/Compiler/TemplateParser.g3 b/StringTemplate4/Compiler/TemplateParser.g3
index ec71d23..fff517f 100644
--- a/StringTemplate4/Compiler/TemplateParser.g3
+++ b/StringTemplate4/Compiler/TemplateParser.g3
@@ -263,16 +263,16 @@ option

exprNoComma
:	memberExpr ( ':' templateRef {gen.Emit(Bytecode.INSTR_MAP, $templateRef.start.StartIndex, $templateRef.start.StopIndex);} )?
-	|	subtemplate {gen.Emit(Bytecode.INSTR_NEW, $subtemplate.name.FullName, $subtemplate.start.StartIndex, $subtemplate.start.StopIndex);}
+	//|	subtemplate {gen.Emit(Bytecode.INSTR_NEW, $subtemplate.name.FullName, $subtemplate.start.StartIndex, $subtemplate.start.StopIndex);}
;

expr
:	mapExpr
-	|	// <{...}>
-		subtemplate
-		{
-		var prefixed = PrefixedName($subtemplate.name);
-		gen.Emit(Bytecode.INSTR_NEW, prefixed != null ? prefixed.FullName : null, $subtemplate.start.StartIndex, $subtemplate.stop.StopIndex);}
+	//|	// <{...}>
+	//	subtemplate
+	//	{
+	//	var prefixed = PrefixedName($subtemplate.name);
+	//	gen.Emit(Bytecode.INSTR_NEW, prefixed != null ? prefixed.FullName : null, $subtemplate.start.StartIndex, $subtemplate.stop.StopIndex);}
;

mapExpr
@@ -314,8 +314,9 @@ options {k=2;} // prevent full LL(*), which fails, falling back on k=1; need k=2
;

primary
-	:	o=ID	  {RefAttr($o);}
-	|	STRING    {gen.Emit(Bytecode.INSTR_LOAD_STR, Misc.Strip($STRING.text,1), $STRING.StartIndex, $STRING.StopIndex);}
+	:	o=ID		{RefAttr($o);}
+	|	STRING		{gen.Emit(Bytecode.INSTR_LOAD_STR, Misc.Strip($STRING.text,1), $STRING.StartIndex, $STRING.StopIndex);}
+	|	subtemplate	{gen.Emit(Bytecode.INSTR_NEW, $subtemplate.name.FullName, $subtemplate.start.StartIndex, $subtemplate.stop.StopIndex);}
|	list
|	lp='(' expr rp=')' {gen.Emit(Bytecode.INSTR_TOSTR);}
( {gen.Emit(Bytecode.INSTR_NEW_IND, $lp.StartIndex, $rp.StartIndex);} '(' args? ')' )? // indirect call
diff --git a/StringTemplate4/TemplateRuntimeMessage.cs b/StringTemplate4/TemplateRuntimeMessage.cs
index b3ce3fd..88fde91 100644
--- a/StringTemplate4/TemplateRuntimeMessage.cs
+++ b/StringTemplate4/TemplateRuntimeMessage.cs
@@ -94,7 +94,7 @@ namespace StringTemplate
buf.Append(Template.GetEnclosingInstanceStackString());
buf.Append("]");
}
-            if (loc != null)
+            if (!string.IsNullOrEmpty(loc))
buf.Append(" " + loc);
buf.Append(" " + base.ToString());
return buf.ToString();

