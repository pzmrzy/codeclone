commit f6796cd2e7654de0d1a7e8e1f480515df461074e
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Thu Apr 16 19:08:47 2009 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Thu Apr 16 19:08:47 2009 -0800

C# Port:
* Fix Graph<T> unit test

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 6044]

diff --git a/Antlr3.Test/TestTopologicalSort.cs b/Antlr3.Test/TestTopologicalSort.cs
index a0c0d16..037cac4 100644
--- a/Antlr3.Test/TestTopologicalSort.cs
+++ b/Antlr3.Test/TestTopologicalSort.cs
@@ -56,6 +56,7 @@ namespace AntlrUnitTests
g.AddEdge( "D", "F" );
g.AddEdge( "F", "H" );
g.AddEdge( "E", "F" );
+            g.AddEdge( "G", "A" );

string expecting = "[H, F, E, D, A, G, B, C]";
var nodes = g.Sort();
diff --git a/Antlr3/Misc/Graph.cs b/Antlr3/Misc/Graph.cs
index c122874..684c074 100644
--- a/Antlr3/Misc/Graph.cs
+++ b/Antlr3/Misc/Graph.cs
@@ -36,7 +36,7 @@ namespace Antlr3.Misc

public class Graph<T>
{
-        public class Node
+        protected class Node
{
internal T _payload;
internal List<Node> _edges; // points at which nodes?
@@ -111,7 +111,7 @@ namespace Antlr3.Misc
return sorted;
}

-        public virtual void DFS( Node n, HashSet<Node> visited, List<T> sorted )
+        protected virtual void DFS( Node n, HashSet<Node> visited, List<T> sorted )
{
if ( visited.Contains( n ) )
return;

