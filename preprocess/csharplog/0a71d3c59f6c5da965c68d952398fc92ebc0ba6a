commit 0a71d3c59f6c5da965c68d952398fc92ebc0ba6a
Author:     sharwell <sharwell@pixelminegames.com>
AuthorDate: Wed Feb 9 20:45:29 2011 -0800
Commit:     sharwell <sharwell@pixelminegames.com>
CommitDate: Wed Feb 9 20:45:29 2011 -0800

(C# 3) Make CompiledTemplate.NativeGroup a property

[git-p4: depot-paths = "//depot/code/antlrcs/main/": change = 7660]

diff --git a/Antlr4.StringTemplate.Visualizer/Extensions/TemplateExtensions.cs b/Antlr4.StringTemplate.Visualizer/Extensions/TemplateExtensions.cs
index c566983..e42f318 100644
--- a/Antlr4.StringTemplate.Visualizer/Extensions/TemplateExtensions.cs
+++ b/Antlr4.StringTemplate.Visualizer/Extensions/TemplateExtensions.cs
@@ -46,18 +46,18 @@ namespace Antlr4.StringTemplate.Visualizer.Extensions

public static void Visualize(this DebugTemplate template, int lineWidth)
{
-            Visualize(template, template.impl.nativeGroup.ErrorManager, CultureInfo.CurrentCulture, lineWidth);
+            Visualize(template, template.impl.NativeGroup.ErrorManager, CultureInfo.CurrentCulture, lineWidth);
}

public static void Visualize(this DebugTemplate template, CultureInfo culture)
{
-            Visualize(template, template.impl.nativeGroup.ErrorManager, culture, AutoIndentWriter.NoWrap);
+            Visualize(template, template.impl.NativeGroup.ErrorManager, culture, AutoIndentWriter.NoWrap);
}

public static void Visualize(this DebugTemplate template, ErrorManager errorManager, CultureInfo culture, int lineWidth)
{
ErrorBuffer errors = new ErrorBuffer();
-            template.impl.nativeGroup.Listener = errors;
+            template.impl.NativeGroup.Listener = errors;
StringWriter @out = new StringWriter();
ITemplateWriter wr = new AutoIndentWriter(@out);
wr.LineWidth = lineWidth;
diff --git a/Antlr4.StringTemplate/Compiler/CompiledTemplate.cs b/Antlr4.StringTemplate/Compiler/CompiledTemplate.cs
index d824ea2..3f989d6 100644
--- a/Antlr4.StringTemplate/Compiler/CompiledTemplate.cs
+++ b/Antlr4.StringTemplate/Compiler/CompiledTemplate.cs
@@ -33,13 +33,13 @@
namespace Antlr4.StringTemplate.Compiler
{
using System.Collections.Generic;
-    using Antlr.Runtime.Tree;
+    using System.Linq;
using Antlr.Runtime;
+    using Antlr.Runtime.Tree;
using Antlr4.StringTemplate.Misc;
-    using System.Linq;
-    using StringWriter = System.IO.StringWriter;
-    using Console = System.Console;
using ArgumentNullException = System.ArgumentNullException;
+    using Console = System.Console;
+    using StringWriter = System.IO.StringWriter;

/** The result of compiling an Template.  Contains all the bytecode instructions,
*  string table, bytecode address to source code map, and other bookkeeping
@@ -74,7 +74,7 @@ namespace Antlr4.StringTemplate.Compiler
*  interpretation via Template.ToString().  From there, it becomes field 'group'
*  in interpreter and is fixed until rendering completes.
*/
-        public TemplateGroup nativeGroup = TemplateGroup.defaultGroup;
+        private TemplateGroup _nativeGroup = TemplateGroup.defaultGroup;

/** Does this template come from a &lt;@region&gt;...&lt;@end&gt; embedded in
*  another template?
@@ -105,6 +105,19 @@ namespace Antlr4.StringTemplate.Compiler
template = string.Empty;
}

+        public virtual TemplateGroup NativeGroup
+        {
+            get
+            {
+                return _nativeGroup;
+            }
+
+            set
+            {
+                _nativeGroup = value;
+            }
+        }
+
public virtual string TemplateSource
{
get
diff --git a/Antlr4.StringTemplate/Interpreter.cs b/Antlr4.StringTemplate/Interpreter.cs
index e439759..cf11604 100644
--- a/Antlr4.StringTemplate/Interpreter.cs
+++ b/Antlr4.StringTemplate/Interpreter.cs
@@ -521,7 +521,7 @@ namespace Antlr4.StringTemplate
internal virtual void SuperNew(Template self, string name, int nargs)
{
Template st = null;
-            CompiledTemplate imported = self.impl.nativeGroup.LookupImportedTemplate(name);
+            CompiledTemplate imported = self.impl.NativeGroup.LookupImportedTemplate(name);
if (imported == null)
{
errMgr.RuntimeError(self, current_ip, ErrorType.NO_IMPORTED_TEMPLATE,
@@ -533,7 +533,7 @@ namespace Antlr4.StringTemplate
return;
}

-            st = imported.nativeGroup.CreateStringTemplate();
+            st = imported.NativeGroup.CreateStringTemplate();
st.EnclosingInstance = self; // self invoked super.name()
st.groupThatCreatedThisInstance = group;
st.impl = imported;
@@ -547,7 +547,7 @@ namespace Antlr4.StringTemplate
internal virtual void SuperNew(Template self, string name, IDictionary<string, object> attrs)
{
Template st = null;
-            CompiledTemplate imported = self.impl.nativeGroup.LookupImportedTemplate(name);
+            CompiledTemplate imported = self.impl.NativeGroup.LookupImportedTemplate(name);
if (imported == null)
{
errMgr.RuntimeError(self, current_ip, ErrorType.NO_IMPORTED_TEMPLATE, name);
@@ -557,7 +557,7 @@ namespace Antlr4.StringTemplate
return;
}

-            st = imported.nativeGroup.CreateStringTemplate();
+            st = imported.NativeGroup.CreateStringTemplate();
st.EnclosingInstance = self; // self invoked super.name()
st.groupThatCreatedThisInstance = group;
st.impl = imported;
diff --git a/Antlr4.StringTemplate/Template.cs b/Antlr4.StringTemplate/Template.cs
index b523d45..44b0eec 100644
--- a/Antlr4.StringTemplate/Template.cs
+++ b/Antlr4.StringTemplate/Template.cs
@@ -312,9 +312,9 @@ namespace Antlr4.StringTemplate
p = p.EnclosingInstance;
}
// got to root template and no definition, try dictionaries in group
-            if (impl.nativeGroup.IsDictionary(name))
+            if (impl.NativeGroup.IsDictionary(name))
{
-                return impl.nativeGroup.RawGetDictionary(name);
+                return impl.NativeGroup.RawGetDictionary(name);
}

throw new TemplateNoSuchPropertyException(name);
@@ -430,14 +430,14 @@ namespace Antlr4.StringTemplate

public virtual int Write(ITemplateWriter @out)
{
-            Interpreter interp = new Interpreter(groupThatCreatedThisInstance, impl.nativeGroup.ErrorManager);
+            Interpreter interp = new Interpreter(groupThatCreatedThisInstance, impl.NativeGroup.ErrorManager);
interp.SetDefaultArguments(this);
return interp.Execute(@out, this);
}

public virtual int Write(ITemplateWriter @out, CultureInfo locale)
{
-            Interpreter interp = new Interpreter(groupThatCreatedThisInstance, locale, impl.nativeGroup.ErrorManager);
+            Interpreter interp = new Interpreter(groupThatCreatedThisInstance, locale, impl.NativeGroup.ErrorManager);
interp.SetDefaultArguments(this);
return interp.Execute(@out, this);
}
diff --git a/Antlr4.StringTemplate/TemplateGroup.cs b/Antlr4.StringTemplate/TemplateGroup.cs
index d3ec3b9..36922cc 100644
--- a/Antlr4.StringTemplate/TemplateGroup.cs
+++ b/Antlr4.StringTemplate/TemplateGroup.cs
@@ -494,7 +494,7 @@ namespace Antlr4.StringTemplate
//System.out.println("TemplateGroup.Compile: "+enclosingTemplateName);
TemplateCompiler c = new TemplateCompiler(this);
CompiledTemplate code = c.Compile(srcName, name, args, template, templateToken);
-            code.nativeGroup = this;
+            code.NativeGroup = this;
code.template = template;
return code;
}
diff --git a/Antlr4.Test.StringTemplate/TestCoreBasics.cs b/Antlr4.Test.StringTemplate/TestCoreBasics.cs
index 9ba733d..eff9d55 100644
--- a/Antlr4.Test.StringTemplate/TestCoreBasics.cs
+++ b/Antlr4.Test.StringTemplate/TestCoreBasics.cs
@@ -256,7 +256,7 @@ namespace Antlr4.Test.StringTemplate
{
string template = "Load <box()>;";
Template st = new Template(template);
-            st.impl.nativeGroup.DefineTemplate("box", "kewl\ndaddy");
+            st.impl.NativeGroup.DefineTemplate("box", "kewl\ndaddy");
string expected =
"Load kewl" + newline +
"daddy;";
@@ -269,7 +269,7 @@ namespace Antlr4.Test.StringTemplate
{
string template = "Load <box(\"arg\")>;";
Template st = new Template(template);
-            st.impl.nativeGroup.DefineTemplate("box", "kewl <x> daddy", new string[] { "x" });
+            st.impl.NativeGroup.DefineTemplate("box", "kewl <x> daddy", new string[] { "x" });
st.impl.Dump();
st.Add("name", "Ter");
string expected = "Load kewl arg daddy;";
@@ -282,8 +282,8 @@ namespace Antlr4.Test.StringTemplate
{
string template = "Load <box(\"arg\", foo())>;";
Template st = new Template(template);
-            st.impl.nativeGroup.DefineTemplate("box", "kewl <x> <y> daddy", new string[] { "x", "y" });
-            st.impl.nativeGroup.DefineTemplate("foo", "blech");
+            st.impl.NativeGroup.DefineTemplate("box", "kewl <x> <y> daddy", new string[] { "x", "y" });
+            st.impl.NativeGroup.DefineTemplate("foo", "blech");
st.Add("name", "Ter");
string expected = "Load kewl arg blech daddy;";
string result = st.Render();
@@ -295,8 +295,8 @@ namespace Antlr4.Test.StringTemplate
{
string template = "Load <box(foo(\"arg\"))>;";
Template st = new Template(template);
-            st.impl.nativeGroup.DefineTemplate("box", "kewl <y> daddy", new string[] { "y" });
-            st.impl.nativeGroup.DefineTemplate("foo", "blech <x>", new string[] { "x" });
+            st.impl.NativeGroup.DefineTemplate("box", "kewl <y> daddy", new string[] { "y" });
+            st.impl.NativeGroup.DefineTemplate("foo", "blech <x>", new string[] { "x" });
st.Add("name", "Ter");
string expected = "Load kewl blech arg daddy;";
string result = st.Render();

