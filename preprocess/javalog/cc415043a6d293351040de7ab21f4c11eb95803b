commit cc415043a6d293351040de7ab21f4c11eb95803b
Author:     acondit <acondit@parrt.spork>
AuthorDate: Sat May 7 07:56:10 2011 -0800
Commit:     acondit <acondit@parrt.spork>
CommitDate: Sat May 7 07:56:10 2011 -0800

Changes to match ANTLR3.4 changes

[git-p4: depot-paths = "//depot/code/antlr/antlr3-main/": change = 8406]

diff --git a/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.h b/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.h
index af74552..77f028b 100644
--- a/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.h
+++ b/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.h
@@ -14,12 +14,12 @@

}

--(void) testGetEOFToken;
--(void) testInitAndRelease;
--(void) testInitWithTokenType;
--(void) testInitWithTokenTypeAndText;
--(void) testInitWithCharStream;
--(void) testInitWithToken;
--(void) testTokenDescription;
+-(void) test01InitAndRelease;
+-(void) test02GetEOFToken;
+-(void) test03InitWithTokenType;
+-(void) test04InitWithTokenTypeAndText;
+-(void) test05InitWithCharStream;
+-(void) test06InitWithToken;
+-(void) test07TokenDescription;

@end
diff --git a/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.m b/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.m
index af7b647..e945c5d 100644
--- a/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.m
+++ b/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.m
@@ -12,24 +12,24 @@

@implementation ANTLRCommonTokenTest

--(void) testInitAndRelease
+-(void) test01InitAndRelease
{
-	ANTLRCommonToken *token = [ANTLRCommonToken newANTLRCommonToken];
+	ANTLRCommonToken *token = [[ANTLRCommonToken newToken] retain];
STAssertNotNil(token, @"Token was nil");
[token release];
}

--(void) testGetEOFToken
+-(void) test02GetEOFToken
{
-	ANTLRCommonToken *token = [ANTLRCommonToken eofToken];
+	ANTLRCommonToken *token = [[ANTLRCommonToken eofToken] retain];
STAssertNotNil(token, @"Token was nil");
STAssertEquals(token.type, (NSInteger)ANTLRTokenTypeEOF, @"Token was not of type ANTLRTokenTypeEOF");
[token release];
}

--(void) testInitWithTokenType
+-(void) test03InitWithTokenType
{
-	ANTLRCommonToken *token = [ANTLRCommonToken newANTLRCommonToken:ANTLRTokenTypeUP];
+	ANTLRCommonToken *token = [[ANTLRCommonToken newToken:ANTLRTokenTypeUP] retain];
token.text = @"<UP>";
STAssertNotNil(token, @"Token was nil");
STAssertEquals(token.type, (NSInteger)ANTLRTokenTypeUP, @"Token was not of type ANTLRTokenTypeUP");
@@ -38,9 +38,9 @@
[token release];
}

--(void) testInitWithTokenTypeAndText
+-(void) test04InitWithTokenTypeAndText
{
-	ANTLRCommonToken *token = [ANTLRCommonToken newANTLRCommonToken:ANTLRTokenTypeUP Text:@"<UP>"];
+	ANTLRCommonToken *token = [[ANTLRCommonToken newToken:ANTLRTokenTypeUP Text:@"<UP>"] retain];
STAssertNotNil(token, @"Token was nil");
STAssertEquals(token.type, (NSInteger)ANTLRTokenTypeUP, @"Token was not of type ANTLRTokenTypeUP");
STAssertNotNil(token.text, @"Token text was nil, was expecting <UP>");
@@ -48,27 +48,28 @@
[token release];
}

--(void) testInitWithCharStream
+-(void) test05InitWithCharStream
{
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newANTLRCommonToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
+	ANTLRStringStream *stream = [[ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"] retain];
+	ANTLRCommonToken *token = [[ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5] retain];
STAssertNotNil(token, @"Token was nil");
STAssertEquals(token.type, (NSInteger)555, @"Token was not of type 555"); // Nice random type number
STAssertNotNil(token.text, @"Token text was nil, was expecting ||");
STAssertTrue([token.text isEqualToString:@"||"], @"Token text was not || was instead: %@", token.text);
[token release];
+    [stream release];
}

--(void) testInitWithToken
+-(void) test06InitWithToken
{
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newANTLRCommonToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
+	ANTLRStringStream *stream = [[ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"] retain];
+	ANTLRCommonToken *token = [[ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5] retain];
STAssertNotNil(token, @"Token was nil");
STAssertEquals(token.type, (NSInteger)555, @"Token was not of type 555"); // Nice random type number
STAssertNotNil(token.text, @"Token text was nil, was expecting ||");
STAssertTrue([token.text isEqualToString:@"||"], @"Token text was not || was instead: %@", token.text);

-	ANTLRCommonToken *newToken = [ANTLRCommonToken newANTLRCommonTokenWithToken:token];
+	ANTLRCommonToken *newToken = [[ANTLRCommonToken newTokenWithToken:token] retain];
STAssertNotNil(newToken, @"New token is nil!");
STAssertEquals(newToken.type, token.type, @"Tokens types do not match %d:%d!", newToken.type, token.type);
STAssertEquals(newToken.line, token.line, @"Token lines do not match!");
@@ -79,16 +80,19 @@
STAssertEquals(newToken.stopIndex, token.stopIndex, @"Token stop positions do not match");
STAssertTrue([newToken.text isEqualToString:token.text], @"Token text does not match!");
[token release];
-	//[newToken release];
+	[newToken release];
+    [stream release];
}

--(void) testTokenDescription
+-(void) test07TokenDescription
{
NSString *aDescription;
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newANTLRCommonToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
+	ANTLRStringStream *stream = [[ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"] retain];
+	ANTLRCommonToken *token = [[ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5] retain];
aDescription = [token description];
STAssertTrue([aDescription isEqualToString:@"[@0, 4:5='||',<555>,0:0]"], @"String description for token is not correct! got %@", aDescription);
+    [token release];
+    [stream release];
}

@end

