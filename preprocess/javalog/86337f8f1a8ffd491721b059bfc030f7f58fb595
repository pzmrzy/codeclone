commit 86337f8f1a8ffd491721b059bfc030f7f58fb595
Author:     Ivan Brezina <ibrezina@ibrezina.net>
AuthorDate: Tue Mar 19 00:21:47 2013 +0100
Commit:     Ivan Brezina <ibre5041@ibrezina.net>
CommitDate: Wed Jun 26 15:50:02 2013 +0200

Generate msynpred method if and only if synpreds are present

- fixes compile error on g++ in cases when the Lexer
contains cyclic DFA

diff --git a/tool/src/main/resources/org/antlr/codegen/templates/Cpp/Cpp.stg b/tool/src/main/resources/org/antlr/codegen/templates/Cpp/Cpp.stg
index 7fdcb11..3dfb612 100755
--- a/tool/src/main/resources/org/antlr/codegen/templates/Cpp/Cpp.stg
+++ b/tool/src/main/resources/org/antlr/codegen/templates/Cpp/Cpp.stg
@@ -2082,24 +2082,25 @@ public:
<endif>
}

-        <if(dfa.specialStateSTs)>
-        ANTLR_UINT32 LA(ANTLR_INT32 i)
-        {
-        	return m_ctx->LA(i);
-        }
-
-        template\<typename PredType>
-        bool msynpred( PredType pred )
-        {
-        	return m_ctx->msynpred(pred);
-        }
-
-        <if(PARSER)>
-	const CtxType::CommonTokenType*  LT(ANTLR_INT32 k)
-	{
-		return m_ctx->LT(k);
-	}
-	<endif>
+    <if(dfa.specialStateSTs)>
+    ANTLR_UINT32 LA(ANTLR_INT32 i)
+    {
+        return m_ctx->LA(i);
+    }
+
+    <if(PARSER)>
+    const CtxType::CommonTokenType*  LT(ANTLR_INT32 k)
+    {
+        return m_ctx->LT(k);
+    }
+    <endif>
+    <if(synpreds)>
+    template\<typename PredType>
+    bool msynpred( PredType pred )
+    {
+        return m_ctx->msynpred(pred);
+    }
+    <endif>

ANTLR_INT32  specialStateTransition(CtxType * ctx, RecognizerType* recognizer, IntStreamType* is, ANTLR_INT32 s)
{

