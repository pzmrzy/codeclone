commit e21e5aeca735bbc92389e2a3b37dfe146d5c8ed9
Author:     Sam Harwell <sam@tunnelvisionlabs.com>
AuthorDate: Thu Jan 3 18:38:59 2013 -0600
Commit:     Sam Harwell <sam@tunnelvisionlabs.com>
CommitDate: Thu Jan 3 19:11:05 2013 -0600

Improve error reporting and recovery for STRAY_BRACKET, fixes antlr/antlr3#42

diff --git a/tool/src/main/antlr3/org/antlr/grammar/v3/ANTLR.g b/tool/src/main/antlr3/org/antlr/grammar/v3/ANTLR.g
index 0a5e701..cedf81e 100644
--- a/tool/src/main/antlr3/org/antlr/grammar/v3/ANTLR.g
+++ b/tool/src/main/antlr3/org/antlr/grammar/v3/ANTLR.g
@@ -135,6 +135,24 @@ public String getFileName() {
public void setFileName(String value) {
fileName = value;
}
+
+@Override
+public Token nextToken() {
+	Token token = super.nextToken();
+	while (token.getType() == STRAY_BRACKET) {
+		ErrorManager.syntaxError(
+			ErrorManager.MSG_SYNTAX_ERROR,
+			null,
+			token,
+			"antlr: dangling ']'? make sure to escape with \\]",
+			null);
+
+		// skip this token
+		token = super.nextToken();
+	}
+
+	return token;
+}
}

@parser::members {
@@ -1148,14 +1166,6 @@ DOLLAR : '$' ;

STRAY_BRACKET
:	']'
-		{
-			ErrorManager.syntaxError(
-				ErrorManager.MSG_SYNTAX_ERROR,
-				null,
-				state.token,
-				"antlr: dangling ']'? make sure to escape with \\]",
-				null);
-		}
;

CHAR_LITERAL
diff --git a/tool/src/test/java/org/antlr/test/TestSyntaxErrors.java b/tool/src/test/java/org/antlr/test/TestSyntaxErrors.java
index 8ceacea..58861da 100644
--- a/tool/src/test/java/org/antlr/test/TestSyntaxErrors.java
+++ b/tool/src/test/java/org/antlr/test/TestSyntaxErrors.java
@@ -28,6 +28,10 @@

package org.antlr.test;

+import org.antlr.tool.ANTLRErrorListener;
+import org.antlr.tool.ErrorManager;
+import org.antlr.tool.Message;
+import org.antlr.tool.ToolMessage;
import org.junit.Test;

import static org.junit.Assert.*;
@@ -111,4 +115,26 @@ public class TestSyntaxErrors extends BaseTest {
String expecting = "{HARDWARE,SOFTWARE}\n";
assertEquals(expecting, result);
}
+
+	@Test public void testStrayBracketRecovery() {
+		String grammar =
+			"grammar T;\n" +
+			"options {output = AST;}\n" +
+			"tokens{NODE;}\n" +
+			"s : a=ID INT -> ^(NODE[$a]] INT);\n" +
+			"ID: 'a'..'z'+;\n" +
+			"INT: '0'..'9'+;\n";
+
+		ErrorQueue errorQueue = new ErrorQueue();
+		ErrorManager.setErrorListener(errorQueue);
+
+		boolean found =
+			rawGenerateAndBuildRecognizer(
+				"T.g", grammar, "TParser", "TLexer", false);
+
+		assertFalse(found);
+		assertEquals(
+			"[error(100): :4:27: syntax error: antlr: dangling ']'? make sure to escape with \\]]",
+			errorQueue.errors.toString());
+	}
}

