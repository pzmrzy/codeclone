commit 7d3d004297b585d993d8d8c0096c81410b6324ae
Author:     Terence Parr <parrt@antlr.org>
AuthorDate: Thu Aug 9 10:40:25 2012 -0700
Commit:     Terence Parr <parrt@antlr.org>
CommitDate: Thu Aug 9 10:40:25 2012 -0700

Provide Lexer get end of file method so people can override it. rm @Override on an interface so that we can keep the required minimum Java level down.

diff --git a/runtime/Java/src/main/java/org/antlr/runtime/Lexer.java b/runtime/Java/src/main/java/org/antlr/runtime/Lexer.java
index c7f8e27..66c005f 100644
--- a/runtime/Java/src/main/java/org/antlr/runtime/Lexer.java
+++ b/runtime/Java/src/main/java/org/antlr/runtime/Lexer.java
@@ -70,7 +70,6 @@ public abstract class Lexer extends BaseRecognizer implements TokenSource {
/** Return a token from this source; i.e., match a token on the char
*  stream.
*/
-	@Override
public Token nextToken() {
while (true) {
state.token = null;
@@ -80,12 +79,7 @@ public abstract class Lexer extends BaseRecognizer implements TokenSource {
state.tokenStartLine = input.getLine();
state.text = null;
if ( input.LA(1)==CharStream.EOF ) {
-                Token eof = new CommonToken(input,Token.EOF,
-                                            Token.DEFAULT_CHANNEL,
-                                            input.index(),input.index());
-                eof.setLine(getLine());
-                eof.setCharPositionInLine(getCharPositionInLine());
-                return eof;
+				return getEOFToken();
}
try {
mTokens();
@@ -112,6 +106,18 @@ public abstract class Lexer extends BaseRecognizer implements TokenSource {
}
}

+	/** Returns the EOF token (default), if you need
+	 *  to return a custom token instead override this method.
+	 */
+	public Token getEOFToken() {
+		Token eof = new CommonToken(input,Token.EOF,
+									Token.DEFAULT_CHANNEL,
+									input.index(),input.index());
+		eof.setLine(getLine());
+		eof.setCharPositionInLine(getCharPositionInLine());
+		return eof;
+	}
+
/** Instruct the lexer to skip creating a token for current lexer rule
*  and look for another token.  nextToken() knows to keep looking when
*  a lexer rule finishes with token set to SKIP_TOKEN.  Recall that
diff --git a/tool/CHANGES.txt b/tool/CHANGES.txt
index 588365c..ae1cef0 100644
--- a/tool/CHANGES.txt
+++ b/tool/CHANGES.txt
@@ -7,6 +7,10 @@ University of San Francisco

CHANGES

+August 9, 2012
+
+* Provide Lexer get end of file method so people can override it.
+
November 25, 2011

* stderr not test correctly in gunit examineExecResult

