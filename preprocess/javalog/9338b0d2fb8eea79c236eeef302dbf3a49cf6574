commit 9338b0d2fb8eea79c236eeef302dbf3a49cf6574
Author:     Zannick <jokeserver@gmail.com>
AuthorDate: Sun Jun 24 12:43:33 2012 -0700
Commit:     Zannick <jokeserver@gmail.com>
CommitDate: Mon Jun 25 00:59:09 2012 -0700

Final fixes to debug and its tests.

- Enable buffering since otherwise we have to use bytes instead of text.
- Output couldBacktrack as an integer.
- Debugger isn't a TestCase object, so use raw asserts.

diff --git a/runtime/Python3/antlr3/debug.py b/runtime/Python3/antlr3/debug.py
index 1008515..22a1751 100644
--- a/runtime/Python3/antlr3/debug.py
+++ b/runtime/Python3/antlr3/debug.py
@@ -882,8 +882,8 @@ class DebugEventSocketProxy(DebugEventListener):
self.connection.setblocking(1)
self.connection.setsockopt(socket.SOL_TCP, socket.TCP_NODELAY, 1)

-            self.output = self.connection.makefile('w', 0)
-            self.input = self.connection.makefile('r', 0)
+            self.output = self.connection.makefile('w', 1)
+            self.input = self.connection.makefile('r', 1)

self.write("ANTLR {}".format(self.PROTOCOL_VERSION))
self.write('grammar "{}"'.format(self.grammarFileName))
@@ -902,8 +902,8 @@ class DebugEventSocketProxy(DebugEventListener):


def transmit(self, event):
-        self.write(event);
-        self.ack();
+        self.write(event)
+        self.ack()


def commence(self):
@@ -941,7 +941,7 @@ class DebugEventSocketProxy(DebugEventListener):

def enterDecision(self, decisionNumber, couldBacktrack):
self.transmit(
-            "enterDecision\t{}\t{}".format(decisionNumber, couldBacktrack))
+            "enterDecision\t{}\t{:d}".format(decisionNumber, couldBacktrack))


def exitDecision(self, decisionNumber):
diff --git a/runtime/Python3/tests/t059debug.py b/runtime/Python3/tests/t059debug.py
index 2214d18..8e129f7 100644
--- a/runtime/Python3/tests/t059debug.py
+++ b/runtime/Python3/tests/t059debug.py
@@ -40,15 +40,15 @@ class Debugger(threading.Thread):
s.setblocking(1)
s.settimeout(10.0)

-        output = s.makefile('wb', 0)
-        input = s.makefile('rb', 0)
+        output = s.makefile('w', 1)
+        input = s.makefile('r', 1)

try:
# handshake
l = input.readline().strip()
-            self.assertEqual(l, 'ANTLR 2')
+            assert l == 'ANTLR 2'
l = input.readline().strip()
-            self.assertTrue(l.startswith('grammar "'))
+            assert l.startswith('grammar "'), l

output.write('ACK\n')
output.flush()
@@ -69,6 +69,8 @@ class Debugger(threading.Thread):
except socket.error as exc:
self.events.append(['socketerror', exc.args])
finally:
+            output.close()
+            input.close()
s.close()



