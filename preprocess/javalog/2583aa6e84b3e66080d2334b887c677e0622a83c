commit 2583aa6e84b3e66080d2334b887c677e0622a83c
Author:     parrt <parrt@antlr.org>
AuthorDate: Wed Jun 22 11:44:29 2011 -0800
Commit:     parrt <parrt@antlr.org>
CommitDate: Wed Jun 22 11:44:29 2011 -0800

added test

[git-p4: depot-paths = "//depot/code/antlr/antlr3-main/": change = 8711]

diff --git a/tool/src/test/java/org/antlr/test/TestJavaCodeGeneration.java b/tool/src/test/java/org/antlr/test/TestJavaCodeGeneration.java
index 148a15a..f18a6d0 100644
--- a/tool/src/test/java/org/antlr/test/TestJavaCodeGeneration.java
+++ b/tool/src/test/java/org/antlr/test/TestJavaCodeGeneration.java
@@ -117,7 +117,7 @@ public class TestJavaCodeGeneration extends BaseTest {
"B : '\\\"';\n" +            // this is B: '\"', which shodl give "\"" at Java level;
"C : '\\'\\'';\n" +          // this is C: '\'\'', which shoudl give "''" at Java level
"D : '\\k';\n";              // this is D: '\k', which shoudl give just "k" at Java level;
-
+
boolean found =
rawGenerateAndBuildRecognizer(
"T.g", grammar, null, "T", false);
@@ -125,4 +125,16 @@ public class TestJavaCodeGeneration extends BaseTest {
assertEquals(expecting, found);
}

+	@Test public void testBlankRuleGetsNoException() {
+		String grammar =
+			"grammar T;\n" +
+			"a : sync (ID sync)* ;\n" +
+			"sync : ;\n" +
+			"ID : 'a'..'z'+;\n";
+		boolean found =
+			rawGenerateAndBuildRecognizer(
+				"T.g", grammar, "TParser", "TLexer", false);
+		boolean expecting = true; // should be ok
+		assertEquals(expecting, found);
+	}
}

