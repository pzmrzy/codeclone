commit 5edab2d23b3d7302f6ab8a0033cbe636352a4472
Author:     Alan Condit <acondit@ipns.com>
AuthorDate: Thu Feb 16 13:31:08 2012 -0800
Commit:     Alan Condit <acondit@ipns.com>
CommitDate: Thu Feb 16 13:31:08 2012 -0800

A bunch of files that should have never been added to the repository.

diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/ANTLR b/runtime/ObjC/ANTLR.framework/Versions/A/ANTLR
deleted file mode 100755
index 67c1d3a..0000000
Binary files a/runtime/ObjC/ANTLR.framework/Versions/A/ANTLR and /dev/null differ
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLR.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLR.h
deleted file mode 100755
index 671e783..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLR.h
+++ /dev/null
@@ -1,60 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import <ANTLR/ANTLRBitSet.h>
-#import <ANTLR/ANTLRBaseRecognizer.h>
-#import <ANTLR/ANTLRLexer.h>
-#import <ANTLR/ANTLRParser.h>
-#import <ANTLR/ANTLRTreeParser.h>
-#import <ANTLR/ANTLRDFA.h>
-#import <ANTLR/ANTLRStringStream.h>
-#import <ANTLR/ANTLRTokenSource.h>
-#import <ANTLR/ANTLRCommonTokenStream.h>
-
-#import <ANTLR/ANTLRRecognitionException.h>
-#import <ANTLR/ANTLREarlyExitException.h>
-#import <ANTLR/ANTLRMismatchedSetException.h>
-#import <ANTLR/ANTLRMismatchedTokenException.h>
-#import <ANTLR/ANTLRMismatchedRangeException.h>
-#import <ANTLR/ANTLRMismatchedTreeNodeException.h>
-#import <ANTLR/ANTLRNoViableAltException.h>
-#import <ANTLR/ANTLRFailedPredicateException.h>
-#import <ANTLR/ANTLRTreeException.h>
-
-#import <ANTLR/ANTLRParserRuleReturnScope.h>
-#import <ANTLR/ANTLRTreeRuleReturnScope.h>
-
-#import <ANTLR/ANTLRTree.h>
-#import <ANTLR/ANTLRCommonTree.h>
-#import <ANTLR/ANTLRTreeAdaptor.h>
-#import <ANTLR/ANTLRCommonTreeAdaptor.h>
-#import <ANTLR/ANTLRTreeNodeStream.h>
-#import <ANTLR/ANTLRUnbufferedCommonTreeNodeStream.h>
-#import <ANTLR/ANTLRUnbufferedCommonTreeNodeStreamState.h>
-
-#import <ANTLR/ANTLRRewriteRuleSubtreeStream.h>
-#import <ANTLR/ANTLRRewriteRuleTokenStream.h>
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRBitSet.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRBitSet.h
deleted file mode 100755
index a1be117..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRBitSet.h
+++ /dev/null
@@ -1,93 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import <Cocoa/Cocoa.h>
-#import <CoreFoundation/CoreFoundation.h>
-#import "ANTLRToken.h"
-
-#define BITS (sizeof(NSUInteger) * 8)
-#define LOG_BITS ((sizeof(NSUInteger)==8)?6:5)
-
-// A simple wrapper around CoreFoundation bit vectors to shield the rest of the implementation
-// from the specifics of the BitVector initialization and query functions.
-// This is fast, so there is no need to reinvent the wheel just yet.
-
-@interface ANTLRBitSet : NSObject < NSMutableCopying > {
-	CFMutableBitVectorRef bitVector;
-}
-
-#pragma mark Class Methods
-
-+ (ANTLRBitSet *) newANTLRBitSet;
-+ (ANTLRBitSet *) newANTLRBitSetWithType:(ANTLRTokenType)type;
-/** Construct a ANTLRBitSet given the size
- * @param nbits The size of the ANTLRBitSet in bits
- */
-+ (ANTLRBitSet *) newANTLRBitSetWithNBits:(NSUInteger)nbits;
-+ (ANTLRBitSet *) newANTLRBitSetWithArray:(NSMutableArray *)types;
-+ (ANTLRBitSet *) newANTLRBitSetWithBits:(const unsigned long long *)theBits Count:(NSUInteger)longCount;
-
-+ (ANTLRBitSet *) of:(NSUInteger)el;
-+ (ANTLRBitSet *) of:(NSUInteger)a And2:(NSUInteger)b;
-+ (ANTLRBitSet *) of:(NSUInteger)a And2:(NSUInteger)b And3:(NSUInteger)c;
-+ (ANTLRBitSet *) of:(NSUInteger)a And2:(NSUInteger)b And3:(NSUInteger)c And4:(NSUInteger)d;
-
-#pragma mark Initializer
-
-- (ANTLRBitSet *) init;
-- (ANTLRBitSet *) initWithType:(ANTLRTokenType)type;
-- (ANTLRBitSet *) initWithNBits:(NSUInteger)nbits;
-- (ANTLRBitSet *) initWithBitVector:(CFMutableBitVectorRef)theBitVector;
-- (ANTLRBitSet *) initWithBits:(const unsigned long long const*)theBits Count:(NSUInteger)theCount;
-- (ANTLRBitSet *) initWithArrayOfBits:(NSArray *)theArray;
-
-#pragma mark Operations
-- (ANTLRBitSet *) or:(ANTLRBitSet *) aBitSet;
-- (void) orInPlace:(ANTLRBitSet *) aBitSet;
-- (void) add:(NSUInteger) bit;
-- (void) remove:(NSUInteger) bit;
-- (void) setAllBits:(BOOL) aState;
-
-- (NSInteger) numBits;
-- (NSUInteger) size;
-- (void) setSize:(NSUInteger) noOfWords;
-
-#pragma mark Informational
-- (unsigned long long) bitMask:(NSUInteger) bitNumber;
-- (BOOL) member:(NSUInteger)bitNumber;
-- (BOOL) isNil;
-- (NSString *) toString;
-- (NSString *) description;
-
-#pragma mark NSCopying support
-
-- (id) mutableCopyWithZone:(NSZone *) theZone;
-
-
-//private
-- (CFMutableBitVectorRef) _bitVector;
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRError.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRError.h
deleted file mode 100644
index f2657af..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRError.h
+++ /dev/null
@@ -1,55 +0,0 @@
-//
-//  ANTLRError.h
-//  ANTLR
-//
-//  Created by Ian Michell on 30/03/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-// [The "BSD licence"]
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-
-#define ANTLRErrorDomain @"ANTLRError"
-
-#define ANTLRIllegalArgumentException @"ANTLRIllegalArgumentException"
-#define ANTLRIllegalStateException @"IllegalStateException"
-//#define ANTLRRuntimeException @"RuntimeException"
-//#define ANTLRNoSuchMethodException @"NoSuchMethodException"
-//#define ANTLRNoSuchElementException @"NoSuchElementException"
-//#define ANTLRUnsupportedOperationException @"UnsupportedOperationException"
-
-
-/*typedef enum
-{
-	ANTLRIllegalState = 1,
-	ANTLRIllegalArgument = 2,
-	ANTLRRecognitionError = 3,
-	ANTLRMissingTokenError = 4,
-	ANTLRUnwantedTokenError = 5,
-	ANTLRMismatechedTokenError = 6,
-	ANTLRNoViableAltError = 7
-
-} ANTLRErrorCode;*/
\ No newline at end of file
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRFailedPredicateException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRFailedPredicateException.h
deleted file mode 100755
index 9788cba..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRFailedPredicateException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRecognitionException.h"
-
-
-@interface ANTLRFailedPredicateException : ANTLRRecognitionException
-{
-	NSString *predicate;
-	NSString *ruleName;
-}
-
-@property (retain, getter=getPredicate, setter=setPredicate:) NSString *predicate;
-@property (retain, getter=getRuleName, setter=setRuleName:) NSString *ruleName;
-
-+ (ANTLRFailedPredicateException *) exceptionWithRuleName:(NSString *)theRuleName predicate:(NSString *)thePredicate stream:(id<ANTLRIntStream>)theStream;
-- (ANTLRFailedPredicateException *) initWithRuleName:(NSString *)theRuleName predicate:(NSString *)thePredicate stream:(id<ANTLRIntStream>)theStream;
-
-#ifdef DONTUSEYET
-- (NSString *) getPredicate;
-- (void) setPredicate:(NSString *)thePredicate;
-- (NSString *) getRuleName;
-- (void) setRuleName:(NSString *)theRuleName;
-#endif
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRFastQueue.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRFastQueue.h
deleted file mode 100644
index cf81817..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRFastQueue.h
+++ /dev/null
@@ -1,68 +0,0 @@
-//
-//  ANTLRFastQueue.h
-//  ANTLR
-//
-//  Created by Ian Michell on 26/04/2010.
-// [The "BSD licence"]
-// Copyright (c) 2010 Ian Michell 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-
-
-@interface ANTLRFastQueue : NSObject <NSCopying>
-{
-	NSAutoreleasePool *pool;
-	NSMutableArray *data;
-	NSInteger p;
-}
-
-@property (retain, getter=getPool, setter=setPool) NSAutoreleasePool *pool;
-@property (retain, getter=getData, setter=setData) NSMutableArray *data;
-@property (assign, getter=getP, setter=setP) NSInteger p;
-
-+ (id) newANTLRFastQueue;
-
-- (id) init;
-
-- (id) copyWithZone:(NSZone *)aZone;
-
-- (void) reset;
-- (id) remove;
-- (void) addObject:(id) o;
-- (NSInteger) count;
-- (NSInteger) size;
-- (id) head;
-- (id) objectAtIndex:(NSInteger) i;
-- (void) clear;
-- (NSString *) toString;
-- (NSAutoreleasePool *)getPool;
-- (void)setPool:(NSAutoreleasePool *)aPool;
-- (NSMutableArray *)getData;
-- (void)setData:(NSMutableArray *)myData;
-- (NSInteger) getP;
-- (void) setP:(NSInteger)anInt;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashMap.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashMap.h
deleted file mode 100644
index 04aca7b..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashMap.h
+++ /dev/null
@@ -1,102 +0,0 @@
-//
-//  ANTLRHashMap.h
-//  ANTLR
-//
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRLinkBase.h"
-#import "ANTLRMapElement.h"
-
-#define GLOBAL_SCOPE       0
-#define LOCAL_SCOPE        1
-#define HASHSIZE         101
-#define HBUFSIZE      0x2000
-
-@interface ANTLRHashMap : ANTLRLinkBase {
-	//	ANTLRHashMap *fNext;
-    //    TStringPool *fPool;
-    NSInteger Scope;
-    NSInteger LastHash;
-    NSInteger BuffSize;
-    ANTLRMapElement *ptrBuffer[HASHSIZE];
-    NSInteger mode;
-}
-
-//@property (copy) ANTLRHashMap *fNext;
-//@property (copy) TStringPool *fPool;
-@property (getter=getScope, setter=setScope:) NSInteger Scope;
-@property (getter=getLastHash, setter=setLastHash:) NSInteger LastHash;
-
-// Contruction/Destruction
-+ (id)newANTLRHashMap;
-+ (id)newANTLRHashMapWithLen:(NSInteger)aBuffSize;
-- (id)init;
-- (id)initWithLen:(NSInteger)aBuffSize;
-- (void)dealloc;
-- (ANTLRHashMap *)PushScope:( ANTLRHashMap **)map;
-- (ANTLRHashMap *)PopScope:( ANTLRHashMap **)map;
-
-- (NSInteger)count;
-- (NSInteger)size;
-
-// Instance Methods
-/*    form hash value for string s */
-- (NSInteger)hash:(NSString *)s;
-/*   look for s in ptrBuffer  */
-- (ANTLRHashMap *)findscope:(int)level;
-/*   look for s in ptrBuffer  */
-- (id)lookup:(NSString *)s Scope:(int)scope;
-/*   look for s in ptrBuffer  */
-- (id)install:(ANTLRMapElement *)sym Scope:(int)scope;
-/*   look for s in ptrBuffer  */
-- (void)deleteANTLRHashMap:(ANTLRMapElement *)np;
-- (int)RemoveSym:(NSString *)s;
-- (void)delete_chain:(ANTLRMapElement *)np;
-#ifdef DONTUSEYET
-- (int)bld_symtab:(KW_TABLE *)toknams;
-#endif
-- (ANTLRMapElement **)getptrBuffer;
-- (ANTLRMapElement *)getptrBufferEntry:(int)idx;
-- (void)setptrBuffer:(ANTLRMapElement *)np Index:(int)idx;
-- (NSInteger)getScope;
-- (void)setScope:(NSInteger)i;
-- (ANTLRMapElement *)getTType:(NSString *)name;
-- (ANTLRMapElement *)getNameInList:(NSInteger)ttype;
-- (void)putNode:(NSString *)name TokenType:(NSInteger)ttype;
-- (NSInteger)getMode;
-- (void)setMode:(NSInteger)aMode;
-- (void) insertObject:(id)aRule atIndex:(NSInteger)idx;
-- (id) objectAtIndex:(NSInteger)idx;
-- (void) setObject:(id)aRule atIndex:(NSInteger)idx;
-- (void)addObject:(id)anObject;
-- (ANTLRMapElement *) getName:(NSString *)aName;
-- (void) putName:(NSString *)name Node:(id)aNode;
-
-- (NSEnumerator *)objectEnumerator;
-- (BOOL) hasNext;
-- (ANTLRMapElement *)nextObject;
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashMap.m b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashMap.m
deleted file mode 100644
index a23426b..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashMap.m
+++ /dev/null
@@ -1,521 +0,0 @@
-//
-//  ANTLRHashMap.m
-//  ANTLR
-//
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#define SUCCESS (0)
-#define FAILURE (-1)
-
-#import "ANTLRHashMap.h"
-
-static NSInteger itIndex;
-
-/*
- * Start of ANTLRHashMap
- */
-@implementation ANTLRHashMap
-
-@synthesize Scope;
-@synthesize LastHash;
-
-+(id)newANTLRHashMap
-{
-    ANTLRHashMap *aNewANTLRHashMap;
-
-    aNewANTLRHashMap = [[ANTLRHashMap alloc] init];
-	return( aNewANTLRHashMap );
-}
-
-+(id)newANTLRHashMapWithLen:(NSInteger)aBuffSize
-{
-    ANTLRHashMap *aNewANTLRHashMap;
-
-    aNewANTLRHashMap = [[ANTLRHashMap alloc] initWithLen:aBuffSize];
-	return( aNewANTLRHashMap );
-}
-
--(id)init
-{
-    NSInteger idx;
-
-	if ((self = [super init]) != nil) {
-		fNext = nil;
-        BuffSize = HASHSIZE;
-		Scope = 0;
-		if ( fNext != nil ) {
-			Scope = ((ANTLRHashMap *)fNext)->Scope+1;
-			for( idx = 0; idx < BuffSize; idx++ ) {
-				ptrBuffer[idx] = ((ANTLRHashMap *)fNext)->ptrBuffer[idx];
-			}
-		}
-        mode = 0;
-	}
-    return( self );
-}
-
--(id)initWithLen:(NSInteger)aBuffSize
-{
-    NSInteger idx;
-
-	if ((self = [super init]) != nil) {
-		fNext = nil;
-        BuffSize = aBuffSize;
-		Scope = 0;
-		if ( fNext != nil ) {
-			Scope = ((ANTLRHashMap *)fNext)->Scope+1;
-			for( idx = 0; idx < BuffSize; idx++ ) {
-				ptrBuffer[idx] = ((ANTLRHashMap *)fNext)->ptrBuffer[idx];
-			}
-		}
-        mode = 0;
-	}
-    return( self );
-}
-
--(void)dealloc
-{
-    ANTLRMapElement *tmp, *rtmp;
-    NSInteger idx;
-
-    if ( self.fNext != nil ) {
-        for( idx = 0; idx < BuffSize; idx++ ) {
-            tmp = ptrBuffer[idx];
-            while ( tmp && tmp != [((ANTLRHashMap *)fNext) getptrBufferEntry:idx] ) {
-                rtmp = tmp;
-                // tmp = [tmp getfNext];
-                tmp = (ANTLRMapElement *)tmp.fNext;
-                [rtmp dealloc];
-            }
-        }
-    }
-	[super dealloc];
-}
-
-- (NSInteger)count
-{
-    id anElement;
-    NSInteger aCnt = 0;
-
-    for (NSInteger i = 0; i < BuffSize; i++) {
-        if ((anElement = ptrBuffer[i]) != nil) {
-            aCnt++;
-        }
-    }
-    return aCnt;
-}
-
-- (NSInteger) size
-{
-    id anElement;
-    NSInteger aSize = 0;
-
-    for (NSInteger i = 0; i < BuffSize; i++) {
-        if ((anElement = ptrBuffer[i]) != nil) {
-            aSize += sizeof(id);
-        }
-    }
-    return aSize;
-}
-
-
--(void)deleteANTLRHashMap:(ANTLRMapElement *)np
-{
-    ANTLRMapElement *tmp, *rtmp;
-    NSInteger idx;
-
-    if ( self.fNext != nil ) {
-        for( idx = 0; idx < BuffSize; idx++ ) {
-            tmp = ptrBuffer[idx];
-            while ( tmp && tmp != (ANTLRLinkBase *)[((ANTLRHashMap *)fNext) getptrBufferEntry:idx] ) {
-                rtmp = tmp;
-                tmp = [tmp getfNext];
-                [rtmp dealloc];
-            }
-        }
-    }
-}
-
--(ANTLRHashMap *)PushScope:(ANTLRHashMap **)map
-{
-    NSInteger idx;
-    ANTLRHashMap *htmp;
-
-    htmp = [ANTLRHashMap newANTLRHashMap];
-    if ( *map != nil ) {
-        ((ANTLRHashMap *)htmp)->fNext = *map;
-        [htmp setScope:[((ANTLRHashMap *)htmp->fNext) getScope]+1];
-        for( idx = 0; idx < BuffSize; idx++ ) {
-            htmp->ptrBuffer[idx] = ((ANTLRHashMap *)htmp->fNext)->ptrBuffer[idx];
-        }
-    }
-    //    gScopeLevel++;
-    *map = htmp;
-    return( htmp );
-}
-
--(ANTLRHashMap *)PopScope:(ANTLRHashMap **)map
-{
-    NSInteger idx;
-    ANTLRMapElement *tmp;
-	ANTLRHashMap *htmp;
-
-    htmp = *map;
-    if ( (*map)->fNext != nil ) {
-        *map = (ANTLRHashMap *)htmp->fNext;
-        for( idx = 0; idx < BuffSize; idx++ ) {
-            if ( htmp->ptrBuffer[idx] == nil ||
-                htmp->ptrBuffer[idx] == (*map)->ptrBuffer[idx] ) {
-                break;
-            }
-            tmp = htmp->ptrBuffer[idx];
-            /*
-             * must deal with parms, locals and labels at some point
-             * can not forget the debuggers
-             */
-            htmp->ptrBuffer[idx] = [tmp getfNext];
-            [ tmp dealloc];
-        }
-        *map = (ANTLRHashMap *)htmp->fNext;
-        //        gScopeLevel--;
-    }
-    return( htmp );
-}
-
-#ifdef USERDOC
-/*
- *  HASH        hash entry to get index to table
- *  NSInteger hash( ANTLRHashMap *self, char *s );
- *
- *     Inputs:  char *s             string to find
- *
- *     Returns: NSInteger                 hashed value
- *
- *  Last Revision 9/03/90
- */
-#endif
--(NSInteger)hash:(NSString *)s       /*    form hash value for string s */
-{
-	NSInteger hashval;
-	const char *tmp;
-
-	tmp = [s cStringUsingEncoding:NSASCIIStringEncoding];
-	for( hashval = 0; *tmp != '\0'; )
-        hashval += *tmp++;
-	self->LastHash = hashval % BuffSize;
-	return( self->LastHash );
-}
-
-#ifdef USERDOC
-/*
- *  FINDSCOPE  search hashed list for entry
- *  ANTLRHashMap *findscope( ANTLRHashMap *self, NSInteger scope );
- *
- *     Inputs:  NSInteger       scope -- scope level to find
- *
- *     Returns: ANTLRHashMap   pointer to ptrBuffer of proper scope level
- *
- *  Last Revision 9/03/90
- */
-#endif
--(ANTLRHashMap *)findscope:(NSInteger)scope
-{
-    if ( self->Scope == scope ) {
-        return( self );
-    }
-    else if ( fNext ) {
-        return( [((ANTLRHashMap *)fNext) findscope:scope] );
-    }
-    return( nil );              /*   not found      */
-}
-
-#ifdef USERDOC
-/*
- *  LOOKUP  search hashed list for entry
- *  ANTLRMapElement *lookup( ANTLRHashMap *self, char *s, NSInteger scope );
- *
- *     Inputs:  char     *s          string to find
- *
- *     Returns: ANTLRMapElement  *           pointer to entry
- *
- *  Last Revision 9/03/90
- */
-#endif
--(id)lookup:(NSString *)s Scope:(NSInteger)scope
-{
-    ANTLRMapElement *np;
-
-    for( np = self->ptrBuffer[[self hash:s]]; np != nil; np = [np getfNext] ) {
-        if ( [s isEqualToString:[np getName]] ) {
-            return( np );        /*   found it       */
-        }
-    }
-    return( nil );              /*   not found      */
-}
-
-#ifdef USERDOC
-/*
- *  INSTALL search hashed list for entry
- *  NSInteger install( ANTLRHashMap *self, ANTLRMapElement *sym, NSInteger scope );
- *
- *     Inputs:  ANTLRMapElement    *sym   -- symbol ptr to install
- *              NSInteger         scope -- level to find
- *
- *     Returns: Boolean     TRUE   if installed
- *                          FALSE  if already in table
- *
- *  Last Revision 9/03/90
- */
-#endif
--(ANTLRMapElement *)install:(ANTLRMapElement *)sym Scope:(NSInteger)scope
-{
-    ANTLRMapElement *np;
-
-    np = [self lookup:[sym getName] Scope:scope ];
-    if ( np == nil ) {
-        [sym retain];
-        [sym setFNext:self->ptrBuffer[ self->LastHash ]];
-        self->ptrBuffer[ self->LastHash ] = sym;
-        return( self->ptrBuffer[ self->LastHash ] );
-    }
-    return( nil );            /*   not found      */
-}
-
-#ifdef USERDOC
-/*
- *  RemoveSym  search hashed list for entry
- *  NSInteger RemoveSym( ANTLRHashMap *self, char *s );
- *
- *     Inputs:  char     *s          string to find
- *
- *     Returns: NSInteger      indicator of SUCCESS OR FAILURE
- *
- *  Last Revision 9/03/90
- */
-#endif
--(NSInteger)RemoveSym:(NSString *)s
-{
-    ANTLRMapElement *np, *tmp;
-    NSInteger idx;
-
-    idx = [self hash:s];
-    for ( tmp = self->ptrBuffer[idx], np = self->ptrBuffer[idx]; np != nil; np = [np getfNext] ) {
-        if ( [s isEqualToString:[np getName]] ) {
-            tmp = [np getfNext];             /* get the next link  */
-            [np dealloc];
-            return( SUCCESS );            /* report SUCCESS     */
-        }
-        tmp = [np getfNext];              //  BAD!!!!!!
-    }
-    return( FAILURE );                    /*   not found      */
-}
-
--(void)delete_chain:(ANTLRMapElement *)np
-{
-    if ( [np getfNext] != nil )
-		[self delete_chain:[np getfNext]];
-	[np dealloc];
-}
-
-#ifdef DONTUSEYET
--(NSInteger)bld_symtab:(KW_TABLE *)toknams
-{
-    NSInteger i;
-    ANTLRMapElement *np;
-
-    for( i = 0; *(toknams[i].name) != '\0'; i++ ) {
-        // install symbol in ptrBuffer
-        np = [ANTLRMapElement newANTLRMapElement:[NSString stringWithFormat:@"%s", toknams[i].name]];
-        //        np->fType = toknams[i].toknum;
-        [self install:np Scope:0];
-    }
-    return( SUCCESS );
-}
-#endif
-
--(ANTLRMapElement *)getptrBufferEntry:(NSInteger)idx
-{
-	return( ptrBuffer[idx] );
-}
-
--(ANTLRMapElement **)getptrBuffer
-{
-	return( ptrBuffer );
-}
-
--(void)setptrBuffer:(ANTLRMapElement *)np Index:(NSInteger)idx
-{
-	if ( idx < BuffSize ) {
-        [np retain];
-		ptrBuffer[idx] = np;
-    }
-}
-
--(NSInteger)getScope
-{
-	return( Scope );
-}
-
--(void)setScopeScope:(NSInteger)i
-{
-	Scope = i;
-}
-
-- (ANTLRMapElement *)getTType:(NSString *)name
-{
-    return [self lookup:name Scope:0];
-}
-
-/*
- * works only for maplist indexed not by name but by TokenNumber
- */
-- (ANTLRMapElement *)getNameInList:(NSInteger)ttype
-{
-    ANTLRMapElement *np;
-    NSInteger aTType;
-
-    aTType = ttype % BuffSize;
-    for( np = self->ptrBuffer[ttype]; np != nil; np = [np getfNext] ) {
-        if ( [np.index integerValue] == ttype ) {
-            return( np );        /*   found it       */
-        }
-    }
-    return( nil );              /*   not found      */
-}
-
-- (ANTLRLinkBase *)getName:(NSString *)name
-{
-    return [self lookup:name Scope:0]; /*  nil if not found      */
-}
-
-- (void)putNode:(NSString *)name TokenType:(NSInteger)ttype
-{
-    ANTLRMapElement *np;
-
-    // install symbol in ptrBuffer
-    np = [ANTLRMapElement newANTLRMapElementWithName:[NSString stringWithString:name] Type:ttype];
-    //        np->fType = toknams[i].toknum;
-    [self install:np Scope:0];
-}
-
-- (NSInteger)getMode
-{
-    return mode;
-}
-
-- (void)setMode:(NSInteger)aMode
-{
-    mode = aMode;
-}
-
-- (void) addObject:(id)aRule
-{
-    NSInteger idx;
-
-    idx = [self count];
-    if ( idx >= BuffSize ) {
-        idx %= BuffSize;
-    }
-    ptrBuffer[idx] = aRule;
-}
-
-/* this may have to handle linking into the chain
- */
-- (void) insertObject:(id)aRule atIndex:(NSInteger)idx
-{
-    if ( idx >= BuffSize ) {
-        idx %= BuffSize;
-    }
-    if (aRule != ptrBuffer[idx]) {
-        if (ptrBuffer[idx] != nil) [ptrBuffer[idx] release];
-        [aRule retain];
-    }
-    ptrBuffer[idx] = aRule;
-}
-
-- (id)objectAtIndex:(NSInteger)idx
-{
-    if ( idx >= BuffSize ) {
-        idx %= BuffSize;
-    }
-    return ptrBuffer[idx];
-}
-
-/* this will never link into the chain
- */
-- (void) setObject:(id)aRule atIndex:(NSInteger)idx
-{
-    if ( idx >= BuffSize ) {
-        idx %= BuffSize;
-    }
-    if (aRule != ptrBuffer[idx]) {
-        if (ptrBuffer[idx] != nil) [ptrBuffer[idx] release];
-        [aRule retain];
-    }
-    ptrBuffer[idx] = aRule;
-}
-
-- (void)putName:(NSString *)name Node:(id)aNode
-{
-    ANTLRMapElement *np;
-
-    np = [self lookup:name Scope:0 ];
-    if ( np == nil ) {
-        np = [ANTLRMapElement newANTLRMapElementWithName:name Node:aNode];
-        if (ptrBuffer[LastHash] != nil)
-            [ptrBuffer[LastHash] release];
-        [np retain];
-        np.fNext = ptrBuffer[ LastHash ];
-        ptrBuffer[ LastHash ] = np;
-    }
-    return;
-}
-
-- (NSEnumerator *)objectEnumerator
-{
-    NSEnumerator *anEnumerator;
-
-    itIndex = 0;
-    return anEnumerator;
-}
-
-- (BOOL)hasNext
-{
-    if (self && [self count] < BuffSize-1) {
-        return YES;
-    }
-    return NO;
-}
-
-- (ANTLRMapElement *)nextObject
-{
-    if (self && itIndex < BuffSize-1) {
-        return ptrBuffer[itIndex];
-    }
-    return nil;
-}
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashRule.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashRule.h
deleted file mode 100644
index f1558e8..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashRule.h
+++ /dev/null
@@ -1,72 +0,0 @@
-//
-//  ANTLRHashRule.h
-//  ANTLR
-//
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRuleMemo.h"
-#import "ANTLRPtrBuffer.h"
-
-#define GLOBAL_SCOPE       0
-#define LOCAL_SCOPE        1
-#define HASHSIZE         101
-#define HBUFSIZE      0x2000
-
-@interface ANTLRHashRule : ANTLRPtrBuffer {
-	//	ANTLRHashRule *fNext;
-    //    TStringPool *fPool;
-    NSInteger LastHash;
-    NSInteger mode;
-}
-
-//@property (copy) ANTLRHashRule *fNext;
-@property (getter=getLastHash, setter=setLastHash:) NSInteger LastHash;
-
-// Contruction/Destruction
-+ (id)newANTLRHashRule;
-+ (id)newANTLRHashRuleWithLen:(NSInteger)aBuffSize;
-- (id)init;
-- (id)initWithLen:(NSInteger)aBuffSize;
-- (void)dealloc;
-
-- (NSInteger)count;
-- (NSInteger)length;
-- (NSInteger)size;
-
-// Instance Methods
-- (void)deleteANTLRHashRule:(ANTLRRuleMemo *)np;
-- (void)delete_chain:(ANTLRRuleMemo *)np;
-- (ANTLRRuleMemo **)getPtrBuffer;
-- (void)setPtrBuffer:(ANTLRRuleMemo **)np;
-- (NSNumber *)getRuleMemoStopIndex:(NSInteger)aStartIndex;
-- (void)putRuleMemoAtStartIndex:(NSInteger)aStartIndex StopIndex:(NSInteger)aStopIndex;
-- (NSInteger)getMode;
-- (void)setMode:(NSInteger)aMode;
-- (void) insertObject:(ANTLRRuleMemo *)aRule atIndex:(NSInteger)Index;
-- (ANTLRRuleMemo *) objectAtIndex:(NSInteger)Index;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashRule.m b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashRule.m
deleted file mode 100644
index 93ce3a1..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRHashRule.m
+++ /dev/null
@@ -1,281 +0,0 @@
-//
-//  ANTLRHashRule.m
-//  ANTLR
-//
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#define SUCCESS (0)
-#define FAILURE (-1)
-#define ANTLR_MEMO_RULE_UNKNOWN -1
-
-#import "ANTLRHashRule.h"
-
-/*
- * Start of ANTLRHashRule
- */
-@implementation ANTLRHashRule
-
-@synthesize LastHash;
-
-+(id)newANTLRHashRule
-{
-    ANTLRHashRule *aNewANTLRHashRule;
-
-    aNewANTLRHashRule = [[ANTLRHashRule alloc] init];
-	return( aNewANTLRHashRule );
-}
-
-+(id)newANTLRHashRuleWithLen:(NSInteger)aBuffSize
-{
-    ANTLRHashRule *aNewANTLRHashRule;
-
-    aNewANTLRHashRule = [[ANTLRHashRule alloc] initWithLen:aBuffSize];
-	return( aNewANTLRHashRule );
-}
-
--(id)init
-{
-	if ((self = [super initWithLen:HASHSIZE]) != nil) {
-		fNext = nil;
-	}
-    return( self );
-}
-
--(id)initWithLen:(NSInteger)aBuffSize
-{
-	if ((self = [super initWithLen:aBuffSize]) != nil) {
-		fNext = nil;
-        mode = 0;
-	}
-    return( self );
-}
-
--(void)dealloc
-{
-    ANTLRRuleMemo *tmp, *rtmp;
-    int Index;
-
-    if ( self.fNext != nil ) {
-        for( Index = 0; Index < BuffSize; Index++ ) {
-            tmp = ptrBuffer[Index];
-            while ( tmp && tmp != ptrBuffer[Index] ) {
-                rtmp = tmp;
-                // tmp = [tmp getfNext];
-                tmp = (ANTLRRuleMemo *)tmp.fNext;
-                [rtmp dealloc];
-            }
-        }
-    }
-	[super dealloc];
-}
-
-- (NSInteger)count
-{
-    id anElement;
-    NSInteger aCnt = 0;
-
-    for (int i = 0; i < BuffSize; i++) {
-        anElement = ptrBuffer[i];
-        if ( anElement != nil ) {
-            aCnt++;
-        }
-    }
-    return aCnt;
-}
-
-- (NSInteger) length
-{
-    return BuffSize;
-}
-
-- (NSInteger) size
-{
-    id anElement;
-    NSInteger aSize = 0;
-
-    for (int i = 0; i < BuffSize; i++) {
-        if ((anElement = ptrBuffer[i]) != nil) {
-            aSize += sizeof(id);
-        }
-    }
-    return aSize;
-}
-
-
--(void)deleteANTLRHashRule:(ANTLRRuleMemo *)np
-{
-    ANTLRRuleMemo *tmp, *rtmp;
-    int Index;
-
-    if ( self.fNext != nil ) {
-        for( Index = 0; Index < BuffSize; Index++ ) {
-            tmp = ptrBuffer[Index];
-            while ( tmp && tmp != ptrBuffer[Index ] ) {
-                rtmp = tmp;
-                tmp = tmp.fNext;
-                [rtmp dealloc];
-            }
-        }
-    }
-}
-
--(void)delete_chain:(ANTLRRuleMemo *)np
-{
-    if ( np.fNext != nil )
-		[self delete_chain:np.fNext];
-	[np dealloc];
-}
-
--(ANTLRRuleMemo **)getPtrBuffer
-{
-	return( ptrBuffer );
-}
-
--(void)setPtrBuffer:(ANTLRRuleMemo **)np
-{
-	ptrBuffer = np;
-}
-
-- (NSNumber *)getRuleMemoStopIndex:(NSInteger)aStartIndex
-{
-    ANTLRRuleMemo *aRule;
-    NSNumber *stopIndex;
-    NSInteger anIndex;
-
-    anIndex = ( aStartIndex >= BuffSize ) ? aStartIndex %= BuffSize : aStartIndex;
-    if ((aRule = ptrBuffer[anIndex]) == nil) {
-        return nil;
-    }
-    stopIndex = [aRule getStopIndex:aStartIndex];
-    return stopIndex;
-}
-
-- (void)putRuleMemo:(ANTLRRuleMemo *)aRule AtStartIndex:(NSInteger)aStartIndex
-{
-    NSInteger anIndex;
-
-    anIndex = (aStartIndex >= BuffSize) ? aStartIndex %= BuffSize : aStartIndex;
-    if ( ptrBuffer[anIndex] == nil ) {
-        ptrBuffer[anIndex] = aRule;
-        [aRule retain];
-    }
-    else {
-        do {
-            if ( [aRule.startIndex integerValue] == aStartIndex ) {
-                [aRule setStartIndex:aRule.stopIndex];
-                return;
-            }
-            aRule = aRule.fNext;
-        } while ( aRule != nil );
-    }
-}
-
-- (void)putRuleMemoAtStartIndex:(NSInteger)aStartIndex StopIndex:(NSInteger)aStopIndex
-{
-    ANTLRRuleMemo *aRule, *newRule;
-    NSInteger anIndex;
-    NSInteger aMatchIndex;
-
-    anIndex = (aStartIndex >= BuffSize) ? aStartIndex %= BuffSize : aStartIndex;
-    if ((aRule = ptrBuffer[anIndex]) == nil ) {
-        aRule = [ANTLRRuleMemo newANTLRRuleMemoWithStartIndex:[NSNumber numberWithInteger:aStartIndex]
-                                                    StopIndex:[NSNumber numberWithInteger:aStopIndex]];
-        [aRule retain];
-        ptrBuffer[anIndex] = aRule;
-    }
-    else {
-        aMatchIndex = [aRule.startIndex integerValue];
-        if ( aStartIndex > aMatchIndex ) {
-            if ( aRule != ptrBuffer[anIndex] ) {
-                [aRule retain];
-            }
-            aRule.fNext = ptrBuffer[anIndex];
-            ptrBuffer[anIndex] = aRule;
-            return;
-        }
-        while (aRule.fNext != nil) {
-            aMatchIndex = [((ANTLRRuleMemo *)aRule.fNext).startIndex integerValue];
-            if ( aStartIndex > aMatchIndex ) {
-                newRule = [ANTLRRuleMemo newANTLRRuleMemoWithStartIndex:[NSNumber numberWithInteger:aStartIndex]
-                                                              StopIndex:[NSNumber numberWithInteger:aStopIndex]];
-                [newRule retain];
-                newRule.fNext = aRule.fNext;
-                aRule.fNext = newRule;
-                return;
-            }
-            if ( aMatchIndex == aStartIndex ) {
-                [aRule setStartIndex:aRule.stopIndex];
-                return;
-            }
-            aRule = aRule.fNext;
-        }
-    }
-}
-
-- (NSInteger)getLastHash
-{
-    return LastHash;
-}
-
-- (void)setLastHash:(NSInteger)aHash
-{
-    LastHash = aHash;
-}
-
-- (NSInteger)getMode
-{
-    return mode;
-}
-
-- (void)setMode:(NSInteger)aMode
-{
-    mode = aMode;
-}
-
-- (void) insertObject:(ANTLRRuleMemo *)aRule atIndex:(NSInteger)anIndex
-{
-    NSInteger Index;
-
-    Index = ( anIndex >= BuffSize ) ? anIndex %= BuffSize : anIndex;
-    if (aRule != ptrBuffer[Index]) {
-        if (ptrBuffer[Index] != nil) {
-            [ptrBuffer[Index] release];
-        }
-        [aRule retain];
-    }
-    ptrBuffer[Index] = aRule;
-}
-
-- (ANTLRRuleMemo *)objectAtIndex:(NSInteger)anIndex
-{
-    NSInteger anIdx;
-
-    anIdx = ( anIndex >= BuffSize ) ? anIndex %= BuffSize : anIndex;
-    return ptrBuffer[anIdx];
-}
-
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRIntArray.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRIntArray.h
deleted file mode 100644
index 5269b23..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRIntArray.h
+++ /dev/null
@@ -1,60 +0,0 @@
-//
-//  ANTLRIntArray.h
-//  ANTLR
-//
-// Copyright (c) 2010 Ian Michell 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRPtrBuffer.h"
-
-#define ANTLR_INT_ARRAY_INITIAL_SIZE 10
-
-@interface ANTLRIntArray : ANTLRPtrBuffer
-{
-}
-
-+ (ANTLRIntArray *)newANTLRIntArray;
-+ (ANTLRIntArray *)newANTLRIntArrayWithLen:(NSInteger)aLen;
-
-- (id) init;
-- (id) initWithLen:(NSInteger)aLen;
-
-- (void) dealloc;
-
-- (id) copyWithZone:(NSZone *)aZone;
-
-- (void) addInteger:(NSInteger) v;
-- (void) push:(NSInteger) v;
-- (NSInteger) pop;
-- (NSInteger) integerAtIndex:(NSInteger) i;
-- (void) insertInteger:(NSInteger)anInteger AtIndex:(NSInteger) idx;
-- (NSInteger) size;
-- (void) reset;
-
-- (NSInteger) count;
-- (NSInteger) size;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRIntStream.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRIntStream.h
deleted file mode 100755
index 3790cd9..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRIntStream.h
+++ /dev/null
@@ -1,93 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-@protocol ANTLRIntStream < NSObject, NSCopying >
-
-- (void) consume;
-
-// Get unichar at current input pointer + i ahead where i=1 is next character as int for including ANTLRCharStreamEOF (-1) in the data range
-- (NSInteger) LA:(NSInteger) i;
-
-// Tell the stream to start buffering if it hasn't already.  Return
-// current input position, index(), or some other marker so that
-// when passed to rewind() you get back to the same spot.
-// rewind(mark()) should not affect the input cursor.
-// TODO: problem in that lexer stream returns not index but some marker
-
-- (NSInteger) mark;
-
-// Return the current input symbol index 0..n where n indicates the
-// last symbol has been read.
-
-- (NSInteger) getIndex;
-
-// Reset the stream so that next call to index would return marker.
-// The marker will usually be -index but it doesn't have to be.  It's
-// just a marker to indicate what state the stream was in.  This is
-// essentially calling -release: and -seek:.  If there are markers
-// created after this marker argument, this routine must unroll them
-// like a stack.  Assume the state the stream was in when this marker
-// was created.
-
-- (void) rewind;
-- (void) rewind:(NSInteger) marker;
-
-// You may want to commit to a backtrack but don't want to force the
-// stream to keep bookkeeping objects around for a marker that is
-// no longer necessary.  This will have the same behavior as
-// rewind() except it releases resources without the backward seek.
-
-- (void) release:(NSInteger) marker;
-
-// Set the input cursor to the position indicated by index.  This is
-// normally used to seek ahead in the input stream.  No buffering is
-// required to do this unless you know your stream will use seek to
-// move backwards such as when backtracking.
-// This is different from rewind in its multi-directional
-// requirement and in that its argument is strictly an input cursor (index).
-//
-// For char streams, seeking forward must update the stream state such
-// as line number.  For seeking backwards, you will be presumably
-// backtracking using the mark/rewind mechanism that restores state and
-// so this method does not need to update state when seeking backwards.
-//
-// Currently, this method is only used for efficient backtracking, but
-// in the future it may be used for incremental parsing.
-
-- (void) seek:(NSInteger) index;
-
-/** Only makes sense for streams that buffer everything up probably, but
- *  might be useful to display the entire stream or for testing.  This
- *  value includes a single EOF.
- */
-- (NSUInteger) size;
-/** Where are you getting symbols from?  Normally, implementations will
- *  pass the buck all the way to the lexer who can ask its input stream
- *  for the file name or whatever.
- */
-- (NSString *)getSourceName;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLexer.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLexer.h
deleted file mode 100755
index 5cfb36f..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLexer.h
+++ /dev/null
@@ -1,90 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRTokenSource.h"
-#import "ANTLRBaseRecognizer.h"
-#import "ANTLRRecognizerSharedState.h"
-#import "ANTLRCharStream.h"
-#import "ANTLRToken.h"
-#import "ANTLRCommonToken.h"
-#import "ANTLRRecognitionException.h"
-#import "ANTLRMismatchedTokenException.h"
-#import "ANTLRMismatchedRangeException.h"
-
-@interface ANTLRLexer : ANTLRBaseRecognizer <ANTLRTokenSource> {
-	id<ANTLRCharStream> input;      ///< The character stream we pull tokens out of.
-	NSUInteger ruleNestingLevel;
-}
-
-@property (retain, getter=getInput, setter=setInput:) id<ANTLRCharStream> input;
-@property (getter=getRuleNestingLevel, setter=setRuleNestingLevel) NSUInteger ruleNestingLevel;
-
-#pragma mark Initializer
-- (id) initWithCharStream:(id<ANTLRCharStream>) anInput;
-- (id) initWithCharStream:(id<ANTLRCharStream>)anInput State:(ANTLRRecognizerSharedState *)state;
-
-- (id) copyWithZone:(NSZone *)zone;
-
-- (void) reset;
-
-// - (ANTLRRecognizerSharedState *) state;
-
-#pragma mark Tokens
-- (id<ANTLRToken>)getToken;
-- (void) setToken: (id<ANTLRToken>) aToken;
-- (id<ANTLRToken>) nextToken;
-- (void) mTokens;		// abstract, defined in generated sources
-- (void) skip;
-- (id<ANTLRCharStream>) getInput;
-- (void) setInput:(id<ANTLRCharStream>)aCharStream;
-
-- (void) emit;
-- (void) emit:(id<ANTLRToken>)aToken;
-
-#pragma mark Matching
-- (void) matchString:(NSString *)aString;
-- (void) matchAny;
-- (void) matchChar:(unichar) aChar;
-- (void) matchRangeFromChar:(unichar)fromChar to:(unichar)toChar;
-
-#pragma mark Informational
-- (NSUInteger) getLine;
-- (NSUInteger) getCharPositionInLine;
-- (NSInteger) getIndex;
-- (NSString *) getText;
-- (void) setText:(NSString *) theText;
-
-// error handling
-- (void) reportError:(ANTLRRecognitionException *)e;
-- (NSString *)getErrorMessage:(ANTLRRecognitionException *)e TokenNames:(NSMutableArray *)tokenNames;
-- (NSString *)getCharErrorDisplay:(NSInteger)c;
-- (void) recover:(ANTLRRecognitionException *)e;
-- (void)traceIn:(NSString *)ruleName Index:(NSInteger)ruleIndex;
-- (void)traceOut:(NSString *)ruleName Index:(NSInteger)ruleIndex;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLexerRuleReturnScope.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLexerRuleReturnScope.h
deleted file mode 100755
index 18ae374..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLexerRuleReturnScope.h
+++ /dev/null
@@ -1,42 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-
-@interface ANTLRLexerRuleReturnScope : NSObject {
-	int startToken;
-	int stopToken;
-}
-
-- (NSInteger) getStart;
-- (void) setStart: (NSInteger) aStart;
-
-- (NSInteger) getStop;
-- (void) setStop: (NSInteger) aStop;
-
-
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLinkBase.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLinkBase.h
deleted file mode 100644
index 21019e6..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLinkBase.h
+++ /dev/null
@@ -1,74 +0,0 @@
-//
-//  ANTLRLinkBase.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/14/10.
-//  [The "BSD licence"]
-//  Copyright (c) 2010 Alan Condit
-//  All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-
-@protocol ANTLRLinkList <NSObject>
-
-+ (id<ANTLRLinkList>)newANTLRLinkBase;
-+ (id<ANTLRLinkList>)newANTLRLinkBase:(id<ANTLRLinkList>)np Prev:(id<ANTLRLinkList>)pp;
-
-- (void) dealloc;
-
-- (id<ANTLRLinkList>) append:(id<ANTLRLinkList>)node;
-- (id<ANTLRLinkList>) insert:(id<ANTLRLinkList>)node;
-
-- (id<ANTLRLinkList>) getfNext;
-- (void) setFNext:(id<ANTLRLinkList>)np;
-- (id<ANTLRLinkList>)getfPrev;
-- (void) setFPrev:(id<ANTLRLinkList>)pp;
-
-@end
-
-@interface ANTLRLinkBase : NSObject <ANTLRLinkList> {
-	id<ANTLRLinkList> fPrev;
-	id<ANTLRLinkList> fNext;
-}
-
-@property (retain, getter=getfPrev, setter=setFPrev:) id<ANTLRLinkList> fPrev;
-@property (retain, getter=getfNext, setter=setFNext:) id<ANTLRLinkList> fNext;
-
-+ (id<ANTLRLinkList>)newANTLRLinkBase;
-+ (id<ANTLRLinkList>)newANTLRLinkBase:(id<ANTLRLinkList>)np Prev:(id<ANTLRLinkList>)pp;
-- (id<ANTLRLinkList>)init;
-- (id<ANTLRLinkList>)initWithPtr:(id)np Prev:(id)pp;
-- (void)dealloc;
-
-- (id) copyWithZone:(NSZone *)aZone;
-
-- (id<ANTLRLinkList>)append:(id<ANTLRLinkList>)node;
-- (id<ANTLRLinkList>)insert:(id<ANTLRLinkList>)node;
-
-- (id<ANTLRLinkList>)getfNext;
-- (void)setFNext:(id<ANTLRLinkList>) np;
-- (id<ANTLRLinkList>)getfPrev;
-- (void)setFPrev:(id<ANTLRLinkList>) pp;
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLookaheadStream.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLookaheadStream.h
deleted file mode 100644
index ad48ff5..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRLookaheadStream.h
+++ /dev/null
@@ -1,73 +0,0 @@
-//
-//  ANTLRLookaheadStream.h
-//  ANTLR
-//
-//  Created by Ian Michell on 26/04/2010.
-//  [The "BSD licence"]
-//  Copyright (c) 2010 Ian Michell 2010 Alan Condit
-//  All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRFastQueue.h"
-
-#define UNITIALIZED_EOF_ELEMENT_INDEX NSIntegerMax
-
-@interface ANTLRLookaheadStream : ANTLRFastQueue
-{
-	id eof;
-	NSInteger eofElementIndex;
-	NSInteger lastMarker;
-	NSInteger markDepth;
-}
-
-@property (readwrite, retain, getter=getEof, setter=setEof) id eof;
-@property (assign, getter=getEofElementIndex, setter=setEofElementIndex) NSInteger eofElementIndex;
-@property (assign, getter=getLastMarker, setter=setLastMarker) NSInteger lastMarker;
-@property (assign, getter=getMarkDepth, setter=setMarkDepth) NSInteger markDepth;
-
-- (id) initWithEOF:(id) o;
-- (id) nextElement;
-- (void) consume;
-- (void) sync:(NSInteger) need;
-- (void) fill:(NSInteger) n;
-- (id) LT:(NSInteger) i;
-- (id) LB:(NSInteger) i;
-- (id) currentSymbol;
-- (NSInteger) getIndex;
-- (NSInteger) mark;
-- (void) release:(NSInteger) marker;
-- (void) rewind:(NSInteger) marker;
-- (void) rewind;
-- (void) seek:(NSInteger) i;
-- (id) getEof;
-- (void) setEof:(id) anID;
-- (NSInteger) getEofElementIndex;
-- (void) setEofElementIndex:(NSInteger) anInt;
-- (NSInteger) getLastMarker;
-- (void) setLastMarker:(NSInteger) anInt;
-- (NSInteger) getMarkDepth;
-- (void) setMarkDepth:(NSInteger) anInt;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMap.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMap.h
deleted file mode 100644
index 80ad486..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMap.h
+++ /dev/null
@@ -1,82 +0,0 @@
-//
-//  ANTLRMap.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/9/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRPtrBuffer.h"
-#import "ANTLRMapElement.h"
-
-//#define GLOBAL_SCOPE      0
-//#define LOCAL_SCOPE       1
-#define HASHSIZE            101
-#define HBUFSIZE            0x2000
-
-@interface ANTLRMap : ANTLRPtrBuffer {
-	//ANTLRMap *fNext; // found in superclass
-    // TStringPool *fPool;
-    NSInteger lastHash;
-}
-
-//@property (copy) ANTLRMap *fNext;
-@property (getter=getLastHash, setter=setLastHash:) NSInteger lastHash;
-
-// Contruction/Destruction
-+ (id)newANTLRMap;
-+ (id)newANTLRMapWithLen:(NSInteger)aHashSize;
-
-- (id)init;
-- (id)initWithLen:(NSInteger)cnt;
-- (void)dealloc;
-// Instance Methods
-- (NSInteger)count;
-- (NSInteger)length;
-- (NSInteger)size;
-/* clear -- reinitialize the maplist array */
-- (void) clear;
-/* form hash value for string s */
--(NSInteger)hash:(NSString *)s;
-/*   look for s in ptrBuffer  */
--(id)lookup:(NSString *)s;
-/* look for s in ptrBuffer  */
--(id)install:(ANTLRMapElement *)sym;
-/*
- * delete entry from list
- */
-- (void)deleteANTLRMap:(ANTLRMapElement *)np;
-- (NSInteger)RemoveSym:(NSString *)s;
-- (void)delete_chain:(ANTLRMapElement *)np;
-- (ANTLRMapElement *)getTType:(NSString *)name;
-- (ANTLRMapElement *)getName:(NSInteger)ttype;
-- (NSInteger)getNode:(ANTLRMapElement *)aNode;
-- (void)putNode:(NSInteger)aTType Node:(id)aNode;
-- (void)putName:(NSString *)name TType:(NSInteger)ttype;
-- (void)putName:(NSString *)name Node:(id)aNode;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMapElement.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMapElement.h
deleted file mode 100644
index e20d01c..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMapElement.h
+++ /dev/null
@@ -1,65 +0,0 @@
-//
-//  ANTLRMapElement.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/8/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRBaseMapElement.h"
-
-@interface ANTLRMapElement : ANTLRBaseMapElement {
-    NSString *name;
-    id        node;
-}
-@property (retain, getter=getName, setter=setName:) NSString *name;
-@property (retain, getter=getNode, setter=setNode:) id node;
-
-+ (id) newANTLRMapElement;
-+ (id) newANTLRMapElementWithName:(NSString *)aName Type:(NSInteger)aTType;
-+ (id) newANTLRMapElementWithNode:(NSInteger)aTType Node:(id)aNode;
-+ (id) newANTLRMapElementWithName:(NSString *)aName Node:(id)aNode;
-+ (id) newANTLRMapElementWithObj1:(id)anObj1 Obj2:(id)anObj2;
-- (id) init;
-- (id) initWithName:(NSString *)aName Type:(NSInteger)aTType;
-- (id) initWithNode:(NSInteger)aTType Node:(id)aNode;
-- (id) initWithName:(NSString *)aName Node:(id)aNode;
-- (id) initWithObj1:(id)anObj1 Obj2:(id)anObj2;
-
-- (id) copyWithZone:(NSZone *)aZone;
-
-- (NSInteger) count;
-- (NSInteger) size;
-- (NSString *)getName;
-- (void)setName:(NSString *)aName;
-- (id)getNode;
-- (void)setNode:(id)aNode;
-- (void)putNode:(id)aNode;
-- (void)putNode:(id)aNode With:(NSInteger)uniqueID;
-//- (void)setObject:(id)aNode atIndex:anIndex;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedNotSetException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedNotSetException.h
deleted file mode 100644
index 57391d5..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedNotSetException.h
+++ /dev/null
@@ -1,51 +0,0 @@
-//
-//  ANTLRMismatchedNotSetException.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/13/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRecognitionException.h"
-#import "ANTLRBitSet.h"
-
-@interface ANTLRMismatchedNotSetException : ANTLRRecognitionException
-{
-    ANTLRBitSet *expecting;
-}
-@property (retain, getter=getExpecting, setter=setExpecting) ANTLRBitSet *expecting;
-
-- (ANTLRMismatchedNotSetException *)newANTLRMismatchedNotSetException;
-- (ANTLRMismatchedNotSetException *)newANTLRMismatchedNotSetException:(id<ANTLRIntStream>)anInput
-                                                               Follow:(ANTLRBitSet *)expecting;
-
-- (id) init;
-- (id) initWithStream:(id<ANTLRIntStream>)anInput Follow:(ANTLRBitSet *)expecting;
-
-- (NSString *)toString;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedRangeException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedRangeException.h
deleted file mode 100755
index abda3bb..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedRangeException.h
+++ /dev/null
@@ -1,40 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRecognitionException.h"
-
-@protocol ANTLRIntStream;
-
-
-@interface ANTLRMismatchedRangeException : ANTLRRecognitionException {
-	NSRange range;
-}
-
-+ (id) exceptionWithRange:(NSRange) aRange stream:(id<ANTLRIntStream>) theInput;
-- (id) initWithRange:(NSRange) aRange stream:(id<ANTLRIntStream>) theInput;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedSetException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedSetException.h
deleted file mode 100755
index 3bd45fc..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedSetException.h
+++ /dev/null
@@ -1,44 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRecognitionException.h"
-
-@interface ANTLRMismatchedSetException : ANTLRRecognitionException {
-	NSSet *expecting;
-}
-
-@property (retain, getter=getExpecting, setter=setExpecting:) NSSet *expecting;
-
-+ (id) exceptionWithSet:(NSSet *) theExpectedSet stream:(id<ANTLRIntStream>) theStream;
-- (id) initWithSet:(NSSet *) theExpectedSet stream:(id<ANTLRIntStream>) theStream;
-
-- (NSSet *) getExpecting;
-- (void) setExpecting: (NSSet *) anExpectedSet;
-
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedTokenException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedTokenException.h
deleted file mode 100755
index 5e1d77d..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedTokenException.h
+++ /dev/null
@@ -1,58 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRecognitionException.h"
-#import "ANTLRBitSet.h"
-
-@protocol ANTLRIntStream;
-
-@interface ANTLRMismatchedTokenException : ANTLRRecognitionException {
-	NSInteger expecting;
-	unichar expectingChar;
-	BOOL isTokenType;
-}
-
-@property (assign, getter=getExpecting, setter=setExpecting:) NSInteger expecting;
-@property (assign, getter=getExpectingChar, setter=setExpectingChar:) unichar expectingChar;
-@property (assign, getter=getIsTokenType, setter=setIsTokenType:) BOOL isTokenType;
-
-+ (id) newANTLRMismatchedTokenException:(NSInteger)expectedTokenType Stream:(id<ANTLRIntStream>)anInput;
-+ (id) newANTLRMismatchedTokenExceptionMissing:(NSInteger)expectedTokenType
-                                        Stream:(id<ANTLRIntStream>)anInput
-                                         Token:(id<ANTLRToken>)inserted;
-+ (id) newANTLRMismatchedTokenExceptionChar:(unichar)expectedCharacter Stream:(id<ANTLRIntStream>)anInput;
-+ (id) newANTLRMismatchedTokenExceptionStream:(id<ANTLRIntStream>)anInput
-                                    Exception:(NSException *)e
-                                       Follow:(ANTLRBitSet *)follow;
-- (id) initWithTokenType:(NSInteger)expectedTokenType Stream:(id<ANTLRIntStream>)anInput;
--(id) initWithTokenType:(NSInteger)expectedTokenType
-                 Stream:(id<ANTLRIntStream>)anInput
-                  Token:(id<ANTLRToken>)inserted;
-- (id) initWithCharacter:(unichar)expectedCharacter Stream:(id<ANTLRIntStream>)anInput;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedTreeNodeException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedTreeNodeException.h
deleted file mode 100755
index b61ab51..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMismatchedTreeNodeException.h
+++ /dev/null
@@ -1,42 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRecognitionException.h"
-
-@protocol ANTLRIntStream;
-
-@interface ANTLRMismatchedTreeNodeException : ANTLRRecognitionException {
-	NSInteger expecting;
-}
-
-@property (getter=getExpecting, setter=setExpecting) NSInteger expecting;
-
-+ (id) newANTLRMismatchedTreeNodeException:(NSInteger)expectedTokenType Stream:(id<ANTLRIntStream>)anInput;
-- (id) initWithTokenType:(NSInteger) expectedTokenType Stream:(id<ANTLRIntStream>)anInput;
-
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMissingTokenException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMissingTokenException.h
deleted file mode 100644
index 1398e25..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRMissingTokenException.h
+++ /dev/null
@@ -1,51 +0,0 @@
-//
-//  ANTLRMissingTokenException.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/8/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRMismatchedTokenException.h"
-#import "ANTLRToken.h"
-
-@interface ANTLRMissingTokenException : ANTLRMismatchedTokenException {
-    id<ANTLRToken> inserted;
-}
-/** Used for remote debugger deserialization */
-+ (id) newANTLRMissingTokenException;
-+ (id) newANTLRMissingTokenException:(NSInteger)expected
-                              Stream:(id<ANTLRIntStream>)anInput
-                                With:(id<ANTLRToken>)insertedToken;
-- (id) init;
-- (id) init:(NSInteger)expected Stream:(id<ANTLRIntStream>)anInput With:(id<ANTLRToken>)insertedToken;
-
-- (NSInteger) getMissingType;
-
-- (NSString *)toString;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRNoViableAltException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRNoViableAltException.h
deleted file mode 100755
index b71baff..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRNoViableAltException.h
+++ /dev/null
@@ -1,43 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRecognitionException.h"
-#import "ANTLRIntStream.h"
-
-@interface ANTLRNoViableAltException : ANTLRRecognitionException {
-	int decisionNumber;
-	int stateNumber;
-}
-
-+ (ANTLRNoViableAltException *) newANTLRNoViableAltException:(NSInteger)theDecisionNumber state:(NSInteger)theStateNumber stream:(id<ANTLRIntStream>)theStream;
-- (ANTLRNoViableAltException *) initWithDecision:(NSInteger)theDecisionNumber state:(NSInteger)theStateNumber stream:(id<ANTLRIntStream>)theStream;
-
-- (void)setDecisionNumber:(NSInteger)decisionNumber;
-- (void)setStateNumber:(NSInteger)stateNumber;
-
-
-@end
\ No newline at end of file
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRNodeMapElement.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRNodeMapElement.h
deleted file mode 100644
index 1c0c916..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRNodeMapElement.h
+++ /dev/null
@@ -1,56 +0,0 @@
-//
-//  ANTLRRuleMapElement.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/16/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRBaseMapElement.h"
-#import "ANTLRTree.h"
-
-@interface ANTLRNodeMapElement : ANTLRBaseMapElement {
-    id<ANTLRTree> node;
-}
-
-@property (retain, getter=getNode, setter=setNode:) id node;
-
-+ (void)initialize;
-
-+ (id) newANTLRNodeMapElement;
-+ (id) newANTLRNodeMapElementWithIndex:(id)anIndex Node:(id<ANTLRTree>)aNode;
-- (id) init;
-- (id) initWithAnIndex:(id)anIndex Node:(id)aNode;
-
-- (id) copyWithZone:(NSZone *)aZone;
-
-- (id<ANTLRTree>)getNode;
-- (void)setNode:(id<ANTLRTree>)aNode;
-
-- (NSInteger)size;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRParseTree.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRParseTree.h
deleted file mode 100644
index 92554e3..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRParseTree.h
+++ /dev/null
@@ -1,60 +0,0 @@
-//
-//  ANTLRParseTree.h
-//  ANTLR
-//
-//  Created by Alan Condit on 7/12/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRBaseTree.h"
-#import "ANTLRCommonToken.h"
-
-@interface ANTLRParseTree : ANTLRBaseTree {
-	id<ANTLRToken> payload;
-	NSMutableArray *hiddenTokens;
-}
-/** A record of the rules used to match a token sequence.  The tokens
- *  end up as the leaves of this tree and rule nodes are the interior nodes.
- *  This really adds no functionality, it is just an alias for CommonTree
- *  that is more meaningful (specific) and holds a String to display for a node.
- */
-+ (ANTLRParseTree *)newANTLRParseTree:(id<ANTLRToken>)label;
-- (id)initWithLabel:(id<ANTLRToken>)label;
-
-- (id<ANTLRTree>)dupNode;
-- (NSInteger)getType;
-- (NSString *)getText;
-- (NSInteger)getTokenStartIndex;
-- (void)setTokenStartIndex:(NSInteger)index;
-- (NSInteger)getTokenStopIndex;
-- (void)setTokenStopIndex:(NSInteger)index;
-- (NSString *)toString;
-- (NSString *)toStringWithHiddenTokens;
-- (NSString *)toInputString;
-- (void)_toStringLeaves:(NSMutableString *)buf;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRParser.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRParser.h
deleted file mode 100755
index 5ddaf50..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRParser.h
+++ /dev/null
@@ -1,59 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRBaseRecognizer.h"
-#import "ANTLRCommonToken.h"
-#import "ANTLRTokenStream.h"
-
-@interface ANTLRParser : ANTLRBaseRecognizer {
-	id<ANTLRTokenStream> input;
-}
-+ (ANTLRParser *)newANTLRParser:(id<ANTLRTokenStream>)anInput;
-+ (ANTLRParser *)newANTLRParser:(id<ANTLRTokenStream>)anInput State:(ANTLRRecognizerSharedState *)aState;
-
-- (id) initWithTokenStream:(id<ANTLRTokenStream>)theStream;
-- (id) initWithTokenStream:(id<ANTLRTokenStream>)theStream State:(ANTLRRecognizerSharedState *)aState;
-
-- (id<ANTLRTokenStream>) getInput;
-- (void) setInput: (id<ANTLRTokenStream>) anInput;
-
-- (void) reset;
-
-- (id) getCurrentInputSymbol:(id<ANTLRTokenStream>)anInput;
-- (ANTLRCommonToken *)getMissingSymbol:(id<ANTLRTokenStream>)input
-                             Exception:(ANTLRRecognitionException *)e
-                                 TType:(NSInteger)expectedTokenType
-                                BitSet:(ANTLRBitSet *)follow;
-- (void) setTokenStream:(id<ANTLRTokenStream>)anInput;
-- (id<ANTLRTokenStream>)getTokenStream;
-- (NSString *)getSourceName;
-
-- (void) traceIn:(NSString *)ruleName Index:(int)ruleIndex;
-- (void) traceOut:(NSString *)ruleName Index:(NSInteger) ruleIndex;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRParserRuleReturnScope.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRParserRuleReturnScope.h
deleted file mode 100755
index aef3dd0..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRParserRuleReturnScope.h
+++ /dev/null
@@ -1,46 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRToken.h"
-#import "ANTLRRuleReturnScope.h"
-
-@interface ANTLRParserRuleReturnScope : ANTLRRuleReturnScope {
-	id<ANTLRToken> startToken;
-	id<ANTLRToken> stopToken;
-}
-@property (retain, getter=getStart, setter=setStart:) id<ANTLRToken> startToken;
-@property (retain, getter=getStop, setter=setStop:)   id<ANTLRToken> stopToken;
-
-- (id<ANTLRToken>) getStart;
-- (void) setStart: (id<ANTLRToken>) aStart;
-
-- (id<ANTLRToken>) getStop;
-- (void) setStop: (id<ANTLRToken>) aStop;
-
-- (id) copyWithZone:(NSZone *)theZone;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRPtrBuffer.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRPtrBuffer.h
deleted file mode 100644
index 188f597..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRPtrBuffer.h
+++ /dev/null
@@ -1,91 +0,0 @@
-//
-//  ANTLRPtrBuffer.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/9/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRLinkBase.h"
-
-//#define GLOBAL_SCOPE       0
-//#define LOCAL_SCOPE        1
-#define BUFFSIZE         101
-
-@interface ANTLRPtrBuffer : ANTLRLinkBase {
-	//ANTLRPtrBuffer *fNext;
-    NSInteger BuffSize;
-    NSMutableData *buffer;
-    id *ptrBuffer;
-    NSInteger count;
-    NSInteger ptr;
-}
-
-@property (getter=getBuffSize, setter=setBuffSize:) NSInteger BuffSize;
-@property (retain, getter=getBuffer, setter=setBuffer:) NSMutableData *buffer;
-@property (retain, getter=getPtrBuffer, setter=setPtrBuffer:) id *ptrBuffer;
-@property (getter=getCount, setter=setCount:) NSInteger count;
-@property (getter=getPtr, setter=setPtr:) NSInteger ptr;
-
-// Contruction/Destruction
-+(ANTLRPtrBuffer *)newANTLRPtrBuffer;
-+(ANTLRPtrBuffer *)newANTLRPtrBufferWithLen:(NSInteger)cnt;
--(id)init;
--(id)initWithLen:(NSInteger)cnt;
--(void)dealloc;
-
-// Instance Methods
-- (id) copyWithZone:(NSZone *)aZone;
-/* clear -- reinitialize the maplist array */
-- (void) clear;
-
-- (NSInteger)count;
-- (NSInteger)length;
-- (NSInteger)size;
-
-- (NSMutableData *)getBuffer;
-- (void)setBuffer:(NSMutableData *)np;
-- (NSInteger)getCount;
-- (void)setCount:(NSInteger)aCount;
-- (id *)getPtrBuffer;
-- (void)setPtrBuffer:(id *)np;
-- (NSInteger)getPtr;
-- (void)setPtr:(NSInteger)np;
-
-- (void) push:(id) v;
-- (id) pop;
-- (id) peek;
-
-- (void) addObject:(id) v;
-- (void) addObjectsFromArray:(ANTLRPtrBuffer *)anArray;
-- (void) insertObject:(id)aRule atIndex:(NSInteger)idx;
-- (id)   objectAtIndex:(NSInteger)idx;
-- (void) removeAllObjects;
-
-- (void) ensureCapacity:(NSInteger) index;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRecognitionException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRecognitionException.h
deleted file mode 100755
index 853dc0e..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRecognitionException.h
+++ /dev/null
@@ -1,72 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRuntimeException.h"
-#import "ANTLRToken.h"
-#import "ANTLRIntStream.h"
-#import "ANTLRTree.h"
-
-@interface ANTLRRecognitionException : ANTLRRuntimeException {
-	id<ANTLRIntStream> input;
-	NSInteger index;
-	id<ANTLRToken> token;
-	id<ANTLRTree> node;
-	unichar c;
-	NSInteger line;
-	NSInteger charPositionInLine;
-}
-
-@property (retain, getter=getStream, setter=setStream:) id<ANTLRIntStream> input;
-@property (retain, getter=getToken, setter=setToken:) id<ANTLRToken>token;
-@property (retain, getter=getNode, setter=setNode:) id<ANTLRTree>node;
-@property (getter=getLine, setter=setLine:) NSInteger line;
-@property (getter=getCharPositionInLine, setter=setCharPositionInLine:) NSInteger charPositionInLine;
-
-+ (ANTLRRecognitionException *) newANTLRRecognitionException;
-+ (ANTLRRecognitionException *) exceptionWithStream:(id<ANTLRIntStream>) anInputStream;
-- (id) init;
-- (id) initWithStream:(id<ANTLRIntStream>)anInputStream;
-- (id) initWithStream:(id<ANTLRIntStream>)anInputStream reason:(NSString *)aReason;
-- (NSInteger) unexpectedType;
-- (id<ANTLRToken>)getUnexpectedToken;
-
-- (id<ANTLRIntStream>) getStream;
-- (void) setStream: (id<ANTLRIntStream>) aStream;
-
-- (id<ANTLRToken>) getToken;
-- (void) setToken: (id<ANTLRToken>) aToken;
-
-- (id<ANTLRTree>) getNode;
-- (void) setNode: (id<ANTLRTree>) aNode;
-
-- (NSString *)getMessage;
-
-- (NSInteger)getCharPositionInLine;
-- (void)setCharPositionInLine:(NSInteger)aPos;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRecognizerSharedState.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRecognizerSharedState.h
deleted file mode 100755
index 0430b79..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRecognizerSharedState.h
+++ /dev/null
@@ -1,116 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRToken.h"
-#import "ANTLRBitSet.h"
-#import "ANTLRRuleStack.h"
-
-@interface ANTLRRecognizerSharedState : NSObject {
-	NSMutableArray *following;          // a stack of FOLLOW bitsets used for context sensitive prediction and recovery
-    NSInteger _fsp;                     // Follow stack pointer
-	BOOL errorRecovery;                 // are we recovering?
-	NSInteger lastErrorIndex;
-	BOOL failed;                        // indicate that some match failed
-    NSInteger syntaxErrors;
-	NSInteger backtracking;             // the level of backtracking
-	ANTLRRuleStack *ruleMemo;			// store previous results of matching rules so we don't have to do it again. Hook in incremental stuff here, too.
-
-	id<ANTLRToken> token;
-	NSInteger  tokenStartCharIndex;
-	NSUInteger tokenStartLine;
-	NSUInteger tokenStartCharPositionInLine;
-	NSUInteger channel;
-	NSUInteger type;
-	NSString   *text;
-}
-
-@property (retain, getter=getFollowing, setter=setFollowing:) NSMutableArray *following;
-@property (assign) NSInteger _fsp;
-@property (assign) BOOL errorRecovery;
-@property (assign) NSInteger lastErrorIndex;
-@property (assign, getter=getFailed, setter=setFailed:) BOOL failed;
-@property (assign) NSInteger syntaxErrors;
-@property (assign, getter=getBacktracking, setter=setBacktracking) NSInteger backtracking;
-@property (retain, getter=getRuleMemo, setter=setRuleMemo:) ANTLRRuleStack *ruleMemo;
-@property (copy, getter=getToken, setter=setToken) id<ANTLRToken> token;
-@property (getter=getType,setter=setType:) NSUInteger type;
-@property (getter=getChannel,setter=setChannel:) NSUInteger channel;
-@property (getter=getTokenStartLine,setter=setTokenStartLine:) NSUInteger tokenStartLine;
-@property (getter=getCharPositionInLine,setter=setCharPositionInLine:) NSUInteger tokenStartCharPositionInLine;
-@property (getter=getTokenStartCharIndex,setter=setTokenStartCharIndex:) NSInteger tokenStartCharIndex;
-@property (retain, getter=getText, setter=setText) NSString *text;
-
-+ (ANTLRRecognizerSharedState *) newANTLRRecognizerSharedState;
-+ (ANTLRRecognizerSharedState *) newANTLRRecognizerSharedStateWithRuleLen:(NSInteger)aLen;
-+ (ANTLRRecognizerSharedState *) newANTLRRecognizerSharedState:(ANTLRRecognizerSharedState *)aState;
-
-- (id) init;
-- (id) initWithRuleLen:(NSInteger)aLen;
-- (id) initWithState:(ANTLRRecognizerSharedState *)state;
-
-- (id<ANTLRToken>) getToken;
-- (void) setToken:(id<ANTLRToken>) theToken;
-
-- (NSUInteger) getType;
-- (void) setType:(NSUInteger) theTokenType;
-
-- (NSUInteger) getChannel;
-- (void) setChannel:(NSUInteger) theChannel;
-
-- (NSUInteger) getTokenStartLine;
-- (void) setTokenStartLine:(NSUInteger) theTokenStartLine;
-
-- (NSUInteger) getCharPositionInLine;
-- (void) setCharPositionInLine:(NSUInteger) theCharPosition;
-
-- (NSInteger) getTokenStartCharIndex;
-- (void) setTokenStartCharIndex:(NSInteger) theTokenStartCharIndex;
-
-- (NSString *) getText;
-- (void) setText:(NSString *) theText;
-
-
-- (NSMutableArray *) getFollowing;
-- (void)setFollowing:(NSMutableArray *)aFollow;
-- (ANTLRRuleStack *) getRuleMemo;
-- (void)setRuleMemo:(ANTLRRuleStack *)aRuleMemo;
-- (BOOL) isErrorRecovery;
-- (void) setIsErrorRecovery: (BOOL) flag;
-
-- (BOOL) getFailed;
-- (void) setFailed: (BOOL) flag;
-
-- (NSInteger)  getBacktracking;
-- (void) setBacktracking:(NSInteger) value;
-- (void) increaseBacktracking;
-- (void) decreaseBacktracking;
-- (BOOL) isBacktracking;
-
-- (NSInteger) lastErrorIndex;
-- (void) setLastErrorIndex:(NSInteger) value;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRewriteRuleElementStream.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRewriteRuleElementStream.h
deleted file mode 100755
index 132a0cc..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRewriteRuleElementStream.h
+++ /dev/null
@@ -1,85 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRTreeAdaptor.h"
-
-typedef union {
-    id single;
-    NSMutableArray *multiple;
-} Elements;
-
-// TODO: this should be separated into stream and enumerator classes
-@interface ANTLRRewriteRuleElementStream : NSObject {
-    NSInteger cursor;
-    BOOL dirty;        ///< indicates whether the stream should return copies of its elements, set to true after a call to -reset
-    BOOL isSingleElement;
-    Elements elements;
-
-    NSString *elementDescription;
-    id<ANTLRTreeAdaptor> treeAdaptor;
-}
-
-@property (assign, getter=GetCursor, setter=SetCursor:) NSInteger cursor;
-@property (assign, getter=Getdirty, setter=Setdirty:) BOOL dirty;
-@property (assign, getter=GetIsSingleElement, setter=SetIsSingleElement:) BOOL isSingleElement;
-@property (assign, getter=GetElement, setter=SetElement:) Elements elements;
-@property (assign, getter=GetElementDescription, setter=SetElementDescription:) NSString *elementDescription;
-@property (retain, getter=GetTreeAdaptor, setter=SetTreeAdaptor:) id<ANTLRTreeAdaptor> treeAdaptor;
-
-+ (ANTLRRewriteRuleElementStream*) newANTLRRewriteRuleElementStream:(id<ANTLRTreeAdaptor>)aTreeAdaptor
-                                                        description:(NSString *)anElementDescription;
-+ (ANTLRRewriteRuleElementStream*) newANTLRRewriteRuleElementStream:(id<ANTLRTreeAdaptor>)aTreeAdaptor
-                                                        description:(NSString *)anElementDescription
-                                                            element:(id)anElement;
-+ (ANTLRRewriteRuleElementStream*) newANTLRRewriteRuleElementStream:(id<ANTLRTreeAdaptor>)aTreeAdaptor
-                                                        description:(NSString *)anElementDescription
-                                                           elements:(NSArray *)theElements;
-
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>)aTreeAdaptor description:(NSString *)anElementDescription;
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>)aTreeAdaptor description:(NSString *)anElementDescription element:(id)anElement;
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>)aTreeAdaptor description:(NSString *)anElementDescription elements:(NSArray *)theElements;
-
-- (void)reset;
-
-- (id<ANTLRTreeAdaptor>) getTreeAdaptor;
-- (void) setTreeAdaptor:(id<ANTLRTreeAdaptor>)aTreeAdaptor;
-
-- (void) addElement:(id)anElement;
-- (NSInteger) size;
-
-- (BOOL) hasNext;
-- (id<ANTLRTree>) nextTree;
-- (id<ANTLRTree>) _next;       // internal: TODO: redesign if necessary. maybe delegate
-
-- (id) copyElement:(id)element;
-- (id) toTree:(id)element;
-
-- (NSString *) getDescription;
-- (void) setDescription:(NSString *)description;
-
-@end
-
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRewriteRuleSubtreeStream.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRewriteRuleSubtreeStream.h
deleted file mode 100755
index 1d18b24..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRewriteRuleSubtreeStream.h
+++ /dev/null
@@ -1,50 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRewriteRuleElementStream.h"
-
-@interface ANTLRRewriteRuleSubtreeStream : ANTLRRewriteRuleElementStream {
-
-}
-
-+ (ANTLRRewriteRuleSubtreeStream *) newANTLRRewriteRuleSubtreeStream:(id<ANTLRTreeAdaptor>)aTreeAdaptor
-                                                         description:(NSString *)anElementDescription;
-+ (ANTLRRewriteRuleSubtreeStream *) newANTLRRewriteRuleSubtreeStream:(id<ANTLRTreeAdaptor>)aTreeAdaptor
-                                                         description:(NSString *)anElementDescription
-                                                             element:(id)anElement;
-+ (ANTLRRewriteRuleSubtreeStream *) newANTLRRewriteRuleSubtreeStream:(id<ANTLRTreeAdaptor>)aTreeAdaptor
-                                                         description:(NSString *)anElementDescription
-                                                            elements:(NSArray *)theElements;
-
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>)aTreeAdaptor description:(NSString *)anElementDescription;
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>)aTreeAdaptor description:(NSString *)anElementDescription element:(id)anElement;
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>)aTreeAdaptor description:(NSString *)anElementDescription elements:(NSArray *)theElements;
-
-- (id) nextNode;
-- (id) dup:(id)element;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRewriteRuleTokenStream.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRewriteRuleTokenStream.h
deleted file mode 100755
index 3a516de..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRewriteRuleTokenStream.h
+++ /dev/null
@@ -1,66 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRewriteRuleElementStream.h"
-
-
-@interface ANTLRRewriteRuleTokenStream : ANTLRRewriteRuleElementStream {
-
-}
-
-+ (id) newANTLRRewriteRuleTokenStream:(id<ANTLRTreeAdaptor>)anAdaptor
-                          description:(NSString *)elementDescription;
-/** Create a stream with one element */
-+ (id) newANTLRRewriteRuleTokenStream:(id<ANTLRTreeAdaptor>)adaptor
-                          description:(NSString *)elementDescription
-                              element:(id) oneElement;
-/** Create a stream, but feed off an existing list */
-+ (id) newANTLRRewriteRuleTokenStream:(id<ANTLRTreeAdaptor>)adaptor
-                          description:(NSString *)elementDescription
-                             elements:(NSMutableArray *)elements;
-
-- (id) init;
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>)anAdaptor
-               description:(NSString *)aDescription;
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>)anAdaptor
-               description:(NSString *)aDescription
-                   element:(id)element;
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>)anAdaptor
-               description:(NSString *)aDescription
-                  elements:(NSMutableArray *)elements;
-
-/** Get next token from stream and make a node for it */
-- (id) nextNode;
-
-- (id) nextToken;
-
-/** Don't convert to a tree unless they explicitly call nextTree.
- *  This way we can do hetero tree nodes in rewrite.
- */
-- (id<ANTLRTree>) toTree:(id<ANTLRToken>)element;
-
-@end
\ No newline at end of file
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleMapElement.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleMapElement.h
deleted file mode 100644
index e040b18..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleMapElement.h
+++ /dev/null
@@ -1,55 +0,0 @@
-//
-//  ANTLRRuleMapElement.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/16/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRBaseMapElement.h"
-
-@interface ANTLRRuleMapElement : ANTLRBaseMapElement {
-    NSNumber *ruleNum;
-}
-
-@property (retain, getter=getRuleNum, setter=setRuleNum:) NSNumber *ruleNum;
-
-+ (ANTLRRuleMapElement *) newANTLRRuleMapElement;
-+ (ANTLRRuleMapElement *) newANTLRRuleMapElementWithIndex:(NSNumber *)anIdx;
-+ (ANTLRRuleMapElement *) newANTLRRuleMapElementWithIndex:(NSNumber *)anIdx RuleNum:(NSNumber *)aRuleNum;
-- (id) init;
-- (id) initWithAnIndex:(NSNumber *)anIdx;
-- (id) initWithAnIndex:(NSNumber *)anIdx RuleNum:(NSNumber *)aRuleNum;
-
-- (id) copyWithZone:(NSZone *)aZone;
-
-- (NSNumber *)getRuleNum;
-- (void)setRuleNum:(NSNumber *)aRuleNum;
-
-- (NSInteger)size;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleMemo.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleMemo.h
deleted file mode 100644
index 63a5ae2..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleMemo.h
+++ /dev/null
@@ -1,60 +0,0 @@
-//
-//  ANTLRRuleMemo.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/16/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRLinkBase.h"
-
-@interface ANTLRRuleMemo : ANTLRLinkBase {
-    NSNumber *startIndex;
-    NSNumber *stopIndex;
-}
-
-@property (retain, getter=getStartIndex, setter=setStartIndex) NSNumber *startIndex;
-@property (retain, getter=getStopIndex, setter=setStopIndex) NSNumber *stopIndex;
-
-+ (ANTLRRuleMemo *)newANTLRRuleMemo;
-+ (ANTLRRuleMemo *)newANTLRRuleMemoWithStartIndex:(NSNumber *)aStartIndex StopIndex:(NSNumber *)aStopIndex;
-
-- (id) init;
-- (id) initWithStartIndex:(NSNumber *)aStartIndex StopIndex:(NSNumber *)aStopIndex;
-
-- (NSInteger)count;
-- (NSInteger)size;
-
-- (ANTLRRuleMemo *)getRuleWithStartIndex:(NSInteger)aStartIndex;
-- (NSNumber *)getStartIndex:(NSInteger)aStartIndex;
-- (NSNumber *)getStopIndex:(NSInteger)aStartIndex;
-- (NSNumber *)getStartIndex;
-- (void)setStartIndex:(NSNumber *)aStartIndex;
-- (NSNumber *)getStopIndex;
-- (void)setStopIndex:(NSNumber *)aStopIndex;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleReturnScope.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleReturnScope.h
deleted file mode 100644
index 4750c16..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleReturnScope.h
+++ /dev/null
@@ -1,55 +0,0 @@
-//
-//  ANTLRRuleReturnScope.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/17/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRToken.h"
-
-@interface ANTLRRuleReturnScope : NSObject <NSCopying> {
-
-}
-
-/** Return the start token or tree */
-- (id<ANTLRToken>) getStart;
-
-/** Return the stop token or tree */
-- (id<ANTLRToken>) getStop;
-
-/** Has a value potentially if output=AST; */
-- (id) getNode;
-
-/** Has a value potentially if output=template; Don't use StringTemplate
- *  type as it then causes a dependency with ST lib.
- */
-- (id) getTemplate;
-
-- (id) copyWithZone:(NSZone *)theZone;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleStack.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleStack.h
deleted file mode 100644
index 12d450b..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleStack.h
+++ /dev/null
@@ -1,63 +0,0 @@
-//
-//  ANTLRRuleStack.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/9/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRBaseStack.h"
-#import "ANTLRHashRule.h"
-
-//#define GLOBAL_SCOPE       0
-//#define LOCAL_SCOPE        1
-#define HASHSIZE         101
-#define HBUFSIZE      0x2000
-
-@interface ANTLRRuleStack : ANTLRBaseStack {
-}
-
-// Contruction/Destruction
-+(ANTLRRuleStack *)newANTLRRuleStack;
-+(ANTLRRuleStack *)newANTLRRuleStack:(NSInteger)cnt;
--(id)init;
--(id)initWithLen:(NSInteger)cnt;
--(void)dealloc;
-
-// Instance Methods
-- (id) copyWithZone:(NSZone *)aZone;
-/* clear -- reinitialize the maplist array */
-
-- (NSInteger)count;
-- (NSInteger)size;
-
-- (ANTLRHashRule *) pop;
-
-- (void) insertObject:(ANTLRHashRule *)aHashRule atIndex:(NSInteger)idx;
-- (ANTLRHashRule *)objectAtIndex:(NSInteger)idx;
-- (void)putHashRuleAtRuleIndex:(NSInteger)aRuleIndex StartIndex:(NSInteger)aStartIndex StopIndex:(NSInteger)aStopIndex;
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleStack.m b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleStack.m
deleted file mode 100644
index 909192f..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuleStack.m
+++ /dev/null
@@ -1,147 +0,0 @@
-//
-//  ANTLRRuleStack.m
-//  ANTLR
-//
-//  Created by Alan Condit on 6/9/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#define SUCCESS (0)
-#define FAILURE (-1)
-
-#import "ANTLRRuleStack.h"
-#import "ANTLRTree.h"
-
-/*
- * Start of ANTLRRuleStack
- */
-@implementation ANTLRRuleStack
-
-+ (ANTLRRuleStack *)newANTLRRuleStack
-{
-    return [[ANTLRRuleStack alloc] init];
-}
-
-+ (ANTLRRuleStack *)newANTLRRuleStack:(NSInteger)cnt
-{
-    return [[ANTLRRuleStack alloc] initWithLen:cnt];
-}
-
-- (id)init
-{
-	if ((self = [super init]) != nil) {
-	}
-    return( self );
-}
-
-- (id)initWithLen:(NSInteger)cnt
-{
-	if ((self = [super initWithLen:cnt]) != nil) {
-	}
-    return( self );
-}
-
-- (void)dealloc
-{
-	[super dealloc];
-}
-
-- (id) copyWithZone:(NSZone *)aZone
-{
-    return [super copyWithZone:aZone];
-}
-
-- (NSInteger)count
-{
-    ANTLRRuleMemo *anElement;
-    NSInteger aCnt = 0;
-    for( int i = 0; i < BuffSize; i++ ) {
-        if ((anElement = ptrBuffer[i]) != nil)
-            aCnt++;
-    }
-    return aCnt;
-}
-
-- (NSInteger)size
-{
-    ANTLRRuleMemo *anElement;
-    NSInteger aSize = 0;
-    for( int i = 0; i < BuffSize; i++ ) {
-        if ((anElement = ptrBuffer[i]) != nil) {
-            aSize++;
-        }
-    }
-    return aSize;
-}
-
-- (ANTLRHashRule *)pop
-{
-    return (ANTLRHashRule *)[super pop];
-}
-
-- (void) insertObject:(ANTLRHashRule *)aRule atIndex:(NSInteger)idx
-{
-    if ( idx >= BuffSize ) {
-        NSLog( @"In ANTLRRuleStack attempting to insert aRule at Index %d, but Buffer is only %d long\n", idx, BuffSize );
-        [self ensureCapacity:idx];
-    }
-    if ( aRule != ptrBuffer[idx] ) {
-        if (ptrBuffer[idx] != nil) [ptrBuffer[idx] release];
-        [aRule retain];
-    }
-    ptrBuffer[idx] = aRule;
-}
-
-- (ANTLRHashRule *)objectAtIndex:(NSInteger)idx
-{
-    if (idx < BuffSize) {
-        return ptrBuffer[idx];
-    }
-    return nil;
-}
-
-- (void)putHashRuleAtRuleIndex:(NSInteger)aRuleIndex StartIndex:(NSInteger)aStartIndex StopIndex:(NSInteger)aStopIndex
-{
-    ANTLRHashRule *aHashRule;
-    ANTLRRuleMemo *aRuleMemo;
-
-    if (aRuleIndex >= BuffSize) {
-        NSLog( @"putHashRuleAtRuleIndex attempting to insert aRule at Index %d, but Buffer is only %d long\n", aRuleIndex, BuffSize );
-        [self ensureCapacity:aRuleIndex];
-    }
-    if ((aHashRule = ptrBuffer[aRuleIndex]) == nil) {
-        aHashRule = [[ANTLRHashRule newANTLRHashRuleWithLen:17] retain];
-        ptrBuffer[aRuleIndex] = aHashRule;
-    }
-    if (( aRuleMemo = [aHashRule objectAtIndex:aStartIndex] ) == nil ) {
-        aRuleMemo = [[ANTLRRuleMemo newANTLRRuleMemo] retain];
-        [aHashRule insertObject:aRuleMemo atIndex:aStartIndex];
-    }
-    [aRuleMemo setStartIndex:[NSNumber numberWithInteger:aStartIndex]];
-    [aRuleMemo setStopIndex:[NSNumber numberWithInteger:aStopIndex]];
-}
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuntimeException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuntimeException.h
deleted file mode 100644
index 6cf0918..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRRuntimeException.h
+++ /dev/null
@@ -1,54 +0,0 @@
-//
-//  ANTLRRuntimeException.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/5/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-
-@interface ANTLRRuntimeException : NSException
-{
-}
-
-+ (ANTLRRuntimeException *) newANTLRNoSuchElementException:(NSString *)aReason;
-+ (ANTLRRuntimeException *) newANTLRIllegalArgumentException:(NSString *)aReason;
-+ (ANTLRRuntimeException *) newANTLRRuntimeException:(NSString *)aReason;
-+ (ANTLRRuntimeException *) newANTLRRuntimeException:(NSString *)aName reason:(NSString *)aReason;
-+ (ANTLRRuntimeException *) newANTLRRuntimeException:(NSString *)aName reason:(NSString *)aReason userInfo:aUserInfo;
-
-- (id) init;
-- (id)initWithRuntime:(NSString *)aReason;
-- (id)initWithReason:(NSString *)aReason;
-- (id)initWithName:(NSString *)aName reason:(NSString *)aReason;
-- (id)initWithName:(NSString *)aName reason:(NSString *)aReason userInfo:(NSDictionary *)aUserInfo;
-
-- (NSString *) Description;
-
-//    - (void)setDecisionNumber:(NSInteger)decisionNumber;
-//    - (void)setStateNumber:(NSInteger)stateNumber;
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRStreamEnumerator.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRStreamEnumerator.h
deleted file mode 100644
index a0e0f69..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRStreamEnumerator.h
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  ANTLRStreamEnumertor.h
-//  ANTLR
-//
-//  Created by Ian Michell on 29/04/2010.
-// [The "BSD licence"]
-// Copyright (c) 2010 Ian Michell 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-
-
-@interface ANTLRStreamEnumerator : NSEnumerator
-{
-	NSInteger i;
-	id eof;
-	NSMutableArray *nodes;
-}
-
--(id) initWithNodes:(NSMutableArray *) n andEOF:(id) o;
--(BOOL) hasNext;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRStringStream.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRStringStream.h
deleted file mode 100755
index 2b13c7d..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRStringStream.h
+++ /dev/null
@@ -1,126 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRCharStream.h"
-#import "ANTLRCharStreamState.h"
-#import "ANTLRPtrBuffer.h"
-
-@interface ANTLRStringStream : NSObject < ANTLRCharStream > {
-	NSString *data;
-	NSInteger n;
-	NSInteger p;
-	NSInteger line;
-	NSInteger charPositionInLine;
-	NSInteger markDepth;
-	ANTLRPtrBuffer *markers;
-	NSInteger lastMarker;
-	NSString *name;
-    ANTLRCharStreamState *charState;
-}
-
-@property (retain, getter=getData,setter=setData:) NSString *data;
-@property (getter=getP,setter=setP:) NSInteger p;
-@property (getter=getN,setter=setN:) NSInteger n;
-@property (getter=getLine,setter=setLine:) NSInteger line;
-@property (getter=getCharPositionInLine,setter=setCharPositionInLine:) NSInteger charPositionInLine;
-@property (getter=getMarkDepth,setter=setMarkDepth:) NSInteger markDepth;
-@property (retain, getter=getMarkers, setter=setMarkers:) ANTLRPtrBuffer *markers;
-@property (getter=getLastMarker,setter=setLastMarker:) NSInteger lastMarker;
-@property (retain, getter=getSourceName, setter=setSourceName:) NSString *name;
-@property (retain, getter=getCharState, setter=setCharState:) ANTLRCharStreamState *charState;
-
-+ newANTLRStringStream;
-
-+ newANTLRStringStream:(NSString *)aString;
-
-+ newANTLRStringStream:(char *)myData Count:(NSInteger)numBytes;
-
-- (id) init;
-
-// this initializer copies the string
-- (id) initWithString:(NSString *) theString;
-
-// This is the preferred constructor as no data is copied
-- (id) initWithStringNoCopy:(NSString *) theString;
-
-- (id) initWithData:(char *)myData Count:(NSInteger)numBytes;
-
-- (void) dealloc;
-
-- (id) copyWithZone:(NSZone *)aZone;
-
-// reset the stream's state, but keep the data to feed off
-- (void) reset;
-// consume one character from the stream
-- (void) consume;
-
-// look ahead i characters
-- (NSInteger) LA:(NSInteger) i;
-- (NSInteger) LT:(NSInteger) i;
-
-// returns the position of the current input symbol
-- (NSInteger) getIndex;
-// total length of the input data
-- (NSInteger) size;
-
-// seek and rewind in the stream
-- (NSInteger) mark;
-- (void) rewind:(NSInteger) marker;
-- (void) rewind;
-- (void) release:(NSInteger) marker;
-- (void) seek:(NSInteger) index;
-
-// provide the streams data (e.g. for tokens using indices)
-- (NSString *) substring:(NSInteger)startIndex To:(NSInteger)stopIndex;
-- (NSString *) substringWithRange:(NSRange) theRange;
-
-// used for tracking the current position in the input stream
-- (NSInteger) getLine;
-- (void) setLine:(NSInteger) theLine;
-- (NSInteger) getCharPositionInLine;
-- (void) setCharPositionInLine:(NSInteger) thePos;
-
-- (NSInteger) getN;
-- (void) setN:(NSInteger)num;
-
-- (NSInteger) getP;
-- (void) setP:(NSInteger)num;
-
-- (ANTLRPtrBuffer *)getMarkers;
-- (void) setMarkers:(ANTLRPtrBuffer *)aMarkerList;
-
-- (NSString *)getSourceName;
-
-- (NSString *)toString;
-
-// accessors to the raw data of this stream
-- (NSString *) getData;
-- (void) setData: (NSString *) aData;
-
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRSymbolStack.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRSymbolStack.h
deleted file mode 100644
index 169df9f..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRSymbolStack.h
+++ /dev/null
@@ -1,75 +0,0 @@
-//
-//  ANTLRSymbolStack.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/9/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRBaseStack.h"
-// #import "ANTLRSymbolScope.h"
-
-//#define GLOBAL_SCOPE       0
-//#define LOCAL_SCOPE        1
-#define HASHSIZE         101
-#define HBUFSIZE      0x2000
-
-@interface ANTLRSymbolsScope : NSObject
-{
-
-}
-
-+ (ANTLRSymbolsScope *)newANTLRSymbolsScope;
-
-- (id)init;
-@end
-
-
-@interface ANTLRSymbolStack : ANTLRBaseStack {
-}
-
-// Contruction/Destruction
-+(ANTLRSymbolStack *)newANTLRSymbolStack;
-+(ANTLRSymbolStack *)newANTLRSymbolStackWithLen:(NSInteger)cnt;
--(id)init;
--(id)initWithLen:(NSInteger)cnt;
--(void)dealloc;
-
-// Instance Methods
-- (id) copyWithZone:(NSZone *)aZone;
-/* clear -- reinitialize the maplist array */
-
--(ANTLRSymbolsScope *)getHashMapEntry:(NSInteger)idx;
-
--(ANTLRSymbolsScope **)getHashMap;
-
--(ANTLRSymbolsScope *) pop;
-
-- (void) insertObject:(ANTLRSymbolsScope *)aScope atIndex:(NSInteger)idx;
-- (ANTLRSymbolsScope *)objectAtIndex:(NSInteger)idx;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRSymbolStack.m b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRSymbolStack.m
deleted file mode 100644
index 1dd6775..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRSymbolStack.m
+++ /dev/null
@@ -1,123 +0,0 @@
-//
-//  ANTLRSymbolStack.m
-//  ANTLR
-//
-//  Created by Alan Condit on 6/9/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#define SUCCESS (0)
-#define FAILURE (-1)
-
-#import "ANTLRSymbolStack.h"
-#import "ANTLRTree.h"
-
-
-@implementation ANTLRSymbolsScope
-
-+ (ANTLRSymbolsScope *)newANTLRSymbolsScope
-{
-    return( [[ANTLRSymbolsScope alloc] init] );
-}
-
-- (id)init
-{
-    if ((self = [super init]) != nil) {
-    }
-    return (self);
-}
-
-@end
-
-/*
- * Start of ANTLRSymbolStack
- */
-@implementation ANTLRSymbolStack
-
-+(ANTLRSymbolStack *)newANTLRSymbolStack
-{
-    return [[ANTLRSymbolStack alloc] init];
-}
-
-+(ANTLRSymbolStack *)newANTLRSymbolStackWithLen:(NSInteger)cnt
-{
-    return [[ANTLRSymbolStack alloc] initWithLen:cnt];
-}
-
--(id)init
-{
-	if ((self = [super init]) != nil) {
-	}
-    return( self );
-}
-
--(id)initWithLen:(NSInteger)cnt
-{
-	if ((self = [super initWithLen:cnt]) != nil) {
-	}
-    return( self );
-}
-
--(void)dealloc
-{
-	[super dealloc];
-}
-
-- (id) copyWithZone:(NSZone *)aZone
-{
-    return [super copyWithZone:aZone];
-}
-
--(ANTLRSymbolsScope *)getHashMapEntry:(NSInteger)idx
-{
-	return( (ANTLRSymbolsScope *)[super objectAtIndex:idx] );
-}
-
--(ANTLRSymbolsScope **)getHashMap
-{
-	return( (ANTLRSymbolsScope **)ptrBuffer );
-}
-
--(ANTLRSymbolsScope *) pop
-{
-    return (ANTLRSymbolsScope *)[super pop];
-}
-
-- (void) insertObject:(ANTLRSymbolsScope *)aRule atIndex:(NSInteger)idx
-{
-    if (aRule != ptrBuffer[idx]) {
-        if (ptrBuffer[idx] != nil) [ptrBuffer[idx] release];
-        [aRule retain];
-    }
-    ptrBuffer[idx] = aRule;
-}
-
-- (ANTLRSymbolsScope *)objectAtIndex:(NSInteger)idx
-{
-    return (ANTLRSymbolsScope *)[super objectAtIndex:idx];
-}
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRToken+DebuggerSupport.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRToken+DebuggerSupport.h
deleted file mode 100755
index 659e763..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRToken+DebuggerSupport.h
+++ /dev/null
@@ -1,41 +0,0 @@
-//
-//  ANTLRToken+DebuggerSupport.h
-//  ANTLR
-//
-//  Created by Kay Röpke on 03.12.2006.
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-//
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRToken.h"
-#import "ANTLRCommonToken.h"
-
-@interface ANTLRCommonToken(DebuggerSupport)
-
-- (NSString *)debuggerDescription;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRToken.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRToken.h
deleted file mode 100755
index 64524f0..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRToken.h
+++ /dev/null
@@ -1,79 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import <Cocoa/Cocoa.h>
-
-typedef enum {
-	ANTLRTokenTypeEOF = -1,
-	ANTLRTokenTypeInvalid,
-	ANTLRTokenTypeEOR,
-	ANTLRTokenTypeDOWN,
-	ANTLRTokenTypeUP,
-	ANTLRTokenTypeMIN
-} ANTLRTokenType;
-
-typedef enum {
-	ANTLRTokenChannelDefault = 0,
-    ANTLRTokenChannelHidden = 99
-} ANTLRTokenChannel;
-
-#define HIDDEN 99
-
-@protocol ANTLRToken < NSObject, NSCopying >
-
-// The singleton eofToken instance.
-+ (id<ANTLRToken>) eofToken;
-// The default channel for this class of Tokens
-+ (ANTLRTokenChannel) defaultChannel;
-
-// provide hooks to explicitely set the text as opposed to use the indices into the CharStream
-- (NSString *) getText;
-- (void) setText:(NSString *) theText;
-
-- (NSInteger) getType;
-- (void) setType: (NSInteger) aType;
-
-// ANTLR v3 provides automatic line and position tracking. Subclasses do not need to
-// override these, if they do not want to store line/pos tracking information
-- (NSUInteger) getLine;
-- (void) setLine: (NSUInteger) aLine;
-
-- (NSUInteger) getCharPositionInLine;
-- (void) setCharPositionInLine: (NSUInteger) aCharPositionInLine;
-
-// explicitely change the channel this Token is on. The default parser implementation
-// just sees the defaultChannel
-// Common idiom is to put whitespace tokens on channel 99.
-- (NSUInteger) getChannel;
-- (void) setChannel: (NSUInteger) aChannel;
-
-// the index of this Token into the TokenStream
-- (NSUInteger) getTokenIndex;
-- (void) setTokenIndex: (NSUInteger) aTokenIndex;
-- (NSString *)toString;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTokenRewriteStream.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTokenRewriteStream.h
deleted file mode 100644
index 0d8681f..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTokenRewriteStream.h
+++ /dev/null
@@ -1,170 +0,0 @@
-//
-//  ANTLRTokenRewriteStream.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/19/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRCommonTokenStream.h"
-#import "ANTLRLinkBase.h"
-#import "ANTLRHashMap.h"
-#import "ANTLRMapElement.h"
-#import "ANTLRTokenSource.h"
-
-// Define the rewrite operation hierarchy
-
-@interface ANTLRRewriteOperation : ANTLRCommonTokenStream
-{
-/** What index into rewrites List are we? */
-NSInteger instructionIndex;
-/** Token buffer index. */
-NSInteger index;
-NSString *text;
-}
-
-@property (getter=getInstructionIndex, setter=setInstructionIndex:) NSInteger instructionIndex;
-@property (getter=getIndex, setter=setIndex:) NSInteger index;
-@property (retain, getter=getText, setter=setText:) NSString *text;
-
-+ (ANTLRRewriteOperation *) newANTLRRewriteOperation:(NSInteger)index Text:(NSString *)text;
-
-- (id) initWithIndex:(NSInteger)anIndex Text:(NSString *)theText;
-
-/** Execute the rewrite operation by possibly adding to the buffer.
- *  Return the index of the next token to operate on.
- */
-- (NSInteger) execute:(NSString *)buf;
-
-- (NSString *)toString;
-- (NSInteger) indexOf:(char)aChar inString:(NSString *)aString;
-@end
-
-@interface ANTLRInsertBeforeOp : ANTLRRewriteOperation {
-}
-
-+ (ANTLRInsertBeforeOp *) newANTLRInsertBeforeOp:(NSInteger)anIndex Text:(NSString *)theText;
-- (id) initWithIndex:(NSInteger)anIndex Text:(NSString *)theText;
-
-@end
-
-/** I'm going to try replacing range from x..y with (y-x)+1 ReplaceOp
- *  instructions.
- */
-@interface ANTLRReplaceOp : ANTLRRewriteOperation {
-    NSInteger lastIndex;
-}
-
-@property (getter=getLastIndex, setter=setLastIndex:) NSInteger lastIndex;
-
-+ (ANTLRReplaceOp *) newANTLRReplaceOp:(NSInteger)from ToIndex:(NSInteger)to Text:(NSString*)theText;
-- (id) initWithIndex:(NSInteger)from ToIndex:(NSInteger)to Text:(NSString *)theText;
-
-- (NSInteger) execute:(NSString *)buf;
-- (NSString *)toString;
-
-@end
-
-@interface ANTLRDeleteOp : ANTLRReplaceOp {
-}
-+ (ANTLRDeleteOp *) newANTLRDeleteOp:(NSInteger)from ToIndex:(NSInteger)to;
-
-- (id) initWithIndex:(NSInteger)from ToIndex:(NSInteger)to;
-
-- (NSString *)toString;
-
-@end
-
-
-@interface ANTLRTokenRewriteStream : ANTLRCommonTokenStream {
-/** You may have multiple, named streams of rewrite operations.
- *  I'm calling these things "programs."
- *  Maps String (name) -> rewrite (List)
- */
-ANTLRHashMap *programs;
-
-/** Map String (program name) -> Integer index */
-ANTLRHashMap *lastRewriteTokenIndexes;
-}
-
-@property (retain, getter=getPrograms, setter=setPrograms:) ANTLRHashMap *programs;
-@property (retain, getter=getLastRewriteTokenIndexes, setter=setLastRewriteTokenIndexes:) ANTLRHashMap *lastRewriteTokenIndexes;
-
-+ (ANTLRTokenRewriteStream *)newANTLRTokenRewriteStream;
-+ (ANTLRTokenRewriteStream *)newANTLRTokenRewriteStream:(id<ANTLRTokenSource>) aTokenSource;
-+ (ANTLRTokenRewriteStream *)newANTLRTokenRewriteStream:(id<ANTLRTokenSource>) aTokenSource Channel:(NSInteger)aChannel;
-
-- (id) init;
-- (id)initWithTokenSource:(id<ANTLRTokenSource>)aTokenSource;
-- (id)initWithTokenSource:(id<ANTLRTokenSource>)aTokenSource Channel:(NSInteger)aChannel;
-
-- (ANTLRHashMap *)getPrograms;
-- (void)setPrograms:(ANTLRHashMap *)aProgList;
-
-- (void) rollback:(NSInteger)instructionIndex;
-- (void) rollback:(NSString *)programName Index:(NSInteger)anInstructionIndex;
-- (void) deleteProgram;
-- (void) deleteProgram:(NSString *)programName;
-- (void) insertAfterToken:(id<ANTLRToken>)t Text:(NSString *)theText;
-- (void) insertAfterIndex:(NSInteger)anIndex Text:(NSString *)theText;
-- (void) insertAfterProgNam:(NSString *)programName Index:(NSInteger)anIndex Text:(NSString *)theText;
-
-
-- (void) insertBeforeToken:(id<ANTLRToken>)t Text:(NSString *)theText;
-- (void) insertBeforeIndex:(NSInteger)anIndex Text:(NSString *)theText;
-- (void) insertBeforeProgName:(NSString *)programName Index:(NSInteger)index Text:(NSString *)theText;
-- (void) replaceFromIndex:(NSInteger)anIndex Text:(NSString *)theText;
-- (void) replaceFromIndex:(NSInteger)from ToIndex:(NSInteger)to Text:(NSString *)theText;
-- (void) replaceFromToken:(id<ANTLRToken>)indexT Text:(NSString *)theText;
-- (void) replaceFromToken:(id<ANTLRToken>)from ToToken:(id<ANTLRToken>)to Text:(NSString *)theText;
-- (void) replaceProgNam:(NSString *)programName Token:(id<ANTLRToken>)from Token:(id<ANTLRToken>)to Text:(NSString *)theText;
-- (void) replaceProgNam:(NSString *)programName FromIndex:(NSInteger)from ToIndex:(NSInteger)to Text:(NSString *)theText;
-- (void) delete:(NSInteger)anIndex;
-- (void) delete:(NSInteger)from ToIndex:(NSInteger)to;
-- (void) deleteToken:(id<ANTLRToken>)indexT;
-- (void) deleteFromToken:(id<ANTLRToken>)from ToToken:(id<ANTLRToken>)to;
-- (void) delete:(NSString *)programName FromToken:(id<ANTLRToken>)from ToToken:(id<ANTLRToken>)to;
-- (void) delete:(NSString *)programName FromIndex:(NSInteger)from ToIndex:(NSInteger)to;
-- (NSInteger)getLastRewriteTokenIndex;
-- (NSInteger)getLastRewriteTokenIndex:(NSString *)programName;
-- (void)setLastRewriteTokenIndex:(NSString *)programName Index:(NSInteger)anInt;
-- (ANTLRHashMap *) getProgram:(NSString *)name;
-- (ANTLRHashMap *) initializeProgram:(NSString *)name;
-- (NSString *)toOriginalString;
-- (NSString *)toOriginalString:(NSInteger)start End:(NSInteger)end;
-- (NSString *)toString;
-- (NSString *)toString:(NSString *)programName;
-- (NSString *)toStringFromStart:(NSInteger)start ToEnd:(NSInteger)end;
-- (NSString *)toString:(NSString *)programName FromStart:(NSInteger)start ToEnd:(NSInteger)end;
-- (ANTLRHashMap *)reduceToSingleOperationPerIndex:(ANTLRHashMap *)rewrites;
-- (ANTLRHashMap *)getKindOfOps:(ANTLRHashMap *)rewrites KindOfClass:(Class)kind;
-- (ANTLRHashMap *)getKindOfOps:(ANTLRHashMap *)rewrites KindOfClass:(Class)kind Index:(NSInteger)before;
-- (NSString *)catOpText:(id)a PrevText:(id)b;
-- (NSMutableString *)toDebugString;
-- (NSMutableString *)toDebugStringFromStart:(NSInteger)start ToEnd:(NSInteger)end;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTokenSource.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTokenSource.h
deleted file mode 100755
index 4d6b6ee..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTokenSource.h
+++ /dev/null
@@ -1,38 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import "ANTLRToken.h"
-
-// Anything that responds to -nextToken can be treated as a lexer.
-// For instance this can be a flex lexer or a handwritten one or even
-// a proxy for a remotely running token source (database, lexer, whatever).
-@protocol ANTLRTokenSource <NSObject, NSCopying>
-
-- (id<ANTLRToken>) nextToken;
-- (NSString *)getSourceName;
-
-@end
\ No newline at end of file
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTokenStream.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTokenStream.h
deleted file mode 100755
index c104578..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTokenStream.h
+++ /dev/null
@@ -1,62 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import "ANTLRIntStream.h"
-#import "ANTLRToken.h"
-
-@protocol ANTLRTokenStream < ANTLRIntStream >
-
-// Get Token at current input pointer + i ahead where i=1 is next Token.
-// i<0 indicates tokens in the past.  So -1 is previous token and -2 is
-// two tokens ago. LT:0 is undefined.  For i>=n, return Token.EOFToken.
-// Return null for LT:0 and any index that results in an absolute address
-// that is negative.
-
-- (id<ANTLRToken>) LT:(NSInteger) i;
-
-- (id<ANTLRToken>) getToken:(NSUInteger) i;
-
-- (id) getTokenSource;
-
-- (NSString *) toString;
-/** Return the text of all tokens from start to stop, inclusive.
- *  If the stream does not buffer all the tokens then it can just
- *  return "" or null;  Users should not access $ruleLabel.text in
- *  an action of course in that case.
- */
-- (NSString *)toStringFromStart:(NSInteger)startIdx ToEnd:(NSInteger)stopIdx;
-
-/** Because the user is not required to use a token with an index stored
- *  in it, we must provide a means for two token objects themselves to
- *  indicate the start/end location.  Most often this will just delegate
- *  to the other toString(int,int).  This is also parallel with
- *  the TreeNodeStream.toString(Object,Object).
- */
-- (NSString *) toStringFromToken:(id<ANTLRToken>)startToken ToToken:(id<ANTLRToken>)stopToken;
-
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTree.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTree.h
deleted file mode 100755
index f269b2d..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTree.h
+++ /dev/null
@@ -1,123 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-@protocol ANTLRTree < NSObject, NSCopying >
-
-//+ (id<ANTLRTree>) invalidNode;
-
-- (id<ANTLRTree>) getChild:(NSUInteger)index;
-- (NSUInteger) getChildCount;
-
-// Tree tracks parent and child index now > 3.0
-
-- (id<ANTLRTree>)getParent;
-
-- (void) setParent:(id<ANTLRTree>)t;
-
-/** Is there is a node above with token type ttype? */
-- (BOOL) hasAncestor:(NSInteger)ttype;
-
-/** Walk upwards and get first ancestor with this token type. */
-- (id<ANTLRTree>) getAncestor:(NSInteger) ttype;
-
-/** Return a list of all ancestors of this node.  The first node of
- *  list is the root and the last is the parent of this node.
- */
-- (NSMutableArray *) getAncestors;
-
-/** This node is what child index? 0..n-1 */
-- (NSInteger) getChildIndex;
-
-- (void) setChildIndex:(NSInteger) index;
-
-/** Set the parent and child index values for all children */
-- (void) freshenParentAndChildIndexes;
-
-/** Add t as a child to this node.  If t is null, do nothing.  If t
- *  is nil, add all children of t to this' children.
- */
-- (void) addChild:(id<ANTLRTree>) t;
-
-/** Set ith child (0..n-1) to t; t must be non-null and non-nil node */
-- (void) setChild:(NSInteger)i With:(id<ANTLRTree>) t;
-
-- (id) deleteChild:(NSInteger) i;
-
-/** Delete children from start to stop and replace with t even if t is
- *  a list (nil-root tree).  num of children can increase or decrease.
- *  For huge child lists, inserting children can force walking rest of
- *  children to set their childindex; could be slow.
- */
-- (void) replaceChildrenFrom:(NSInteger)startChildIndex To:(NSInteger)stopChildIndex With:(id)t;
-
-- (NSArray *) getChildren;
-// Add t as a child to this node.  If t is null, do nothing.  If t
-//  is nil, add all children of t to this' children.
-
-- (void) addChildren:(NSArray *) theChildren;
-//- (void) removeAllChildren;
-
-// Indicates the node is a nil node but may still have children, meaning
-// the tree is a flat list.
-
-- (BOOL) isNil;
-
-/**  What is the smallest token index (indexing from 0) for this node
- *   and its children?
- */
-- (NSInteger) getTokenStartIndex;
-
-- (void) setTokenStartIndex:(NSInteger) index;
-
-/**  What is the largest token index (indexing from 0) for this node
- *   and its children?
- */
-- (NSInteger) getTokenStopIndex;
-- (void) setTokenStopIndex:(NSInteger) index;
-
-- (id<ANTLRTree>) dupNode;
-
-- (NSString *) toString;
-
-#pragma mark Copying
-- (id) copyWithZone:(NSZone *)aZone;	// the children themselves are not copied here!
-- (id) deepCopy;					// performs a deepCopyWithZone: with the default zone
-- (id) deepCopyWithZone:(NSZone *)aZone;
-
-#pragma mark Tree Parser support
-- (NSInteger) getType;
-- (NSString *) getText;
-// In case we don't have a token payload, what is the line for errors?
-- (NSInteger) getLine;
-- (NSInteger) getCharPositionInLine;
-- (void) setCharPositionInLine:(NSInteger)pos;
-
-#pragma mark Informational
-- (NSString *) treeDescription;
-- (NSString *) description;
-
-@end
-
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeAdaptor.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeAdaptor.h
deleted file mode 100755
index e6579cf..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeAdaptor.h
+++ /dev/null
@@ -1,159 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import "ANTLRToken.h"
-#import "ANTLRBaseTree.h"
-#import "ANTLRTokenStream.h"
-
-#pragma warning tree/node diction is broken.
-
-@protocol ANTLRTreeAdaptor <NSObject, NSCopying>
-
-#pragma mark Construction
-
-+ (id<ANTLRTree>) newEmptyTree;
-
-- (id<ANTLRTree>) createTree:(id<ANTLRToken>)payload;
-
-#pragma mark ANTLRTreeAdaptor implementation
-- (id<ANTLRTree>)dupNode:(id<ANTLRTree>)aNode;	// copies just the node
-- (id<ANTLRTree>)dupTree:(id<ANTLRTree>)aTree;	// copies the entire subtree, recursively
-
-/** Return a nil node (an empty but non-null node) that can hold
- *  a list of element as the children.  If you want a flat tree (a list)
- *  use "t=adaptor.nil(); t.addChild(x); t.addChild(y);"
- */
-- (id) emptyNode;
-
-/** Return a tree node representing an error.  This node records the
- *  tokens consumed during error recovery.  The start token indicates the
- *  input symbol at which the error was detected.  The stop token indicates
- *  the last symbol consumed during recovery.
- *
- *  You must specify the input stream so that the erroneous text can
- *  be packaged up in the error node.  The exception could be useful
- *  to some applications; default implementation stores ptr to it in
- *  the CommonErrorNode.
- *
- *  This only makes sense during token parsing, not tree parsing.
- *  Tree parsing should happen only when parsing and tree construction
- *  succeed.
- */
-- (id) errorNode:(id<ANTLRTokenStream>)anInput
-            From:(id<ANTLRToken>)aStartToken
-              To:(id<ANTLRToken>)aStopToken
-       Exception:(NSException *) e;
-
-/** Is tree considered a nil node used to make lists of child nodes? */
-- (BOOL) isNil:(id<ANTLRTree>)aTree;
-
-
-- (void) addChild:(id<ANTLRTree>)child toTree:(id<ANTLRTree>)aTree;
-
-/** If oldRoot is a nil root, just copy or move the children to newRoot.
- *  If not a nil root, make oldRoot a child of newRoot.
- *
- *    old=^(nil a b c), new=r yields ^(r a b c)
- *    old=^(a b c), new=r yields ^(r ^(a b c))
- *
- *  If newRoot is a nil-rooted single child tree, use the single
- *  child as the new root node.
- *
- *    old=^(nil a b c), new=^(nil r) yields ^(r a b c)
- *    old=^(a b c), new=^(nil r) yields ^(r ^(a b c))
- *
- *  If oldRoot was null, it's ok, just return newRoot (even if isNil).
- *
- *    old=null, new=r yields r
- *    old=null, new=^(nil r) yields ^(nil r)
- *
- *  Return newRoot.  Throw an exception if newRoot is not a
- *  simple node or nil root with a single child node--it must be a root
- *  node.  If newRoot is ^(nil x) return x as newRoot.
- *
- *  Be advised that it's ok for newRoot to point at oldRoot's
- *  children; i.e., you don't have to copy the list.  We are
- *  constructing these nodes so we should have this control for
- *  efficiency.
- */
-- (id) becomeRoot:(id<ANTLRTree>)newRoot old:(id<ANTLRTree>)oldRoot;
-
-- (id) rulePostProcessing:(id<ANTLRTree>)root;
-
-#pragma mark Rewrite Rules
-
-- (NSUInteger) getUniqueID:(id<ANTLRTree>)aNode;
-
-- (id<ANTLRTree>) createTree:(NSInteger)tokenType FromToken:(id<ANTLRToken>)fromToken;
-- (id<ANTLRTree>) createTree:(NSInteger)tokenType FromToken:(id<ANTLRToken>)fromToken Text:(NSString *)text;
-- (id<ANTLRTree>) createTree:(NSInteger)tokenType Text:(NSString *)text;
-
-#pragma mark Content
-
-- (id<ANTLRTree>)dupNode:(id<ANTLRTree>)aNode;
-- (id<ANTLRTree>)dupTree:(id<ANTLRTree>)aTree;
-
-- (NSInteger) getType:(id<ANTLRTree>)aNode;
-- (void) setType:(id<ANTLRTree>)aNode Type:(NSInteger)tokenType;
-
-- (NSString *) getText:(id<ANTLRTree>)aNode;
-- (void) setText:(id<ANTLRTree>)aNode Text:(NSString *)tokenText;
-
-- (id<ANTLRToken>) getToken:(id<ANTLRTree>)t;
-
-- (void) setTokenBoundaries:(id<ANTLRTree>)aTree From:(id<ANTLRToken>)startToken To:(id<ANTLRToken>)stopToken;
-- (NSInteger) getTokenStartIndex:(id<ANTLRTree>)aTree;
-- (NSInteger) getTokenStopIndex:(id<ANTLRTree>)aTree;
-
-#pragma mark Navigation / Tree Parsing
-
-/** Get a child 0..n-1 node */
-- (id<ANTLRTree>) getChild:(id<ANTLRTree>)aNode At:(NSInteger) i;
-/** Set ith child (0..n-1) to t; t must be non-null and non-nil node */
-- (void) setChild:(id<ANTLRTree>)aTree At:(NSInteger)index Child:(id<ANTLRTree>)child;
-/** Remove ith child and shift children down from right. */
-- (id<ANTLRTree>) deleteChild:(id<ANTLRTree>)t Index:(NSInteger)index;
-
-/** How many children?  If 0, then this is a leaf node */
-- (NSInteger) getChildCount:(id<ANTLRTree>) aTree;
-
-/** Who is the parent node of this node; if null, implies node is root.
- *  If your node type doesn't handle this, it's ok but the tree rewrites
- *  in tree parsers need this functionality.
- */
-- (id<ANTLRTree>)getParent:(id<ANTLRTree>)t;
-- (void) setParent:(id<ANTLRTree>)t With:(id<ANTLRTree>)parent;
-
-/** What index is this node in the child list? Range: 0..n-1
- *  If your node type doesn't handle this, it's ok but the tree rewrites
- *  in tree parsers need this functionality.
- */
-- (NSInteger) getChildIndex:(id<ANTLRTree>)t;
-- (void) setChildIndex:(id<ANTLRTree>)t With:(NSInteger)index;
-
-- (void) replaceChildren:(id<ANTLRTree>)parent From:(NSInteger)startChildIndex To:(NSInteger)stopChildIndex With:(id<ANTLRTree>)t;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeException.h
deleted file mode 100755
index 8ec5c45..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeException.h
+++ /dev/null
@@ -1,42 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRTree.h"
-#import "ANTLRRecognitionException.h"
-
-@interface ANTLRTreeException : ANTLRRecognitionException {
-	id<ANTLRTree> oldRoot;
-	id<ANTLRTree> newRoot;
-}
-
-+ (id) exceptionWithOldRoot:(id<ANTLRTree>)theOldRoot newRoot:(id<ANTLRTree>)theNewRoot stream:(id<ANTLRIntStream>)aStream;
-- (id) initWithOldRoot:(id<ANTLRTree>)theOldRoot newRoot:(id<ANTLRTree>)theNewRoot stream:(id<ANTLRIntStream>)aStream;
-
-- (void) setOldRoot:(id<ANTLRTree>)aTree;
-- (void) setNewRoot:(id<ANTLRTree>)aTree;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeIterator.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeIterator.h
deleted file mode 100644
index e6d5e71..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeIterator.h
+++ /dev/null
@@ -1,67 +0,0 @@
-//
-//  ANTLRTreeIterator.h
-//  ANTLR
-//
-//  Created by Ian Michell on 26/04/2010.
-// [The "BSD licence"]
-// Copyright (c) 2010 Ian Michell 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRCommonTreeAdaptor.h"
-#import "ANTLRFastQueue.h"
-#import "ANTLRTreeAdaptor.h"
-#import "ANTLRTree.h"
-
-@interface ANTLRTreeIterator : NSObject
-{
-	id<ANTLRTreeAdaptor> adaptor;
-	id<ANTLRTree> root;
-	id<ANTLRTree> tree;
-	BOOL firstTime;
-	id<ANTLRTree> up;
-	id<ANTLRTree> down;
-	id<ANTLRTree> eof;
-
-	ANTLRFastQueue *nodes;
-}
-
-@property(retain, readwrite) id<ANTLRTree> up;
-@property(retain, readwrite) id<ANTLRTree> down;
-@property(retain, readwrite) id<ANTLRTree> eof;
-
-+ newANTRLTreeIterator;
-+ (ANTLRTreeIterator *) newANTRLTreeIteratorWithAdaptor:(ANTLRCommonTreeAdaptor *)adaptor
-                                                andTree:(id<ANTLRTree>)tree;
-- (id) init;
-- (id) initWithTree:(id<ANTLRTree>) t;
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>) a andTree:(id<ANTLRTree>) t;
-
-- (void) reset;
-- (BOOL) hasNext;
-- (id) nextObject;
-- (NSArray *) allObjects;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeNodeStream.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeNodeStream.h
deleted file mode 100755
index bf6342c..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeNodeStream.h
+++ /dev/null
@@ -1,50 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRIntStream.h"
-#import "ANTLRCharStream.h"
-#import "ANTLRTokenStream.h"
-#import "ANTLRCommonTree.h"
-#import "ANTLRCommonTreeAdaptor.h"
-
-@protocol ANTLRTreeNodeStream < ANTLRIntStream >
-
-- (id) initWithTree:(ANTLRCommonTree *)theTree;
-- (id) initWithTreeAdaptor:(id<ANTLRTreeAdaptor>)theAdaptor Tree:(ANTLRCommonTree *)theTree;
-
-- (id) LT:(NSInteger)k;
-- (id) getTreeSource;
-- (id<ANTLRTreeAdaptor>) getTreeAdaptor;
-- (id<ANTLRTokenStream>) getTokenStream;
-- (void) setUniqueNavigationNodes:(BOOL)flag;
-
-- (id) getNode:(NSInteger) idx;
-
-- (NSString *) toStringFromNode:(id)startNode ToNode:(id)stopNode;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeParser.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeParser.h
deleted file mode 100755
index e2f01ee..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeParser.h
+++ /dev/null
@@ -1,89 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRBaseRecognizer.h"
-#import "ANTLRTreeNodeStream.h"
-#import "ANTLRCommonTreeAdaptor.h"
-#import "ANTLRMismatchedTreeNodeException.h"
-
-@interface ANTLRTreeParser : ANTLRBaseRecognizer {
-	id<ANTLRTreeNodeStream> input;
-}
-
-@property (retain, getter=getInput, setter=setInput:) id<ANTLRTreeNodeStream> input;
-
-+ (id) newANTLRTreeParser:(id<ANTLRTreeNodeStream>)anInput;
-+ (id) newANTLRTreeParser:(id<ANTLRTreeNodeStream>)anInput State:(ANTLRRecognizerSharedState *)state;
-
-- (id) initWithStream:(id<ANTLRTreeNodeStream>)theInput;
-- (id) initWithStream:(id<ANTLRTreeNodeStream>)theInput
-                State:(ANTLRRecognizerSharedState *)state;
-
-
-- (id<ANTLRTreeNodeStream>)getInput;
-- (void) setInput:(id<ANTLRTreeNodeStream>)anInput;
-
-- (void) setTreeNodeStream:(id<ANTLRTreeNodeStream>) anInput;
-- (id<ANTLRTreeNodeStream>) getTreeNodeStream;
-
-- (NSString *)getSourceName;
-
-- (id) getCurrentInputSymbol:(id<ANTLRIntStream>) anInput;
-
-- (id) getMissingSymbol:(id<ANTLRIntStream>)input
-              Exception:(ANTLRRecognitionException *) e
-          ExpectedToken:(NSInteger) expectedTokenType
-                 BitSet:(ANTLRBitSet *)follow;
-
-/** Match '.' in tree parser has special meaning.  Skip node or
- *  entire tree if node has children.  If children, scan until
- *  corresponding UP node.
- */
-- (void) matchAny:(id<ANTLRIntStream>)ignore;
-
-/** We have DOWN/UP nodes in the stream that have no line info; override.
- *  plus we want to alter the exception type.  Don't try to recover
- *  from tree parser errors inline...
- */
-- (id) recoverFromMismatchedToken:(id<ANTLRIntStream>)anInput
-                             Type:(NSInteger)ttype
-                           Follow:(ANTLRBitSet *)follow;
-
-/** Prefix error message with the grammar name because message is
- *  always intended for the programmer because the parser built
- *  the input tree not the user.
- */
-- (NSString *)getErrorHeader:(ANTLRRecognitionException *)e;
-
-- (NSString *)getErrorMessage:(ANTLRRecognitionException *)e TokenNames:(NSArray *) tokenNames;
-
-- (void) traceIn:(NSString *)ruleName Index:(NSInteger)ruleIndex;
-- (void) traceOut:(NSString *)ruleName Index:(NSInteger)ruleIndex;
-
-
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreePatternLexer.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreePatternLexer.h
deleted file mode 100644
index f6059d3..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreePatternLexer.h
+++ /dev/null
@@ -1,87 +0,0 @@
-//
-//  ANTLRTreePatternLexer.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/18/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-
-typedef enum {
-	ANTLRLexerTokenTypeEOF = -1,
-	ANTLRLexerTokenTypeInvalid,
-	ANTLRLexerTokenTypeBEGIN,
-	ANTLRLexerTokenTypeEND,
-	ANTLRLexerTokenTypeID,
-	ANTLRLexerTokenTypeARG,
-	ANTLRLexerTokenTypePERCENT,
-	ANTLRLexerTokenTypeCOLON,
-	ANTLRLexerTokenTypeDOT,
-} ANTLRLexerTokenType;
-
-
-@interface ANTLRTreePatternLexer : NSObject {
-
-/** The tree pattern to lex like "(A B C)" */
-NSString *pattern;
-
-/** Index into input string */
-NSInteger p;
-
-/** Current char */
-NSInteger c;
-
-/** How long is the pattern in char? */
-NSInteger n;
-
-/** Set when token type is ID or ARG (name mimics Java's StreamTokenizer) */
-NSMutableData *sval;
-char *data;
-
-BOOL error;
-
-}
-
-@property (retain, getter=getPattern, setter=setPattern:) NSString *pattern;
-@property (getter=getP, setter=setP:) NSInteger p;
-@property (getter=getC, setter=setC:) NSInteger c;
-@property (getter=getN, setter=setN:) NSInteger n;
-@property (retain, getter=getSval, setter=setSval:) NSMutableData *sval;
-@property (assign, getter=getData, setter=setData:) char *data;
-@property (getter=getError, setter=setError) BOOL error;
-
-+ (ANTLRTreePatternLexer *)newANTLRTreePatternLexer:(NSString *)aPattern;
-- (id) init;
-- (id) initWithPattern:(NSString *)aPattern;
-- (NSInteger) nextToken;
-- (void) consume;
-- (NSString *)toString;
-
-- (NSMutableData *)getSval;
-- (void) setSval:(NSMutableData *)aSval;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreePatternParser.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreePatternParser.h
deleted file mode 100644
index f6d6dc6..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreePatternParser.h
+++ /dev/null
@@ -1,57 +0,0 @@
-//
-//  ANTLRTreePatternParser.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/18/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRTreePatternLexer.h"
-#import "ANTLRTreeWizard.h"
-#import "ANTLRTreeAdaptor.h"
-
-@interface ANTLRTreePatternParser : NSObject {
-
-ANTLRTreePatternLexer *tokenizer;
-NSInteger ttype;
-ANTLRTreeWizard *wizard;
-id<ANTLRTreeAdaptor> adaptor;
-
-}
-
-+ (ANTLRTreePatternParser *)newANTLRTreePatternParser:(ANTLRTreePatternLexer *)aTokenizer
-                                               Wizard:(ANTLRTreeWizard *)aWizard
-                                              Adaptor:(id<ANTLRTreeAdaptor>)anAdaptor;
-- (id) init;
-- (id) initWithTokenizer:(ANTLRTreePatternLexer *)tokenizer
-                  Wizard:(ANTLRTreeWizard *)aWizard
-                 Adaptor:(id<ANTLRTreeAdaptor>)anAdaptor;
-- (id<ANTLRTree>) pattern;
-- (id<ANTLRTree>) parseTree;
-- (id<ANTLRTree>) parseNode;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeRewriter.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeRewriter.h
deleted file mode 100644
index aee873e..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeRewriter.h
+++ /dev/null
@@ -1,72 +0,0 @@
-//
-//  ANTLRTreeRewriter.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/17/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRTreeParser.h"
-
-@interface ANTLRfptr : NSObject {
-    id  actor;
-    SEL ruleSEL;
-}
-
-+ (ANTLRfptr *)newANTLRfptrWithRule:(SEL)aRuleAction withObject:(id)anObject;
--initWithRule:(SEL)ruleAction withObject:(id)anObject;
-
-- (id)rule;
-
-@end
-
-@interface ANTLRTreeRewriter : ANTLRTreeParser {
-    BOOL showTransformations;
-    id<ANTLRTokenStream> originalTokenStream;
-    id<ANTLRTreeAdaptor> originalAdaptor;
-    ANTLRfptr *rule;
-    ANTLRfptr *topdown_fptr;
-    ANTLRfptr *bottomup_ftpr;
-}
-
-+ (ANTLRTreeRewriter *) newANTLRTreeRewriter:(id<ANTLRTreeNodeStream>)anInput;
-+ (ANTLRTreeRewriter *) newANTLRTreeRewriter:(id<ANTLRTreeNodeStream>)anInput State:(ANTLRRecognizerSharedState *)aState;
-- (id)initWithStream:(id<ANTLRTreeNodeStream>)anInput;
-- (id)initWithStream:(id<ANTLRTreeNodeStream>)anInput State:(ANTLRRecognizerSharedState *)aState;
-- (ANTLRTreeRewriter *) applyOnce:(id<ANTLRTree>)t Rule:(ANTLRfptr *)whichRule;
-- (ANTLRTreeRewriter *) applyRepeatedly:(id<ANTLRTree>)t Rule:(ANTLRfptr *)whichRule;
-- (ANTLRTreeRewriter *) downup:(id<ANTLRTree>)t;
-- (ANTLRTreeRewriter *) pre:(id<ANTLRTree>)t;
-- (ANTLRTreeRewriter *) post:(id<ANTLRTree>)t;
-- (ANTLRTreeRewriter *) downup:(id<ANTLRTree>)t XForm:(BOOL)aShowTransformations;
-- (void)reportTransformation:(id<ANTLRTree>)oldTree Tree:(id<ANTLRTree>)newTree;
-- (ANTLRTreeRewriter *) topdown_fptr;
-- (ANTLRTreeRewriter *) bottomup_ftpr;
-- (ANTLRTreeRewriter *) topdown;
-- (ANTLRTreeRewriter *) bottomup;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeRuleReturnScope.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeRuleReturnScope.h
deleted file mode 100644
index ea8a487..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeRuleReturnScope.h
+++ /dev/null
@@ -1,49 +0,0 @@
-//
-//  ANTLRTreeRuleReturnScope.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/17/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRuleReturnScope.h"
-#import "ANTLRCommonTree.h"
-
-@interface ANTLRTreeRuleReturnScope : ANTLRRuleReturnScope {
-    ANTLRCommonTree *startNode;
-}
-
-@property (retain, getter=getStart, setter=setStart:) ANTLRCommonTree *startNode;
-
-/** First node or root node of tree matched for this rule. */
-
-- (ANTLRCommonTree *)getStart;
-- (void)setStart:(ANTLRCommonTree *)aStartNode;
-
-- (id) copyWithZone:(NSZone *)theZone;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeVisitor.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeVisitor.h
deleted file mode 100644
index 1f167bb..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeVisitor.h
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  ANTLRTreeVisitor.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/18/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRTreeAdaptor.h"
-#import "ANTLRTreeVisitorAction.h"
-
-@interface ANTLRTreeVisitor : NSObject {
-   id<ANTLRTreeAdaptor> adaptor;
-}
-+ (ANTLRTreeVisitor *)newANTLRTreeVisitor:(id<ANTLRTreeAdaptor>) anAdaptor;
-+ (ANTLRTreeVisitor *)newANTLRTreeVisitor;
-- (id)init;
-- (id)initWithAdaptor:(id<ANTLRTreeAdaptor>)anAdaptor;
-- (ANTLRTreeVisitor *)visit:(id<ANTLRTree>)t Action:(ANTLRTreeVisitorAction *)action;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeVisitorAction.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeVisitorAction.h
deleted file mode 100644
index c9c0856..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeVisitorAction.h
+++ /dev/null
@@ -1,56 +0,0 @@
-//
-//  ANTLRTreeVisitorAction.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/18/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-
-
-@interface ANTLRTreeVisitorAction : NSObject
-{
-
-}
-
-+ (ANTLRTreeVisitorAction *)newANTLRTreeVisitorAction;
-- (id) init;
-
-/** Execute an action before visiting children of t.  Return t or
- *  a rewritten t.  It is up to the visitor to decide what to do
- *  with the return value.  Children of returned value will be
- *  visited if using TreeVisitor.visit().
- */
-- (ANTLRTreeVisitorAction *)pre:(ANTLRTreeVisitorAction *) t;
-
-/** Execute an action after visiting children of t.  Return t or
- *  a rewritten t.  It is up to the visitor to decide what to do
- *  with the return value.
- */
-- (ANTLRTreeVisitorAction *)post:(ANTLRTreeVisitorAction *) t;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeWizard.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeWizard.h
deleted file mode 100644
index d952572..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRTreeWizard.h
+++ /dev/null
@@ -1,134 +0,0 @@
-//
-//  ANTLRTreeWizard.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/18/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRCommonTreeAdaptor.h"
-#import "ANTLRCommonTree.h"
-#import "ANTLRMapElement.h"
-#import "ANTLRMap.h"
-
-@class ANTLRVisitor;
-
-@protocol ANTLRContextVisitor <NSObject>
-// TODO: should this be called visit or something else?
-- (void) visit:(id<ANTLRTree>)t Parent:(id<ANTLRTree>)parent ChildIndex:(NSInteger)childIndex Map:(ANTLRMap *)labels;
-
-@end
-
-@interface ANTLRVisitor : NSObject <ANTLRContextVisitor> {
-    NSInteger action;
-    id actor;
-    id object1;
-    id object2;
-}
-+ (ANTLRVisitor *)newANTLRVisitor:(NSInteger)anAction Actor:(id)anActor Object:(id)anObject1 Object:(id)anObject2;
-- (id) initWithAction:(NSInteger)anAction Actor:(id)anActor Object:(id)anObject1 Object:(id)anObject2;
-
-- (void) visit:(id<ANTLRTree>)t;
-- (void) visit:(id<ANTLRTree>)t Parent:(id<ANTLRTree>)parent ChildIndex:(NSInteger)childIndex Map:(ANTLRMap *)labels;
-
-@end
-
-/** When using %label:TOKENNAME in a tree for parse(), we must
- *  track the label.
- */
-@interface ANTLRTreePattern : ANTLRCommonTree {
-    NSString *label;
-    BOOL      hasTextArg;
-}
-@property (retain, getter=getLabel, setter=setLabel:) NSString *label;
-@property (assign, getter=getHasTextArg, setter=setHasTextArg:) BOOL hasTextArg;
-
-+ (ANTLRTreePattern *)newANTLRTreePattern:(id<ANTLRToken>)payload;
-
-- (id) initWithToken:(id<ANTLRToken>)payload;
-- (NSString *)toString;
-@end
-
-@interface ANTLRWildcardTreePattern : ANTLRTreePattern {
-}
-
-+ (ANTLRWildcardTreePattern *)newANTLRWildcardTreePattern:(id<ANTLRToken>)payload;
-- (id) initWithToken:(id<ANTLRToken>)payload;
-@end
-
-/** This adaptor creates TreePattern objects for use during scan() */
-@interface ANTLRTreePatternTreeAdaptor : ANTLRCommonTreeAdaptor {
-}
-+ (ANTLRTreePatternTreeAdaptor *)newTreeAdaptor;
-#ifdef DONTUSENOMO
-+ (ANTLRTreePatternTreeAdaptor *)newTreeAdaptor:(id<ANTLRToken>)payload;
-#endif
-- (id) init;
-#ifdef DONTUSENOMO
-- initWithToken:(id<ANTLRToken>)payload;
-#endif
-- (id<ANTLRTree>)createTreePattern:(id<ANTLRToken>)payload;
-
-@end
-
-@interface ANTLRTreeWizard : NSObject {
-	id<ANTLRTreeAdaptor> adaptor;
-	ANTLRMap *tokenNameToTypeMap;
-}
-+ (ANTLRTreeWizard *) newANTLRTreeWizard:(id<ANTLRTreeAdaptor>)anAdaptor;
-+ (ANTLRTreeWizard *)newANTLRTreeWizard:(id<ANTLRTreeAdaptor>)adaptor Map:(ANTLRMap *)aTokenNameToTypeMap;
-+ (ANTLRTreeWizard *)newANTLRTreeWizard:(id<ANTLRTreeAdaptor>)adaptor TokenNames:(NSArray *)theTokNams;
-+ (ANTLRTreeWizard *)newANTLRTreeWizardWithTokenNames:(NSArray *)theTokNams;
-- (id) init;
-- (id) initWithAdaptor:(id<ANTLRTreeAdaptor>)adaptor;
-- (id) initWithAdaptor:(id<ANTLRTreeAdaptor>)adaptor Map:(ANTLRMap *)tokenNameToTypeMap;
-- (id) initWithTokenNames:(NSArray *)theTokNams;
-- (id) initWithTokenNames:(id<ANTLRTreeAdaptor>)anAdaptor TokenNames:(NSArray *)theTokNams;
-- (ANTLRMap *)computeTokenTypes:(NSArray *)theTokNams;
-- (NSInteger)getTokenType:(NSString *)tokenName;
-- (ANTLRMap *)index:(id<ANTLRTree>)t;
-- (void) _index:(id<ANTLRTree>)t Map:(ANTLRMap *)m;
-- (NSMutableArray *)find:(id<ANTLRTree>) t Pattern:(NSString *)pattern;
-- (ANTLRTreeWizard *)findFirst:(id<ANTLRTree>) t Type:(NSInteger)ttype;
-- (ANTLRTreeWizard *)findFirst:(id<ANTLRTree>) t Pattern:(NSString *)pattern;
-- (void) visit:(id<ANTLRTree>)t Type:(NSInteger)ttype Visitor:(ANTLRVisitor *)visitor;
-- (void) _visit:(id<ANTLRTree>)t
-         Parent:(id<ANTLRTree>)parent
-     ChildIndex:(NSInteger)childIndex
-           Type:(NSInteger)ttype
-        Visitor:(ANTLRVisitor *)visitor;
-- (void)visit:(id<ANTLRTree>)t Pattern:(NSString *)pattern Visitor:(ANTLRVisitor *)visitor;
-- (BOOL)parse:(id<ANTLRTree>)t Pattern:(NSString *)pattern Map:(ANTLRMap *)labels;
-- (BOOL) parse:(id<ANTLRTree>) t Pattern:(NSString *)pattern;
-- (BOOL) _parse:(id<ANTLRTree>)t1 Pattern:(ANTLRTreePattern *)tpattern Map:(ANTLRMap *)labels;
-- (id<ANTLRTree>) createTree:(NSString *)pattern;
-- (BOOL)equals:(id)t1 O2:(id)t2 Adaptor:(id<ANTLRTreeAdaptor>)anAdaptor;
-- (BOOL)equals:(id)t1 O2:(id)t2;
-- (BOOL) _equals:(id)t1 O2:(id)t2 Adaptor:(id<ANTLRTreeAdaptor>)anAdaptor;
-
-@end
-
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUnbufferedCommonTreeNodeStreamState.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUnbufferedCommonTreeNodeStreamState.h
deleted file mode 100755
index 9e79d86..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUnbufferedCommonTreeNodeStreamState.h
+++ /dev/null
@@ -1,66 +0,0 @@
-// [The "BSD licence"]
-// Copyright (c) 2006-2007 Kay Roepke
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRCommonTree.h"
-
-@interface ANTLRUnbufferedCommonTreeNodeStreamState : NSObject {
-	ANTLRCommonTree *currentNode;
-	ANTLRCommonTree *previousNode;
-
-	int currentChildIndex;
-	int absoluteNodeIndex;
-	unsigned int nodeStackSize;
-	unsigned int indexStackSize;
-
-	NSMutableArray *lookahead;
-}
-
-- (ANTLRCommonTree *) currentNode;
-- (void) setCurrentNode: (ANTLRCommonTree *) aCurrentNode;
-
-- (ANTLRCommonTree *) previousNode;
-- (void) setPreviousNode: (ANTLRCommonTree *) aPreviousNode;
-
-- (NSInteger) currentChildIndex;
-- (void) setCurrentChildIndex: (NSInteger) aCurrentChildIndex;
-
-- (NSInteger) absoluteNodeIndex;
-- (void) setAbsoluteNodeIndex: (NSInteger) anAbsoluteNodeIndex;
-
-- (NSUInteger) nodeStackSize;
-- (void) setNodeStackSize: (NSUInteger) aNodeStackSize;
-
-- (NSUInteger) indexStackSize;
-- (void) setIndexStackSize: (NSUInteger) anIndexStackSize;
-
-- (NSMutableArray *) lookahead;
-- (void) setLookahead: (NSMutableArray *) aLookahead;
-
-- (void) addToLookahead: (id)lookaheadObject;
-- (void) removeFromLookahead: (id)lookaheadObject;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUnbufferedTokenStream.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUnbufferedTokenStream.h
deleted file mode 100644
index e4f8630..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUnbufferedTokenStream.h
+++ /dev/null
@@ -1,62 +0,0 @@
-//
-//  ANTLRUnbufferedTokenStream.h
-//  ANTLR
-//
-//  Created by Alan Condit on 7/12/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRRuntimeException.h"
-#import "ANTLRTokenSource.h"
-#import "ANTLRLookaheadStream.h"
-#import "ANTLRToken.h"
-
-@interface ANTLRUnbufferedTokenStream : ANTLRLookaheadStream {
-	id<ANTLRTokenSource> tokenSource;
-    NSInteger tokenIndex; // simple counter to set token index in tokens
-    NSInteger channel;
-}
-
-@property (retain, getter=getTokenSource, setter=setTokenSource:) id<ANTLRTokenSource> tokenSource;
-@property (getter=getTokenIndex, setter=setTokenIndex) NSInteger tokenIndex;
-@property (getter=getChannel, setter=setChannel:) NSInteger channel;
-
-+ (ANTLRUnbufferedTokenStream *)newANTLRUnbufferedTokenStream:(id<ANTLRTokenSource>)aTokenSource;
-- (id) init;
-- (id) initWithTokenSource:(id<ANTLRTokenSource>)aTokenSource;
-
-- (id<ANTLRToken>)nextElement;
-- (BOOL)isEOF:(id<ANTLRToken>) aToken;
-- (id<ANTLRTokenSource>)getTokenSource;
-- (NSString *)toStringFromStart:(NSInteger)aStart ToEnd:(NSInteger)aStop;
-- (NSString *)toStringFromToken:(id<ANTLRToken>)aStart ToEnd:(id<ANTLRToken>)aStop;
-- (NSInteger)LA:(NSInteger)anIdx;
-- (id<ANTLRToken>)objectAtIndex:(NSInteger)anIdx;
-- (NSString *)getSourceName;
-
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUniqueIDMap.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUniqueIDMap.h
deleted file mode 100644
index a805bd5..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUniqueIDMap.h
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  ANTLRUniqueIDMap.h
-//  ANTLR
-//
-//  Created by Alan Condit on 7/7/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRPtrBuffer.h"
-#import "ANTLRNodeMapElement.h"
-
-#define SUCCESS             0
-#define FAILURE             -1
-#define HASHSIZE            101
-#define HBUFSIZE            0x2000
-
-@interface ANTLRUniqueIDMap : ANTLRPtrBuffer {
-    NSInteger lastHash;
-}
-
-@property (getter=getLastHash, setter=setLastHash) NSInteger lastHash;
-
-+ (id)newANTLRUniqueIDMap;
-+ (id)newANTLRUniqueIDMapWithLen:(NSInteger)aHashSize;
-
-- (id)init;
-- (id)initWithLen:(NSInteger)cnt;
-- (void)dealloc;
-// Instance Methods
-- (NSInteger)count;
-- (NSInteger)size;
-/* clear -- reinitialize the maplist array */
-- (void) clear;
-
-- (void)deleteANTLRUniqueIDMap:(ANTLRNodeMapElement *)np;
-- (void)delete_chain:(ANTLRNodeMapElement *)np;
-- (id)getNode:(id<ANTLRTree>)aNode;
-- (void)putID:(id)anID Node:(id<ANTLRTree>)aNode;
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUnwantedTokenException.h b/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUnwantedTokenException.h
deleted file mode 100644
index 2945bfe..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Headers/ANTLRUnwantedTokenException.h
+++ /dev/null
@@ -1,47 +0,0 @@
-//
-//  ANTLRUnwantedTokenException.h
-//  ANTLR
-//
-//  Created by Alan Condit on 6/8/10.
-// [The "BSD licence"]
-// Copyright (c) 2010 Alan Condit
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-// are met:
-// 1. Redistributions of source code must retain the above copyright
-//    notice, this list of conditions and the following disclaimer.
-// 2. Redistributions in binary form must reproduce the above copyright
-//    notice, this list of conditions and the following disclaimer in the
-//    documentation and/or other materials provided with the distribution.
-// 3. The name of the author may not be used to endorse or promote products
-//    derived from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#import <Cocoa/Cocoa.h>
-#import "ANTLRMismatchedTokenException.h"
-
-@interface ANTLRUnwantedTokenException : ANTLRMismatchedTokenException {
-
-}
-+ (ANTLRUnwantedTokenException *)newANTLRUnwantedTokenException;
-+ (ANTLRUnwantedTokenException *)newANTLRUnwantedTokenException:(NSInteger)expected Stream:(id<ANTLRIntStream>)anInput;
-
-- (id) init;
-- (id) initWithStream:(id<ANTLRIntStream>)anInput And:(NSInteger)expected;
-- (id<ANTLRToken>)getUnexpectedToken;
-- (NSString *)toString;
-
-
-@end
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Resources/English.lproj/InfoPlist.strings b/runtime/ObjC/ANTLR.framework/Versions/A/Resources/English.lproj/InfoPlist.strings
deleted file mode 100644
index fa1b75f..0000000
Binary files a/runtime/ObjC/ANTLR.framework/Versions/A/Resources/English.lproj/InfoPlist.strings and /dev/null differ
diff --git a/runtime/ObjC/ANTLR.framework/Versions/A/Resources/Info.plist b/runtime/ObjC/ANTLR.framework/Versions/A/Resources/Info.plist
deleted file mode 100644
index 24436a3..0000000
--- a/runtime/ObjC/ANTLR.framework/Versions/A/Resources/Info.plist
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>CFBundleDevelopmentRegion</key>
-	<string>English</string>
-	<key>CFBundleExecutable</key>
-	<string>ANTLR</string>
-	<key>CFBundleIdentifier</key>
-	<string>org.antlr.antlrframework</string>
-	<key>CFBundleInfoDictionaryVersion</key>
-	<string>6.0</string>
-	<key>CFBundleName</key>
-	<string>ANTLR</string>
-	<key>CFBundlePackageType</key>
-	<string>FMWK</string>
-	<key>CFBundleSignature</key>
-	<string>????</string>
-	<key>CFBundleVersion</key>
-	<string>1.0</string>
-</dict>
-</plist>
diff --git a/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/project.pbxproj b/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/project.pbxproj
deleted file mode 100644
index 1596463..0000000
--- a/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/project.pbxproj
+++ /dev/null
@@ -1,3048 +0,0 @@
-// !$*UTF8*$!
-{
-	archiveVersion = 1;
-	classes = {
-	};
-	objectVersion = 46;
-	objects = {
-
-/* Begin PBXBuildFile section */
-		1A048D21134E8C1100005F57 /* antlr3.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D01134E8C1000005F57 /* antlr3.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D22134E8C1100005F57 /* ANTLRBaseMapElement.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D02134E8C1000005F57 /* ANTLRBaseMapElement.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D23134E8C1100005F57 /* ANTLRBaseRecognizer.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D03134E8C1000005F57 /* ANTLRBaseRecognizer.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D24134E8C1100005F57 /* ANTLRBaseStack.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D04134E8C1000005F57 /* ANTLRBaseStack.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D25134E8C1100005F57 /* ANTLRBaseTree.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D05134E8C1000005F57 /* ANTLRBaseTree.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D26134E8C1100005F57 /* ANTLRBaseTreeAdaptor.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D06134E8C1000005F57 /* ANTLRBaseTreeAdaptor.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D27134E8C1100005F57 /* ANTLRBitSet.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D07134E8C1000005F57 /* ANTLRBitSet.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D28134E8C1100005F57 /* ANTLRBufferedTokenStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D08134E8C1000005F57 /* ANTLRBufferedTokenStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D29134E8C1100005F57 /* ANTLRBufferedTreeNodeStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D09134E8C1000005F57 /* ANTLRBufferedTreeNodeStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D2A134E8C1100005F57 /* ANTLRCharStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D0A134E8C1000005F57 /* ANTLRCharStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D2B134E8C1100005F57 /* ANTLRCharStreamState.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D0B134E8C1000005F57 /* ANTLRCharStreamState.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D2C134E8C1100005F57 /* ANTLRCommonErrorNode.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D0C134E8C1000005F57 /* ANTLRCommonErrorNode.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D2D134E8C1100005F57 /* ANTLRCommonToken.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D0D134E8C1000005F57 /* ANTLRCommonToken.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D2E134E8C1100005F57 /* ANTLRCommonTokenStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D0E134E8C1000005F57 /* ANTLRCommonTokenStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D2F134E8C1100005F57 /* ANTLRCommonTree.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D0F134E8C1000005F57 /* ANTLRCommonTree.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D30134E8C1100005F57 /* ANTLRCommonTreeAdaptor.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D10134E8C1000005F57 /* ANTLRCommonTreeAdaptor.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D31134E8C1100005F57 /* ANTLRCommonTreeNodeStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D11134E8C1000005F57 /* ANTLRCommonTreeNodeStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D33134E8C1100005F57 /* ANTLRDebug.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D13134E8C1100005F57 /* ANTLRDebug.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D34134E8C1100005F57 /* ANTLRDebugEventListener.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D14134E8C1100005F57 /* ANTLRDebugEventListener.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D35134E8C1100005F57 /* ANTLRDebugEventProxy.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D15134E8C1100005F57 /* ANTLRDebugEventProxy.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D36134E8C1100005F57 /* ANTLRDebugParser.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D16134E8C1100005F57 /* ANTLRDebugParser.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D37134E8C1100005F57 /* ANTLRDebugTokenStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D17134E8C1100005F57 /* ANTLRDebugTokenStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D38134E8C1100005F57 /* ANTLRDebugTreeAdaptor.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D18134E8C1100005F57 /* ANTLRDebugTreeAdaptor.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D39134E8C1100005F57 /* ANTLRDebugTreeNodeStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D19134E8C1100005F57 /* ANTLRDebugTreeNodeStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D3A134E8C1100005F57 /* ANTLRDebugTreeParser.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D1A134E8C1100005F57 /* ANTLRDebugTreeParser.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D3B134E8C1100005F57 /* ANTLRDFA.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D1B134E8C1100005F57 /* ANTLRDFA.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D3C134E8C1100005F57 /* ANTLRDoubleKeyMap.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D1C134E8C1100005F57 /* ANTLRDoubleKeyMap.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D3D134E8C1100005F57 /* ANTLREarlyExitException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D1D134E8C1100005F57 /* ANTLREarlyExitException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D3E134E8C1100005F57 /* ANTLRError.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D1E134E8C1100005F57 /* ANTLRError.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D3F134E8C1100005F57 /* ANTLRFailedPredicateException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D1F134E8C1100005F57 /* ANTLRFailedPredicateException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A048D40134E8C1100005F57 /* ANTLRFastQueue.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A048D20134E8C1100005F57 /* ANTLRFastQueue.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A63BC6E134F5DE5002EDFB4 /* FuzzyLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BC6B134F5DE4002EDFB4 /* FuzzyLexer.m */; };
-		1A63BC6F134F5DE5002EDFB4 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BC6C134F5DE5002EDFB4 /* main.m */; };
-		1A63BC70134F5E43002EDFB4 /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1A63BD89134F5FF3002EDFB4 /* CombinedLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BC7E134F5EB1002EDFB4 /* CombinedLexer.m */; };
-		1A63BD8A134F5FF3002EDFB4 /* CombinedParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BC80134F5EB1002EDFB4 /* CombinedParser.m */; };
-		1A63BD8B134F5FF3002EDFB4 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BC81134F5EB1002EDFB4 /* main.m */; };
-		1A63BD94134F606A002EDFB4 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BC9E134F5EB2002EDFB4 /* main.m */; };
-		1A63BD95134F606A002EDFB4 /* TestLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCA9134F5EB2002EDFB4 /* TestLexer.m */; };
-		1A63BDAF134F614D002EDFB4 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1A63BDB4134F6154002EDFB4 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1A63BDB9134F615A002EDFB4 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1A63BDBE134F6160002EDFB4 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1A63BDC3134F6167002EDFB4 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1A63BDC7134F61E4002EDFB4 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCB0134F5EB2002EDFB4 /* main.m */; };
-		1A63BDC8134F61E8002EDFB4 /* SimpleCLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCB6134F5EB2002EDFB4 /* SimpleCLexer.m */; };
-		1A63BDC9134F61EC002EDFB4 /* SimpleCParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCB8134F5EB2002EDFB4 /* SimpleCParser.m */; };
-		1A63BDCA134F6218002EDFB4 /* Main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCBC134F5EB2002EDFB4 /* Main.m */; };
-		1A63BDCB134F6218002EDFB4 /* PolyDifferentiator.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCCB134F5EB2002EDFB4 /* PolyDifferentiator.m */; };
-		1A63BDCC134F6218002EDFB4 /* PolyLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCCD134F5EB2002EDFB4 /* PolyLexer.m */; };
-		1A63BDCD134F6218002EDFB4 /* PolyParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCCF134F5EB2002EDFB4 /* PolyParser.m */; };
-		1A63BDCE134F6218002EDFB4 /* PolyPrinter.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCD2134F5EB2002EDFB4 /* PolyPrinter.m */; };
-		1A63BDCF134F6218002EDFB4 /* Simplifier.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCD6134F5EB2002EDFB4 /* Simplifier.m */; };
-		1A63BDDD134F6258002EDFB4 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCDB134F5EB2002EDFB4 /* main.m */; };
-		1A63BDDE134F6258002EDFB4 /* SymbolTableLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCE7134F5EB2002EDFB4 /* SymbolTableLexer.m */; };
-		1A63BDDF134F6258002EDFB4 /* SymbolTableParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCE9134F5EB2002EDFB4 /* SymbolTableParser.m */; };
-		1A63BDE1134F626A002EDFB4 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1A63BDE7134F62CB002EDFB4 /* SimpleCLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BD00134F5EB2002EDFB4 /* SimpleCLexer.m */; };
-		1A63BDE8134F62D0002EDFB4 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BCED134F5EB2002EDFB4 /* main.m */; };
-		1A63BDEA134F62D0002EDFB4 /* SimpleCTP.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BD07134F5EB2002EDFB4 /* SimpleCTP.m */; };
-		1A63BDEB134F62D0002EDFB4 /* SimpleCWalker.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BD0B134F5EB2002EDFB4 /* SimpleCWalker.m */; };
-		1A63BDEE134F932E002EDFB4 /* ANTLRIntStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1AE72368134E8AB4001C3F35 /* ANTLRIntStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A63BDEF134F93A5002EDFB4 /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1A63BDF0134F93AC002EDFB4 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1A63BDF1134FAB4B002EDFB4 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1A63BDF2134FAB60002EDFB4 /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1A63BDF3134FAB63002EDFB4 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1A63BDF4134FAF58002EDFB4 /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1A63BDF5134FB55B002EDFB4 /* TreeRewriteLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BD2B134F5EB2002EDFB4 /* TreeRewriteLexer.m */; };
-		1A63BDF6134FB55F002EDFB4 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BD21134F5EB2002EDFB4 /* main.m */; };
-		1A63BDF7134FB564002EDFB4 /* TreeRewriteParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BD2D134F5EB2002EDFB4 /* TreeRewriteParser.m */; };
-		1A63BE05134FB807002EDFB4 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BC94134F5EB2002EDFB4 /* main.m */; };
-		1A63BE06134FB80B002EDFB4 /* TLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BC99134F5EB2002EDFB4 /* TLexer.m */; };
-		1A63BE07134FB80E002EDFB4 /* TParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BC9B134F5EB2002EDFB4 /* TParser.m */; };
-		1A63BE08134FB814002EDFB4 /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1A63BE09134FB818002EDFB4 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1A63BE0C134FB855002EDFB4 /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1A6B1CD7134E8CF70016A47D /* ANTLRFileStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1C97134E8CF70016A47D /* ANTLRFileStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CD8134E8CF70016A47D /* ANTLRHashMap.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1C98134E8CF70016A47D /* ANTLRHashMap.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CD9134E8CF70016A47D /* ANTLRHashRule.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1C99134E8CF70016A47D /* ANTLRHashRule.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CDA134E8CF70016A47D /* ANTLRInputStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1C9A134E8CF70016A47D /* ANTLRInputStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CDB134E8CF70016A47D /* ANTLRIntArray.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1C9B134E8CF70016A47D /* ANTLRIntArray.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CDC134E8CF70016A47D /* ANTLRLexer.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1C9C134E8CF70016A47D /* ANTLRLexer.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CDD134E8CF70016A47D /* ANTLRLexerRuleReturnScope.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1C9D134E8CF70016A47D /* ANTLRLexerRuleReturnScope.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CDE134E8CF70016A47D /* ANTLRLexerState.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1C9E134E8CF70016A47D /* ANTLRLexerState.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CDF134E8CF70016A47D /* ANTLRLinkBase.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1C9F134E8CF70016A47D /* ANTLRLinkBase.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CE0134E8CF70016A47D /* ANTLRLookaheadStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CA0134E8CF70016A47D /* ANTLRLookaheadStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CE1134E8CF70016A47D /* ANTLRMap.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CA1134E8CF70016A47D /* ANTLRMap.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CE2134E8CF70016A47D /* ANTLRMapElement.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CA2134E8CF70016A47D /* ANTLRMapElement.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CE3134E8CF70016A47D /* ANTLRMismatchedNotSetException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CA3134E8CF70016A47D /* ANTLRMismatchedNotSetException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CE4134E8CF70016A47D /* ANTLRMismatchedRangeException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CA4134E8CF70016A47D /* ANTLRMismatchedRangeException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CE5134E8CF70016A47D /* ANTLRMismatchedSetException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CA5134E8CF70016A47D /* ANTLRMismatchedSetException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CE6134E8CF70016A47D /* ANTLRMismatchedTokenException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CA6134E8CF70016A47D /* ANTLRMismatchedTokenException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CE7134E8CF70016A47D /* ANTLRMismatchedTreeNodeException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CA7134E8CF70016A47D /* ANTLRMismatchedTreeNodeException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CE8134E8CF70016A47D /* ANTLRMissingTokenException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CA8134E8CF70016A47D /* ANTLRMissingTokenException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CE9134E8CF70016A47D /* ANTLRNodeMapElement.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CA9134E8CF70016A47D /* ANTLRNodeMapElement.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CEA134E8CF70016A47D /* ANTLRNoViableAltException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CAA134E8CF70016A47D /* ANTLRNoViableAltException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CEB134E8CF70016A47D /* ANTLRParser.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CAB134E8CF70016A47D /* ANTLRParser.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CEC134E8CF70016A47D /* ANTLRParserRuleReturnScope.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CAC134E8CF70016A47D /* ANTLRParserRuleReturnScope.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CED134E8CF80016A47D /* ANTLRParseTree.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CAD134E8CF70016A47D /* ANTLRParseTree.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CEE134E8CF80016A47D /* ANTLRPtrBuffer.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CAE134E8CF70016A47D /* ANTLRPtrBuffer.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CEF134E8CF80016A47D /* ANTLRPtrStack.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CAF134E8CF70016A47D /* ANTLRPtrStack.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CF0134E8CF80016A47D /* ANTLRReaderStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CB0134E8CF70016A47D /* ANTLRReaderStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CF1134E8CF80016A47D /* ANTLRRecognitionException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CB1134E8CF70016A47D /* ANTLRRecognitionException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CF2134E8CF80016A47D /* ANTLRRecognizerSharedState.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CB2134E8CF70016A47D /* ANTLRRecognizerSharedState.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CF3134E8CF80016A47D /* ANTLRRewriteRuleElementStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CB3134E8CF70016A47D /* ANTLRRewriteRuleElementStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CF4134E8CF80016A47D /* ANTLRRewriteRuleNodeStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CB4134E8CF70016A47D /* ANTLRRewriteRuleNodeStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CF5134E8CF80016A47D /* ANTLRRewriteRuleSubtreeStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CB5134E8CF70016A47D /* ANTLRRewriteRuleSubtreeStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CF6134E8CF80016A47D /* ANTLRRewriteRuleTokenStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CB6134E8CF70016A47D /* ANTLRRewriteRuleTokenStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CF7134E8CF80016A47D /* ANTLRRuleMapElement.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CB7134E8CF70016A47D /* ANTLRRuleMapElement.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CF8134E8CF80016A47D /* ANTLRRuleMemo.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CB8134E8CF70016A47D /* ANTLRRuleMemo.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CF9134E8CF80016A47D /* ANTLRRuleReturnScope.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CB9134E8CF70016A47D /* ANTLRRuleReturnScope.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CFA134E8CF80016A47D /* ANTLRRuleStack.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CBA134E8CF70016A47D /* ANTLRRuleStack.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CFB134E8CF80016A47D /* ANTLRRuntimeException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CBB134E8CF70016A47D /* ANTLRRuntimeException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CFC134E8CF80016A47D /* ANTLRStreamEnumerator.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CBC134E8CF70016A47D /* ANTLRStreamEnumerator.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CFD134E8CF80016A47D /* ANTLRStringStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CBD134E8CF70016A47D /* ANTLRStringStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CFE134E8CF80016A47D /* ANTLRStringStreamState.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CBE134E8CF70016A47D /* ANTLRStringStreamState.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1CFF134E8CF80016A47D /* ANTLRSymbolStack.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CBF134E8CF70016A47D /* ANTLRSymbolStack.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D00134E8CF80016A47D /* ANTLRToken.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CC0134E8CF70016A47D /* ANTLRToken.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D01134E8CF80016A47D /* ANTLRToken+DebuggerSupport.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CC1134E8CF70016A47D /* ANTLRToken+DebuggerSupport.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D02134E8CF80016A47D /* ANTLRTokenRewriteStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CC2134E8CF70016A47D /* ANTLRTokenRewriteStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D03134E8CF80016A47D /* ANTLRTokenSource.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CC3134E8CF70016A47D /* ANTLRTokenSource.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D04134E8CF80016A47D /* ANTLRTokenStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CC4134E8CF70016A47D /* ANTLRTokenStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D05134E8CF80016A47D /* ANTLRTree.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CC5134E8CF70016A47D /* ANTLRTree.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D06134E8CF80016A47D /* ANTLRTreeAdaptor.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CC6134E8CF70016A47D /* ANTLRTreeAdaptor.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D07134E8CF80016A47D /* ANTLRTreeException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CC7134E8CF70016A47D /* ANTLRTreeException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D08134E8CF90016A47D /* ANTLRTreeIterator.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CC8134E8CF70016A47D /* ANTLRTreeIterator.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D09134E8CF90016A47D /* ANTLRTreeNodeStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CC9134E8CF70016A47D /* ANTLRTreeNodeStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D0A134E8CF90016A47D /* ANTLRTreeParser.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CCA134E8CF70016A47D /* ANTLRTreeParser.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D0B134E8CF90016A47D /* ANTLRTreePatternLexer.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CCB134E8CF70016A47D /* ANTLRTreePatternLexer.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D0C134E8CF90016A47D /* ANTLRTreePatternParser.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CCC134E8CF70016A47D /* ANTLRTreePatternParser.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D0D134E8CF90016A47D /* ANTLRTreeRewriter.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CCD134E8CF70016A47D /* ANTLRTreeRewriter.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D0E134E8CF90016A47D /* ANTLRTreeRuleReturnScope.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CCE134E8CF70016A47D /* ANTLRTreeRuleReturnScope.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D0F134E8CF90016A47D /* ANTLRTreeVisitor.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CCF134E8CF70016A47D /* ANTLRTreeVisitor.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D10134E8CF90016A47D /* ANTLRTreeVisitorAction.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CD0134E8CF70016A47D /* ANTLRTreeVisitorAction.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D11134E8CF90016A47D /* ANTLRTreeWizard.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CD1134E8CF70016A47D /* ANTLRTreeWizard.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D12134E8CF90016A47D /* ANTLRUnbufferedCommonTreeNodeStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CD2134E8CF70016A47D /* ANTLRUnbufferedCommonTreeNodeStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D13134E8CF90016A47D /* ANTLRUnbufferedCommonTreeNodeStreamState.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CD3134E8CF70016A47D /* ANTLRUnbufferedCommonTreeNodeStreamState.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D14134E8CF90016A47D /* ANTLRUnbufferedTokenStream.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CD4134E8CF70016A47D /* ANTLRUnbufferedTokenStream.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D15134E8CF90016A47D /* ANTLRUniqueIDMap.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CD5134E8CF70016A47D /* ANTLRUniqueIDMap.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D16134E8CF90016A47D /* ANTLRUnwantedTokenException.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A6B1CD6134E8CF70016A47D /* ANTLRUnwantedTokenException.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A6B1D64134E8DEB0016A47D /* ANTLRFastQueueTest.h in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D4A134E8DA10016A47D /* ANTLRFastQueueTest.h */; };
-		1A6B1D65134E8DEB0016A47D /* ANTLRFastQueueTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D4B134E8DA10016A47D /* ANTLRFastQueueTest.m */; };
-		1A6B1D66134E8DEB0016A47D /* ANTLRIntArrayTest.h in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D4C134E8DA10016A47D /* ANTLRIntArrayTest.h */; };
-		1A6B1D67134E8DEB0016A47D /* ANTLRIntArrayTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D4D134E8DA10016A47D /* ANTLRIntArrayTest.m */; };
-		1A6B1D68134E8DEB0016A47D /* ANTLRRecognizerTest.h in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D4F134E8DA10016A47D /* ANTLRRecognizerTest.h */; };
-		1A6B1D69134E8DEB0016A47D /* ANTLRRecognizerTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D50134E8DA10016A47D /* ANTLRRecognizerTest.m */; };
-		1A6B1D6A134E8DEB0016A47D /* ANTLRBitSetTest.h in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D52134E8DA10016A47D /* ANTLRBitSetTest.h */; };
-		1A6B1D6B134E8DEB0016A47D /* ANTLRBitSetTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D53134E8DA10016A47D /* ANTLRBitSetTest.m */; };
-		1A6B1D6C134E8DEB0016A47D /* ANTLRStringStreamTest.h in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D55134E8DA10016A47D /* ANTLRStringStreamTest.h */; };
-		1A6B1D6D134E8DEB0016A47D /* ANTLRStringStreamTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D56134E8DA10016A47D /* ANTLRStringStreamTest.m */; };
-		1A6B1D6E134E8DEB0016A47D /* TestRewriteRuleTokenStream.h in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D58134E8DA10016A47D /* TestRewriteRuleTokenStream.h */; };
-		1A6B1D6F134E8DEB0016A47D /* TestRewriteRuleTokenStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D59134E8DA10016A47D /* TestRewriteRuleTokenStream.m */; };
-		1A6B1D70134E8DEB0016A47D /* ANTLRCommonTokenTest.h in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D5B134E8DA10016A47D /* ANTLRCommonTokenTest.h */; };
-		1A6B1D71134E8DEB0016A47D /* ANTLRCommonTokenTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D5C134E8DA10016A47D /* ANTLRCommonTokenTest.m */; };
-		1A6B1D72134E8DEB0016A47D /* ANTLRCommonErrorNodeTest.h in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D5E134E8DA10016A47D /* ANTLRCommonErrorNodeTest.h */; };
-		1A6B1D73134E8DEB0016A47D /* ANTLRCommonErrorNodeTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D5F134E8DA10016A47D /* ANTLRCommonErrorNodeTest.m */; };
-		1A6B1D74134E8DEB0016A47D /* ANTLRCommonTreeAdaptorTest.h in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D60134E8DA10016A47D /* ANTLRCommonTreeAdaptorTest.h */; };
-		1A6B1D75134E8DEC0016A47D /* ANTLRCommonTreeAdaptorTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D61134E8DA10016A47D /* ANTLRCommonTreeAdaptorTest.m */; };
-		1A6B1D76134E8DEC0016A47D /* ANTLRCommonTreeTest.h in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D62134E8DA10016A47D /* ANTLRCommonTreeTest.h */; };
-		1A6B1D77134E8DEC0016A47D /* ANTLRCommonTreeTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A6B1D63134E8DA10016A47D /* ANTLRCommonTreeTest.m */; };
-		1A6B1D79134EA0970016A47D /* SenTestingKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1A6B1D78134EA0970016A47D /* SenTestingKit.framework */; };
-		1A76A02F134FD4160041634F /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BD1B134F5EB2002EDFB4 /* main.m */; };
-		1A76A030134FD4A00041634F /* LangLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BD17134F5EB2002EDFB4 /* LangLexer.m */; };
-		1A76A031134FD4A40041634F /* LangParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BD19134F5EB2002EDFB4 /* LangParser.m */; };
-		1A76A032134FD4B90041634F /* LangDumpDecl.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A63BD14134F5EB2002EDFB4 /* LangDumpDecl.m */; };
-		1AAC1C3D134FD6A500B2DC68 /* ANTLR.h in Headers */ = {isa = PBXBuildFile; fileRef = 1AAC1C3C134FD6A500B2DC68 /* ANTLR.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1AB7FE15134FBF900059474B /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1AB7FE16134FBF9F0059474B /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1AB7FE17134FBFB20059474B /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1AB7FE18134FC0800059474B /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1AE7231C134E860B001C3F35 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1AE72326134E860B001C3F35 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1AE72324134E860B001C3F35 /* InfoPlist.strings */; };
-		1AE7232E134E860B001C3F35 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE7231B134E860B001C3F35 /* Cocoa.framework */; };
-		1AE72331134E860B001C3F35 /* ANTLR.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72318134E860B001C3F35 /* ANTLR.framework */; };
-		1AE72337134E860B001C3F35 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1AE72335134E860B001C3F35 /* InfoPlist.strings */; };
-		1AE7233A134E860B001C3F35 /* ANTLRTests.h in Resources */ = {isa = PBXBuildFile; fileRef = 1AE72339134E860B001C3F35 /* ANTLRTests.h */; };
-		1AE7233C134E860B001C3F35 /* ANTLRTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7233B134E860B001C3F35 /* ANTLRTests.m */; };
-		1AE72347134E89BF001C3F35 /* CoreFoundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72345134E89BF001C3F35 /* CoreFoundation.framework */; };
-		1AE72348134E89BF001C3F35 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AE72346134E89BF001C3F35 /* Foundation.framework */; };
-		1AE7239F134E8AB4001C3F35 /* ANTLRBaseMapElement.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72349134E8AB4001C3F35 /* ANTLRBaseMapElement.m */; };
-		1AE723A0134E8AB4001C3F35 /* ANTLRBaseRecognizer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7234A134E8AB4001C3F35 /* ANTLRBaseRecognizer.m */; };
-		1AE723A1134E8AB4001C3F35 /* ANTLRBaseStack.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7234B134E8AB4001C3F35 /* ANTLRBaseStack.m */; };
-		1AE723A2134E8AB4001C3F35 /* ANTLRBaseTree.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7234C134E8AB4001C3F35 /* ANTLRBaseTree.m */; };
-		1AE723A3134E8AB4001C3F35 /* ANTLRBaseTreeAdaptor.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7234D134E8AB4001C3F35 /* ANTLRBaseTreeAdaptor.m */; };
-		1AE723A4134E8AB4001C3F35 /* ANTLRBitSet.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7234E134E8AB4001C3F35 /* ANTLRBitSet.m */; };
-		1AE723A5134E8AB4001C3F35 /* ANTLRBufferedTokenStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7234F134E8AB4001C3F35 /* ANTLRBufferedTokenStream.m */; };
-		1AE723A6134E8AB4001C3F35 /* ANTLRBufferedTreeNodeStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72350134E8AB4001C3F35 /* ANTLRBufferedTreeNodeStream.m */; };
-		1AE723A7134E8AB4001C3F35 /* ANTLRCharStreamState.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72351134E8AB4001C3F35 /* ANTLRCharStreamState.m */; };
-		1AE723A8134E8AB4001C3F35 /* ANTLRCommonErrorNode.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72352134E8AB4001C3F35 /* ANTLRCommonErrorNode.m */; };
-		1AE723A9134E8AB4001C3F35 /* ANTLRCommonToken.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72353134E8AB4001C3F35 /* ANTLRCommonToken.m */; };
-		1AE723AA134E8AB4001C3F35 /* ANTLRCommonTokenStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72354134E8AB4001C3F35 /* ANTLRCommonTokenStream.m */; };
-		1AE723AB134E8AB4001C3F35 /* ANTLRCommonTree.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72355134E8AB4001C3F35 /* ANTLRCommonTree.m */; };
-		1AE723AC134E8AB4001C3F35 /* ANTLRCommonTreeAdaptor.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72356134E8AB4001C3F35 /* ANTLRCommonTreeAdaptor.m */; };
-		1AE723AD134E8AB4001C3F35 /* ANTLRCommonTreeNodeStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72357134E8AB4001C3F35 /* ANTLRCommonTreeNodeStream.m */; };
-		1AE723AE134E8AB4001C3F35 /* ANTLRDebugEventProxy.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72358134E8AB4001C3F35 /* ANTLRDebugEventProxy.m */; };
-		1AE723AF134E8AB4001C3F35 /* ANTLRDebugParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72359134E8AB4001C3F35 /* ANTLRDebugParser.m */; };
-		1AE723B0134E8AB4001C3F35 /* ANTLRDebugTokenStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7235A134E8AB4001C3F35 /* ANTLRDebugTokenStream.m */; };
-		1AE723B1134E8AB4001C3F35 /* ANTLRDebugTreeAdaptor.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7235B134E8AB4001C3F35 /* ANTLRDebugTreeAdaptor.m */; };
-		1AE723B2134E8AB4001C3F35 /* ANTLRDebugTreeNodeStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7235C134E8AB4001C3F35 /* ANTLRDebugTreeNodeStream.m */; };
-		1AE723B3134E8AB4001C3F35 /* ANTLRDebugTreeParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7235D134E8AB4001C3F35 /* ANTLRDebugTreeParser.m */; };
-		1AE723B4134E8AB4001C3F35 /* ANTLRDFA.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7235E134E8AB4001C3F35 /* ANTLRDFA.m */; };
-		1AE723B5134E8AB4001C3F35 /* ANTLRDoubleKeyMap.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7235F134E8AB4001C3F35 /* ANTLRDoubleKeyMap.m */; };
-		1AE723B6134E8AB4001C3F35 /* ANTLREarlyExitException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72360134E8AB4001C3F35 /* ANTLREarlyExitException.m */; };
-		1AE723B7134E8AB4001C3F35 /* ANTLRFailedPredicateException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72361134E8AB4001C3F35 /* ANTLRFailedPredicateException.m */; };
-		1AE723B8134E8AB4001C3F35 /* ANTLRFastQueue.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72362134E8AB4001C3F35 /* ANTLRFastQueue.m */; };
-		1AE723B9134E8AB4001C3F35 /* ANTLRFileStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72363134E8AB4001C3F35 /* ANTLRFileStream.m */; };
-		1AE723BA134E8AB5001C3F35 /* ANTLRHashMap.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72364134E8AB4001C3F35 /* ANTLRHashMap.m */; };
-		1AE723BB134E8AB5001C3F35 /* ANTLRHashRule.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72365134E8AB4001C3F35 /* ANTLRHashRule.m */; };
-		1AE723BC134E8AB5001C3F35 /* ANTLRInputStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72366134E8AB4001C3F35 /* ANTLRInputStream.m */; };
-		1AE723BD134E8AB5001C3F35 /* ANTLRIntArray.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72367134E8AB4001C3F35 /* ANTLRIntArray.m */; };
-		1AE723BF134E8AB5001C3F35 /* ANTLRLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72369134E8AB4001C3F35 /* ANTLRLexer.m */; };
-		1AE723C0134E8AB5001C3F35 /* ANTLRLexerRuleReturnScope.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7236A134E8AB4001C3F35 /* ANTLRLexerRuleReturnScope.m */; };
-		1AE723C1134E8AB5001C3F35 /* ANTLRLexerState.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7236B134E8AB4001C3F35 /* ANTLRLexerState.m */; };
-		1AE723C2134E8AB5001C3F35 /* ANTLRLinkBase.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7236C134E8AB4001C3F35 /* ANTLRLinkBase.m */; };
-		1AE723C3134E8AB5001C3F35 /* ANTLRLookaheadStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7236D134E8AB4001C3F35 /* ANTLRLookaheadStream.m */; };
-		1AE723C4134E8AB5001C3F35 /* ANTLRMap.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7236E134E8AB4001C3F35 /* ANTLRMap.m */; };
-		1AE723C5134E8AB5001C3F35 /* ANTLRMapElement.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7236F134E8AB4001C3F35 /* ANTLRMapElement.m */; };
-		1AE723C6134E8AB5001C3F35 /* ANTLRMismatchedNotSetException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72370134E8AB4001C3F35 /* ANTLRMismatchedNotSetException.m */; };
-		1AE723C7134E8AB5001C3F35 /* ANTLRMismatchedRangeException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72371134E8AB4001C3F35 /* ANTLRMismatchedRangeException.m */; };
-		1AE723C8134E8AB5001C3F35 /* ANTLRMismatchedSetException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72372134E8AB4001C3F35 /* ANTLRMismatchedSetException.m */; };
-		1AE723C9134E8AB5001C3F35 /* ANTLRMismatchedTokenException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72373134E8AB4001C3F35 /* ANTLRMismatchedTokenException.m */; };
-		1AE723CA134E8AB5001C3F35 /* ANTLRMismatchedTreeNodeException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72374134E8AB4001C3F35 /* ANTLRMismatchedTreeNodeException.m */; };
-		1AE723CB134E8AB5001C3F35 /* ANTLRMissingTokenException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72375134E8AB4001C3F35 /* ANTLRMissingTokenException.m */; };
-		1AE723CC134E8AB5001C3F35 /* ANTLRNodeMapElement.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72376134E8AB4001C3F35 /* ANTLRNodeMapElement.m */; };
-		1AE723CD134E8AB5001C3F35 /* ANTLRNoViableAltException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72377134E8AB4001C3F35 /* ANTLRNoViableAltException.m */; };
-		1AE723CE134E8AB5001C3F35 /* ANTLRParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72378134E8AB4001C3F35 /* ANTLRParser.m */; };
-		1AE723CF134E8AB5001C3F35 /* ANTLRParserRuleReturnScope.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72379134E8AB4001C3F35 /* ANTLRParserRuleReturnScope.m */; };
-		1AE723D0134E8AB5001C3F35 /* ANTLRParseTree.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7237A134E8AB4001C3F35 /* ANTLRParseTree.m */; };
-		1AE723D1134E8AB5001C3F35 /* ANTLRPtrBuffer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7237B134E8AB4001C3F35 /* ANTLRPtrBuffer.m */; };
-		1AE723D2134E8AB5001C3F35 /* ANTLRPtrStack.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7237C134E8AB4001C3F35 /* ANTLRPtrStack.m */; };
-		1AE723D3134E8AB5001C3F35 /* ANTLRReaderStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7237D134E8AB4001C3F35 /* ANTLRReaderStream.m */; };
-		1AE723D4134E8AB5001C3F35 /* ANTLRRecognitionException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7237E134E8AB4001C3F35 /* ANTLRRecognitionException.m */; };
-		1AE723D5134E8AB5001C3F35 /* ANTLRRecognizerSharedState.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7237F134E8AB4001C3F35 /* ANTLRRecognizerSharedState.m */; };
-		1AE723D6134E8AB5001C3F35 /* ANTLRRewriteRuleElementStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72380134E8AB4001C3F35 /* ANTLRRewriteRuleElementStream.m */; };
-		1AE723D7134E8AB5001C3F35 /* ANTLRRewriteRuleNodeStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72381134E8AB4001C3F35 /* ANTLRRewriteRuleNodeStream.m */; };
-		1AE723D8134E8AB5001C3F35 /* ANTLRRewriteRuleSubtreeStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72382134E8AB4001C3F35 /* ANTLRRewriteRuleSubtreeStream.m */; };
-		1AE723D9134E8AB5001C3F35 /* ANTLRRewriteRuleTokenStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72383134E8AB4001C3F35 /* ANTLRRewriteRuleTokenStream.m */; };
-		1AE723DA134E8AB5001C3F35 /* ANTLRRuleMapElement.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72384134E8AB4001C3F35 /* ANTLRRuleMapElement.m */; };
-		1AE723DB134E8AB5001C3F35 /* ANTLRRuleMemo.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72385134E8AB4001C3F35 /* ANTLRRuleMemo.m */; };
-		1AE723DC134E8AB5001C3F35 /* ANTLRRuleReturnScope.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72386134E8AB4001C3F35 /* ANTLRRuleReturnScope.m */; };
-		1AE723DD134E8AB5001C3F35 /* ANTLRRuleStack.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72387134E8AB4001C3F35 /* ANTLRRuleStack.m */; };
-		1AE723DE134E8AB5001C3F35 /* ANTLRRuntimeException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72388134E8AB4001C3F35 /* ANTLRRuntimeException.m */; };
-		1AE723DF134E8AB5001C3F35 /* ANTLRStreamEnumerator.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72389134E8AB4001C3F35 /* ANTLRStreamEnumerator.m */; };
-		1AE723E0134E8AB5001C3F35 /* ANTLRStringStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7238A134E8AB4001C3F35 /* ANTLRStringStream.m */; };
-		1AE723E1134E8AB5001C3F35 /* ANTLRSymbolStack.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7238B134E8AB4001C3F35 /* ANTLRSymbolStack.m */; };
-		1AE723E2134E8AB5001C3F35 /* ANTLRToken+DebuggerSupport.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7238C134E8AB4001C3F35 /* ANTLRToken+DebuggerSupport.m */; };
-		1AE723E3134E8AB6001C3F35 /* ANTLRTokenRewriteStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7238D134E8AB4001C3F35 /* ANTLRTokenRewriteStream.m */; };
-		1AE723E5134E8AB6001C3F35 /* ANTLRTreeAdaptor.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7238F134E8AB4001C3F35 /* ANTLRTreeAdaptor.m */; };
-		1AE723E6134E8AB6001C3F35 /* ANTLRTreeException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72390134E8AB4001C3F35 /* ANTLRTreeException.m */; };
-		1AE723E7134E8AB6001C3F35 /* ANTLRTreeIterator.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72391134E8AB4001C3F35 /* ANTLRTreeIterator.m */; };
-		1AE723E8134E8AB6001C3F35 /* ANTLRTreeParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72392134E8AB4001C3F35 /* ANTLRTreeParser.m */; };
-		1AE723E9134E8AB6001C3F35 /* ANTLRTreePatternLexer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72393134E8AB4001C3F35 /* ANTLRTreePatternLexer.m */; };
-		1AE723EA134E8AB6001C3F35 /* ANTLRTreePatternParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72394134E8AB4001C3F35 /* ANTLRTreePatternParser.m */; };
-		1AE723EB134E8AB6001C3F35 /* ANTLRTreeRewriter.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72395134E8AB4001C3F35 /* ANTLRTreeRewriter.m */; };
-		1AE723EC134E8AB6001C3F35 /* ANTLRTreeRuleReturnScope.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72396134E8AB4001C3F35 /* ANTLRTreeRuleReturnScope.m */; };
-		1AE723ED134E8AB6001C3F35 /* ANTLRTreeVisitor.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72397134E8AB4001C3F35 /* ANTLRTreeVisitor.m */; };
-		1AE723EE134E8AB6001C3F35 /* ANTLRTreeVisitorAction.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72398134E8AB4001C3F35 /* ANTLRTreeVisitorAction.m */; };
-		1AE723EF134E8AB6001C3F35 /* ANTLRTreeWizard.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE72399134E8AB4001C3F35 /* ANTLRTreeWizard.m */; };
-		1AE723F0134E8AB6001C3F35 /* ANTLRUnbufferedCommonTreeNodeStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7239A134E8AB4001C3F35 /* ANTLRUnbufferedCommonTreeNodeStream.m */; };
-		1AE723F1134E8AB6001C3F35 /* ANTLRUnbufferedCommonTreeNodeStreamState.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7239B134E8AB4001C3F35 /* ANTLRUnbufferedCommonTreeNodeStreamState.m */; };
-		1AE723F2134E8AB6001C3F35 /* ANTLRUnbufferedTokenStream.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7239C134E8AB4001C3F35 /* ANTLRUnbufferedTokenStream.m */; };
-		1AE723F3134E8AB6001C3F35 /* ANTLRUniqueIDMap.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7239D134E8AB4001C3F35 /* ANTLRUniqueIDMap.m */; };
-		1AE723F4134E8AB6001C3F35 /* ANTLRUnwantedTokenException.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AE7239E134E8AB4001C3F35 /* ANTLRUnwantedTokenException.m */; };
-/* End PBXBuildFile section */
-
-/* Begin PBXBuildRule section */
-		1A63BDEC134F649F002EDFB4 /* PBXBuildRule */ = {
-			isa = PBXBuildRule;
-			compilerSpec = com.apple.compilers.proxy.script;
-			fileType = pattern.proxy;
-			isEditable = 1;
-			name = .g.m;
-			outputFiles = (
-				$1Lexer.h,
-				$1Lexer.m,
-				$1Parser.h,
-				$1Parser.m,
-			);
-			script = "-jar /Library/Java/Extensions/antlr-3.3.1.jar $1.g";
-		};
-		1A63BDED134F6810002EDFB4 /* PBXBuildRule */ = {
-			isa = PBXBuildRule;
-			compilerSpec = com.apple.compilers.proxy.script;
-			fileType = pattern.proxy;
-			isEditable = 1;
-			outputFiles = (
-				$1Lexer.h,
-				$1Lexer.m,
-				$1Parser.h,
-				$1Parser.m,
-			);
-			script = "-jar /Library/Java/Extensions/antlr-3.3.1.jar $1.g";
-		};
-		1A76A02C134FC7540041634F /* PBXBuildRule */ = {
-			isa = PBXBuildRule;
-			compilerSpec = com.apple.compilers.proxy.script;
-			fileType = pattern.proxy;
-			isEditable = 1;
-			name = "Files '.g.m' using Script";
-			outputFiles = (
-				treeRewriteLexer.h,
-				treeRewriteLexer.m,
-				treeRewriteParser.h,
-				treeRewriteParser.m,
-			);
-			script = "-jar /Library/Java/Extensions/antlr-3.3.1.jar treeRewrite.g";
-		};
-/* End PBXBuildRule section */
-
-/* Begin PBXContainerItemProxy section */
-		1A63BD9E134F6093002EDFB4 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-		1A63BDA0134F609B002EDFB4 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-		1A63BDA2134F60A7002EDFB4 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-		1A63BDA4134F60B0002EDFB4 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-		1A63BDA6134F60BC002EDFB4 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-		1A63BDA8134F60C3002EDFB4 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-		1A63BDAA134F60CC002EDFB4 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-		1A63BDAC134F60D2002EDFB4 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-		1A63BDE5134F629B002EDFB4 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-		1A63BE0A134FB824002EDFB4 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-		1AE7232F134E860B001C3F35 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1AE7230E134E860A001C3F35 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 1AE72317134E860B001C3F35;
-			remoteInfo = ANTLR;
-		};
-/* End PBXContainerItemProxy section */
-
-/* Begin PBXCopyFilesBuildPhase section */
-		1A63BC5F134F5DAB002EDFB4 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = /usr/share/man/man1/;
-			dstSubfolderSpec = 0;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 1;
-		};
-		1A63BD30134F5F1E002EDFB4 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = /usr/share/man/man1/;
-			dstSubfolderSpec = 0;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 1;
-		};
-		1A63BD3D134F5F36002EDFB4 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = /usr/share/man/man1/;
-			dstSubfolderSpec = 0;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 1;
-		};
-		1A63BD4A134F5F43002EDFB4 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = /usr/share/man/man1/;
-			dstSubfolderSpec = 0;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 1;
-		};
-		1A63BD57134F5F4D002EDFB4 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = /usr/share/man/man1/;
-			dstSubfolderSpec = 0;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 1;
-		};
-		1A63BD64134F5F5E002EDFB4 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = /usr/share/man/man1/;
-			dstSubfolderSpec = 0;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 1;
-		};
-		1A63BD71134F5F67002EDFB4 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = /usr/share/man/man1/;
-			dstSubfolderSpec = 0;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 1;
-		};
-		1A63BD7E134F5F71002EDFB4 /* Copy Files */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = /usr/share/man/man1/;
-			dstSubfolderSpec = 0;
-			files = (
-			);
-			name = "Copy Files";
-			runOnlyForDeploymentPostprocessing = 1;
-		};
-		1A63BDD2134F6233002EDFB4 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = /usr/share/man/man1/;
-			dstSubfolderSpec = 0;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 1;
-		};
-		1A63BDFA134FB75E002EDFB4 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = /usr/share/man/man1/;
-			dstSubfolderSpec = 0;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 1;
-		};
-/* End PBXCopyFilesBuildPhase section */
-
-/* Begin PBXFileReference section */
-		1A048D01134E8C1000005F57 /* antlr3.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = antlr3.h; path = ../antlr3.h; sourceTree = "<group>"; };
-		1A048D02134E8C1000005F57 /* ANTLRBaseMapElement.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRBaseMapElement.h; path = ../ANTLRBaseMapElement.h; sourceTree = "<group>"; };
-		1A048D03134E8C1000005F57 /* ANTLRBaseRecognizer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRBaseRecognizer.h; path = ../ANTLRBaseRecognizer.h; sourceTree = "<group>"; };
-		1A048D04134E8C1000005F57 /* ANTLRBaseStack.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRBaseStack.h; path = ../ANTLRBaseStack.h; sourceTree = "<group>"; };
-		1A048D05134E8C1000005F57 /* ANTLRBaseTree.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRBaseTree.h; path = ../ANTLRBaseTree.h; sourceTree = "<group>"; };
-		1A048D06134E8C1000005F57 /* ANTLRBaseTreeAdaptor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRBaseTreeAdaptor.h; path = ../ANTLRBaseTreeAdaptor.h; sourceTree = "<group>"; };
-		1A048D07134E8C1000005F57 /* ANTLRBitSet.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRBitSet.h; path = ../ANTLRBitSet.h; sourceTree = "<group>"; };
-		1A048D08134E8C1000005F57 /* ANTLRBufferedTokenStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRBufferedTokenStream.h; path = ../ANTLRBufferedTokenStream.h; sourceTree = "<group>"; };
-		1A048D09134E8C1000005F57 /* ANTLRBufferedTreeNodeStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRBufferedTreeNodeStream.h; path = ../ANTLRBufferedTreeNodeStream.h; sourceTree = "<group>"; };
-		1A048D0A134E8C1000005F57 /* ANTLRCharStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRCharStream.h; path = ../ANTLRCharStream.h; sourceTree = "<group>"; };
-		1A048D0B134E8C1000005F57 /* ANTLRCharStreamState.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRCharStreamState.h; path = ../ANTLRCharStreamState.h; sourceTree = "<group>"; };
-		1A048D0C134E8C1000005F57 /* ANTLRCommonErrorNode.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRCommonErrorNode.h; path = ../ANTLRCommonErrorNode.h; sourceTree = "<group>"; };
-		1A048D0D134E8C1000005F57 /* ANTLRCommonToken.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRCommonToken.h; path = ../ANTLRCommonToken.h; sourceTree = "<group>"; };
-		1A048D0E134E8C1000005F57 /* ANTLRCommonTokenStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRCommonTokenStream.h; path = ../ANTLRCommonTokenStream.h; sourceTree = "<group>"; };
-		1A048D0F134E8C1000005F57 /* ANTLRCommonTree.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRCommonTree.h; path = ../ANTLRCommonTree.h; sourceTree = "<group>"; };
-		1A048D10134E8C1000005F57 /* ANTLRCommonTreeAdaptor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRCommonTreeAdaptor.h; path = ../ANTLRCommonTreeAdaptor.h; sourceTree = "<group>"; };
-		1A048D11134E8C1000005F57 /* ANTLRCommonTreeNodeStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRCommonTreeNodeStream.h; path = ../ANTLRCommonTreeNodeStream.h; sourceTree = "<group>"; };
-		1A048D12134E8C1100005F57 /* ANTLRCommonTreeTest-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "ANTLRCommonTreeTest-Info.plist"; path = "../ANTLRCommonTreeTest-Info.plist"; sourceTree = "<group>"; };
-		1A048D13134E8C1100005F57 /* ANTLRDebug.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRDebug.h; path = ../ANTLRDebug.h; sourceTree = "<group>"; };
-		1A048D14134E8C1100005F57 /* ANTLRDebugEventListener.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRDebugEventListener.h; path = ../ANTLRDebugEventListener.h; sourceTree = "<group>"; };
-		1A048D15134E8C1100005F57 /* ANTLRDebugEventProxy.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRDebugEventProxy.h; path = ../ANTLRDebugEventProxy.h; sourceTree = "<group>"; };
-		1A048D16134E8C1100005F57 /* ANTLRDebugParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRDebugParser.h; path = ../ANTLRDebugParser.h; sourceTree = "<group>"; };
-		1A048D17134E8C1100005F57 /* ANTLRDebugTokenStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRDebugTokenStream.h; path = ../ANTLRDebugTokenStream.h; sourceTree = "<group>"; };
-		1A048D18134E8C1100005F57 /* ANTLRDebugTreeAdaptor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRDebugTreeAdaptor.h; path = ../ANTLRDebugTreeAdaptor.h; sourceTree = "<group>"; };
-		1A048D19134E8C1100005F57 /* ANTLRDebugTreeNodeStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRDebugTreeNodeStream.h; path = ../ANTLRDebugTreeNodeStream.h; sourceTree = "<group>"; };
-		1A048D1A134E8C1100005F57 /* ANTLRDebugTreeParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRDebugTreeParser.h; path = ../ANTLRDebugTreeParser.h; sourceTree = "<group>"; };
-		1A048D1B134E8C1100005F57 /* ANTLRDFA.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRDFA.h; path = ../ANTLRDFA.h; sourceTree = "<group>"; };
-		1A048D1C134E8C1100005F57 /* ANTLRDoubleKeyMap.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRDoubleKeyMap.h; path = ../ANTLRDoubleKeyMap.h; sourceTree = "<group>"; };
-		1A048D1D134E8C1100005F57 /* ANTLREarlyExitException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLREarlyExitException.h; path = ../ANTLREarlyExitException.h; sourceTree = "<group>"; };
-		1A048D1E134E8C1100005F57 /* ANTLRError.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRError.h; path = ../ANTLRError.h; sourceTree = "<group>"; };
-		1A048D1F134E8C1100005F57 /* ANTLRFailedPredicateException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRFailedPredicateException.h; path = ../ANTLRFailedPredicateException.h; sourceTree = "<group>"; };
-		1A048D20134E8C1100005F57 /* ANTLRFastQueue.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRFastQueue.h; path = ../ANTLRFastQueue.h; sourceTree = "<group>"; };
-		1A63BC61134F5DAB002EDFB4 /* Fuzzy */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Fuzzy; sourceTree = BUILT_PRODUCTS_DIR; };
-		1A63BC6B134F5DE4002EDFB4 /* FuzzyLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = FuzzyLexer.m; sourceTree = "<group>"; };
-		1A63BC6C134F5DE5002EDFB4 /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
-		1A63BC79134F5EB1002EDFB4 /* antlr3.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = antlr3.h; sourceTree = "<group>"; };
-		1A63BC7A134F5EB1002EDFB4 /* Combined.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = Combined.g; sourceTree = "<group>"; };
-		1A63BC7B134F5EB1002EDFB4 /* Combined.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Combined.tokens; sourceTree = "<group>"; };
-		1A63BC7C134F5EB1002EDFB4 /* Combined__.gl */ = {isa = PBXFileReference; lastKnownFileType = text; path = Combined__.gl; sourceTree = "<group>"; };
-		1A63BC7D134F5EB1002EDFB4 /* CombinedLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = CombinedLexer.h; sourceTree = "<group>"; };
-		1A63BC7E134F5EB1002EDFB4 /* CombinedLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = CombinedLexer.m; sourceTree = "<group>"; };
-		1A63BC7F134F5EB1002EDFB4 /* CombinedParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = CombinedParser.h; sourceTree = "<group>"; };
-		1A63BC80134F5EB1002EDFB4 /* CombinedParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = CombinedParser.m; sourceTree = "<group>"; };
-		1A63BC81134F5EB1002EDFB4 /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
-		1A63BC83134F5EB1002EDFB4 /* Combined.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Combined.tokens; sourceTree = "<group>"; };
-		1A63BC85134F5EB1002EDFB4 /* antlr3.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = antlr3.h; sourceTree = "<group>"; };
-		1A63BC86134F5EB1002EDFB4 /* Fuzzy.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = Fuzzy.g; sourceTree = "<group>"; };
-		1A63BC88134F5EB2002EDFB4 /* Fuzzy.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Fuzzy.tokens; sourceTree = "<group>"; };
-		1A63BC89134F5EB2002EDFB4 /* FuzzyLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FuzzyLexer.h; sourceTree = "<group>"; };
-		1A63BC8B134F5EB2002EDFB4 /* input */ = {isa = PBXFileReference; lastKnownFileType = text; path = input; sourceTree = "<group>"; };
-		1A63BC8E134F5EB2002EDFB4 /* Fuzzy.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = Fuzzy.m; sourceTree = "<group>"; };
-		1A63BC8F134F5EB2002EDFB4 /* Fuzzy.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Fuzzy.tokens; sourceTree = "<group>"; };
-		1A63BC90134F5EB2002EDFB4 /* FuzzyLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FuzzyLexer.h; sourceTree = "<group>"; };
-		1A63BC92134F5EB2002EDFB4 /* antlr3.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = antlr3.h; sourceTree = "<group>"; };
-		1A63BC93134F5EB2002EDFB4 /* input */ = {isa = PBXFileReference; lastKnownFileType = text; path = input; sourceTree = "<group>"; };
-		1A63BC94134F5EB2002EDFB4 /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
-		1A63BC95134F5EB2002EDFB4 /* output */ = {isa = PBXFileReference; lastKnownFileType = text; path = output; sourceTree = "<group>"; };
-		1A63BC96134F5EB2002EDFB4 /* T.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = T.g; sourceTree = "<group>"; };
-		1A63BC97134F5EB2002EDFB4 /* T.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = T.tokens; sourceTree = "<group>"; };
-		1A63BC98134F5EB2002EDFB4 /* TLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TLexer.h; sourceTree = "<group>"; };
-		1A63BC99134F5EB2002EDFB4 /* TLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = TLexer.m; sourceTree = "<group>"; };
-		1A63BC9A134F5EB2002EDFB4 /* TParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TParser.h; sourceTree = "<group>"; };
-		1A63BC9B134F5EB2002EDFB4 /* TParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = TParser.m; sourceTree = "<group>"; };
-		1A63BC9D134F5EB2002EDFB4 /* antlr3.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = antlr3.h; sourceTree = "<group>"; };
-		1A63BC9E134F5EB2002EDFB4 /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
-		1A63BCA0134F5EB2002EDFB4 /* Test.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Test.tokens; sourceTree = "<group>"; };
-		1A63BCA1134F5EB2002EDFB4 /* TestLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TestLexer.h; sourceTree = "<group>"; };
-		1A63BCA2134F5EB2002EDFB4 /* Testlexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = Testlexer.m; sourceTree = "<group>"; };
-		1A63BCA3134F5EB2002EDFB4 /* TestLexer.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = TestLexer.tokens; sourceTree = "<group>"; };
-		1A63BCA4134F5EB2002EDFB4 /* TestLexerLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TestLexerLexer.h; sourceTree = "<group>"; };
-		1A63BCA5134F5EB2002EDFB4 /* Test.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Test.tokens; sourceTree = "<group>"; };
-		1A63BCA6134F5EB2002EDFB4 /* TestLexer.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = TestLexer.g; sourceTree = "<group>"; };
-		1A63BCA7134F5EB2002EDFB4 /* TestLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TestLexer.h; sourceTree = "<group>"; };
-		1A63BCA8134F5EB2002EDFB4 /* TestLexer.h.old */ = {isa = PBXFileReference; lastKnownFileType = text; path = TestLexer.h.old; sourceTree = "<group>"; };
-		1A63BCA9134F5EB2002EDFB4 /* TestLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = TestLexer.m; sourceTree = "<group>"; };
-		1A63BCAA134F5EB2002EDFB4 /* TestLexer.m.old */ = {isa = PBXFileReference; lastKnownFileType = text; path = TestLexer.m.old; sourceTree = "<group>"; };
-		1A63BCAB134F5EB2002EDFB4 /* TestLexer.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = TestLexer.tokens; sourceTree = "<group>"; };
-		1A63BCAC134F5EB2002EDFB4 /* TestLexerLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TestLexerLexer.h; sourceTree = "<group>"; };
-		1A63BCAE134F5EB2002EDFB4 /* antlr3.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = antlr3.h; sourceTree = "<group>"; };
-		1A63BCAF134F5EB2002EDFB4 /* input */ = {isa = PBXFileReference; lastKnownFileType = text; path = input; sourceTree = "<group>"; };
-		1A63BCB0134F5EB2002EDFB4 /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
-		1A63BCB1134F5EB2002EDFB4 /* output */ = {isa = PBXFileReference; lastKnownFileType = text; path = output; sourceTree = "<group>"; };
-		1A63BCB2134F5EB2002EDFB4 /* SimpleC.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleC.g; sourceTree = "<group>"; };
-		1A63BCB3134F5EB2002EDFB4 /* SimpleC.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleC.tokens; sourceTree = "<group>"; };
-		1A63BCB4134F5EB2002EDFB4 /* SimpleC__.gl */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleC__.gl; sourceTree = "<group>"; };
-		1A63BCB5134F5EB2002EDFB4 /* SimpleCLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SimpleCLexer.h; sourceTree = "<group>"; };
-		1A63BCB6134F5EB2002EDFB4 /* SimpleCLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SimpleCLexer.m; sourceTree = "<group>"; };
-		1A63BCB7134F5EB2002EDFB4 /* SimpleCParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SimpleCParser.h; sourceTree = "<group>"; };
-		1A63BCB8134F5EB2002EDFB4 /* SimpleCParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SimpleCParser.m; sourceTree = "<group>"; };
-		1A63BCBA134F5EB2002EDFB4 /* files */ = {isa = PBXFileReference; lastKnownFileType = text; path = files; sourceTree = "<group>"; };
-		1A63BCBB134F5EB2002EDFB4 /* input */ = {isa = PBXFileReference; lastKnownFileType = text; path = input; sourceTree = "<group>"; };
-		1A63BCBC134F5EB2002EDFB4 /* Main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = Main.m; sourceTree = "<group>"; };
-		1A63BCBD134F5EB2002EDFB4 /* output */ = {isa = PBXFileReference; lastKnownFileType = text; path = output; sourceTree = "<group>"; };
-		1A63BCBF134F5EB2002EDFB4 /* Poly.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Poly.tokens; sourceTree = "<group>"; };
-		1A63BCC0134F5EB2002EDFB4 /* PolyDifferentiator.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = PolyDifferentiator.m; sourceTree = "<group>"; };
-		1A63BCC1134F5EB2002EDFB4 /* PolyLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = PolyLexer.h; sourceTree = "<group>"; };
-		1A63BCC2134F5EB2002EDFB4 /* PolyLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = PolyLexer.m; sourceTree = "<group>"; };
-		1A63BCC3134F5EB2002EDFB4 /* PolyParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = PolyParser.h; sourceTree = "<group>"; };
-		1A63BCC4134F5EB2002EDFB4 /* PolyParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = PolyParser.m; sourceTree = "<group>"; };
-		1A63BCC5134F5EB2002EDFB4 /* Simplifier.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = Simplifier.h; sourceTree = "<group>"; };
-		1A63BCC6134F5EB2002EDFB4 /* Simplifier.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = Simplifier.m; sourceTree = "<group>"; };
-		1A63BCC7134F5EB2002EDFB4 /* Simplifier.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Simplifier.tokens; sourceTree = "<group>"; };
-		1A63BCC8134F5EB2002EDFB4 /* Poly.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = Poly.g; sourceTree = "<group>"; };
-		1A63BCC9134F5EB2002EDFB4 /* Poly.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Poly.tokens; sourceTree = "<group>"; };
-		1A63BCCA134F5EB2002EDFB4 /* PolyDifferentiator.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = PolyDifferentiator.g; sourceTree = "<group>"; };
-		1A63BCCB134F5EB2002EDFB4 /* PolyDifferentiator.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = PolyDifferentiator.m; sourceTree = "<group>"; };
-		1A63BCCC134F5EB2002EDFB4 /* PolyLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = PolyLexer.h; sourceTree = "<group>"; };
-		1A63BCCD134F5EB2002EDFB4 /* PolyLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = PolyLexer.m; sourceTree = "<group>"; };
-		1A63BCCE134F5EB2002EDFB4 /* PolyParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = PolyParser.h; sourceTree = "<group>"; };
-		1A63BCCF134F5EB2002EDFB4 /* PolyParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = PolyParser.m; sourceTree = "<group>"; };
-		1A63BCD0134F5EB2002EDFB4 /* PolyPrinter.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = PolyPrinter.g; sourceTree = "<group>"; };
-		1A63BCD1134F5EB2002EDFB4 /* PolyPrinter.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = PolyPrinter.h; sourceTree = "<group>"; };
-		1A63BCD2134F5EB2002EDFB4 /* PolyPrinter.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = PolyPrinter.m; sourceTree = "<group>"; };
-		1A63BCD3134F5EB2002EDFB4 /* PolyPrinter.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = PolyPrinter.tokens; sourceTree = "<group>"; };
-		1A63BCD4134F5EB2002EDFB4 /* Simplifier.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = Simplifier.g; sourceTree = "<group>"; };
-		1A63BCD5134F5EB2002EDFB4 /* Simplifier.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = Simplifier.h; sourceTree = "<group>"; };
-		1A63BCD6134F5EB2002EDFB4 /* Simplifier.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = Simplifier.m; sourceTree = "<group>"; };
-		1A63BCD7134F5EB2002EDFB4 /* Simplifier.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Simplifier.tokens; sourceTree = "<group>"; };
-		1A63BCD9134F5EB2002EDFB4 /* antlr3.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = antlr3.h; sourceTree = "<group>"; };
-		1A63BCDA134F5EB2002EDFB4 /* input */ = {isa = PBXFileReference; lastKnownFileType = text; path = input; sourceTree = "<group>"; };
-		1A63BCDB134F5EB2002EDFB4 /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
-		1A63BCDC134F5EB2002EDFB4 /* output */ = {isa = PBXFileReference; lastKnownFileType = text; path = output; sourceTree = "<group>"; };
-		1A63BCDE134F5EB2002EDFB4 /* SymbolTable.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = SymbolTable.tokens; sourceTree = "<group>"; };
-		1A63BCDF134F5EB2002EDFB4 /* SymbolTableLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SymbolTableLexer.h; sourceTree = "<group>"; };
-		1A63BCE0134F5EB2002EDFB4 /* SymbolTableLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SymbolTableLexer.m; sourceTree = "<group>"; };
-		1A63BCE1134F5EB2002EDFB4 /* SymbolTableParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SymbolTableParser.h; sourceTree = "<group>"; };
-		1A63BCE2134F5EB2002EDFB4 /* SymbolTableParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SymbolTableParser.m; sourceTree = "<group>"; };
-		1A63BCE3134F5EB2002EDFB4 /* SymbolTable.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = SymbolTable.g; sourceTree = "<group>"; };
-		1A63BCE4134F5EB2002EDFB4 /* SymbolTable.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = SymbolTable.tokens; sourceTree = "<group>"; };
-		1A63BCE5134F5EB2002EDFB4 /* SymbolTable__.gl */ = {isa = PBXFileReference; lastKnownFileType = text; path = SymbolTable__.gl; sourceTree = "<group>"; };
-		1A63BCE6134F5EB2002EDFB4 /* SymbolTableLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SymbolTableLexer.h; sourceTree = "<group>"; };
-		1A63BCE7134F5EB2002EDFB4 /* SymbolTableLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SymbolTableLexer.m; sourceTree = "<group>"; };
-		1A63BCE8134F5EB2002EDFB4 /* SymbolTableParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SymbolTableParser.h; sourceTree = "<group>"; };
-		1A63BCE9134F5EB2002EDFB4 /* SymbolTableParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SymbolTableParser.m; sourceTree = "<group>"; };
-		1A63BCEB134F5EB2002EDFB4 /* antlr3.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = antlr3.h; sourceTree = "<group>"; };
-		1A63BCEC134F5EB2002EDFB4 /* input */ = {isa = PBXFileReference; lastKnownFileType = text; path = input; sourceTree = "<group>"; };
-		1A63BCED134F5EB2002EDFB4 /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
-		1A63BCEE134F5EB2002EDFB4 /* output */ = {isa = PBXFileReference; lastKnownFileType = text; path = output; sourceTree = "<group>"; };
-		1A63BCF0134F5EB2002EDFB4 /* SimpleC.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleC.tokens; sourceTree = "<group>"; };
-		1A63BCF1134F5EB2002EDFB4 /* SimpleCLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SimpleCLexer.h; sourceTree = "<group>"; };
-		1A63BCF2134F5EB2002EDFB4 /* SimpleCLexer.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = SimpleCLexer.java; sourceTree = "<group>"; };
-		1A63BCF3134F5EB2002EDFB4 /* SimpleCLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SimpleCLexer.m; sourceTree = "<group>"; };
-		1A63BCF4134F5EB2002EDFB4 /* SimpleCParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SimpleCParser.h; sourceTree = "<group>"; };
-		1A63BCF5134F5EB2002EDFB4 /* SimpleCParser.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = SimpleCParser.java; sourceTree = "<group>"; };
-		1A63BCF6134F5EB2002EDFB4 /* SimpleCParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SimpleCParser.m; sourceTree = "<group>"; };
-		1A63BCF7134F5EB2002EDFB4 /* SimpleCTP.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SimpleCTP.h; sourceTree = "<group>"; };
-		1A63BCF8134F5EB2002EDFB4 /* SimpleCTP.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = SimpleCTP.java; sourceTree = "<group>"; };
-		1A63BCF9134F5EB2002EDFB4 /* SimpleCTP.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SimpleCTP.m; sourceTree = "<group>"; };
-		1A63BCFA134F5EB2002EDFB4 /* SimpleCTP.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleCTP.tokens; sourceTree = "<group>"; };
-		1A63BCFB134F5EB2002EDFB4 /* SimpleC.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleC.g; sourceTree = "<group>"; };
-		1A63BCFC134F5EB2002EDFB4 /* SimpleC.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleC.tokens; sourceTree = "<group>"; };
-		1A63BCFD134F5EB2002EDFB4 /* SimpleC__.gl */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleC__.gl; sourceTree = "<group>"; };
-		1A63BCFE134F5EB2002EDFB4 /* SimpleCLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SimpleCLexer.h; sourceTree = "<group>"; };
-		1A63BCFF134F5EB2002EDFB4 /* SimpleCLexer.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = SimpleCLexer.java; sourceTree = "<group>"; };
-		1A63BD00134F5EB2002EDFB4 /* SimpleCLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SimpleCLexer.m; sourceTree = "<group>"; };
-		1A63BD01134F5EB2002EDFB4 /* SimpleCParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SimpleCParser.h; sourceTree = "<group>"; };
-		1A63BD02134F5EB2002EDFB4 /* SimpleCParser.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = SimpleCParser.java; sourceTree = "<group>"; };
-		1A63BD03134F5EB2002EDFB4 /* SimpleCParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SimpleCParser.m; sourceTree = "<group>"; };
-		1A63BD04134F5EB2002EDFB4 /* SimpleCTP.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleCTP.g; sourceTree = "<group>"; };
-		1A63BD05134F5EB2002EDFB4 /* SimpleCTP.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SimpleCTP.h; sourceTree = "<group>"; };
-		1A63BD06134F5EB2002EDFB4 /* SimpleCTP.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = SimpleCTP.java; sourceTree = "<group>"; };
-		1A63BD07134F5EB2002EDFB4 /* SimpleCTP.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SimpleCTP.m; sourceTree = "<group>"; };
-		1A63BD08134F5EB2002EDFB4 /* SimpleCTP.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleCTP.tokens; sourceTree = "<group>"; };
-		1A63BD09134F5EB2002EDFB4 /* SimpleCWalker.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleCWalker.g; sourceTree = "<group>"; };
-		1A63BD0A134F5EB2002EDFB4 /* SimpleCWalker.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SimpleCWalker.h; sourceTree = "<group>"; };
-		1A63BD0B134F5EB2002EDFB4 /* SimpleCWalker.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SimpleCWalker.m; sourceTree = "<group>"; };
-		1A63BD0C134F5EB2002EDFB4 /* SimpleCWalker.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = SimpleCWalker.tokens; sourceTree = "<group>"; };
-		1A63BD0E134F5EB2002EDFB4 /* files */ = {isa = PBXFileReference; lastKnownFileType = text; path = files; sourceTree = "<group>"; };
-		1A63BD0F134F5EB2002EDFB4 /* input */ = {isa = PBXFileReference; lastKnownFileType = text; path = input; sourceTree = "<group>"; };
-		1A63BD10134F5EB2002EDFB4 /* Lang.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = Lang.g; sourceTree = "<group>"; };
-		1A63BD11134F5EB2002EDFB4 /* Lang.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = Lang.tokens; sourceTree = "<group>"; };
-		1A63BD12134F5EB2002EDFB4 /* LangDumpDecl.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = LangDumpDecl.g; sourceTree = "<group>"; };
-		1A63BD13134F5EB2002EDFB4 /* LangDumpDecl.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = LangDumpDecl.h; sourceTree = "<group>"; };
-		1A63BD14134F5EB2002EDFB4 /* LangDumpDecl.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = LangDumpDecl.m; sourceTree = "<group>"; };
-		1A63BD15134F5EB2002EDFB4 /* LangDumpDecl.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = LangDumpDecl.tokens; sourceTree = "<group>"; };
-		1A63BD16134F5EB2002EDFB4 /* LangLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = LangLexer.h; sourceTree = "<group>"; };
-		1A63BD17134F5EB2002EDFB4 /* LangLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = LangLexer.m; sourceTree = "<group>"; };
-		1A63BD18134F5EB2002EDFB4 /* LangParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = LangParser.h; sourceTree = "<group>"; };
-		1A63BD19134F5EB2002EDFB4 /* LangParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = LangParser.m; sourceTree = "<group>"; };
-		1A63BD1A134F5EB2002EDFB4 /* Main.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = Main.java; sourceTree = "<group>"; };
-		1A63BD1B134F5EB2002EDFB4 /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
-		1A63BD1C134F5EB2002EDFB4 /* output */ = {isa = PBXFileReference; lastKnownFileType = text; path = output; sourceTree = "<group>"; };
-		1A63BD1E134F5EB2002EDFB4 /* README.txt */ = {isa = PBXFileReference; lastKnownFileType = text; path = README.txt; sourceTree = "<group>"; };
-		1A63BD20134F5EB2002EDFB4 /* antlr3.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = antlr3.h; sourceTree = "<group>"; };
-		1A63BD21134F5EB2002EDFB4 /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
-		1A63BD23134F5EB2002EDFB4 /* TreeRewrite.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = TreeRewrite.tokens; sourceTree = "<group>"; };
-		1A63BD24134F5EB2002EDFB4 /* TreeRewriteLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TreeRewriteLexer.h; sourceTree = "<group>"; };
-		1A63BD25134F5EB2002EDFB4 /* TreeRewriteLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = TreeRewriteLexer.m; sourceTree = "<group>"; };
-		1A63BD26134F5EB2002EDFB4 /* TreeRewriteParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TreeRewriteParser.h; sourceTree = "<group>"; };
-		1A63BD27134F5EB2002EDFB4 /* TreeRewriteParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = TreeRewriteParser.m; sourceTree = "<group>"; };
-		1A63BD28134F5EB2002EDFB4 /* TreeRewrite.g */ = {isa = PBXFileReference; lastKnownFileType = text; path = TreeRewrite.g; sourceTree = "<group>"; };
-		1A63BD29134F5EB2002EDFB4 /* TreeRewrite.tokens */ = {isa = PBXFileReference; lastKnownFileType = text; path = TreeRewrite.tokens; sourceTree = "<group>"; };
-		1A63BD2A134F5EB2002EDFB4 /* TreeRewriteLexer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TreeRewriteLexer.h; sourceTree = "<group>"; };
-		1A63BD2B134F5EB2002EDFB4 /* TreeRewriteLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = TreeRewriteLexer.m; sourceTree = "<group>"; };
-		1A63BD2C134F5EB2002EDFB4 /* TreeRewriteParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TreeRewriteParser.h; sourceTree = "<group>"; };
-		1A63BD2D134F5EB2002EDFB4 /* TreeRewriteParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = TreeRewriteParser.m; sourceTree = "<group>"; };
-		1A63BD32134F5F1E002EDFB4 /* combined */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = combined; sourceTree = BUILT_PRODUCTS_DIR; };
-		1A63BD3F134F5F36002EDFB4 /* lexertest-simple */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = "lexertest-simple"; sourceTree = BUILT_PRODUCTS_DIR; };
-		1A63BD4C134F5F43002EDFB4 /* LL-start */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = "LL-start"; sourceTree = BUILT_PRODUCTS_DIR; };
-		1A63BD59134F5F4D002EDFB4 /* polydiff */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = polydiff; sourceTree = BUILT_PRODUCTS_DIR; };
-		1A63BD66134F5F5E002EDFB4 /* simplecTreeParser */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = simplecTreeParser; sourceTree = BUILT_PRODUCTS_DIR; };
-		1A63BD73134F5F67002EDFB4 /* treeparser */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = treeparser; sourceTree = BUILT_PRODUCTS_DIR; };
-		1A63BD80134F5F71002EDFB4 /* treerewrite */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = treerewrite; sourceTree = BUILT_PRODUCTS_DIR; };
-		1A63BDD4134F6233002EDFB4 /* scopes */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = scopes; sourceTree = BUILT_PRODUCTS_DIR; };
-		1A63BDFC134FB75E002EDFB4 /* hoistedPredicates */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = hoistedPredicates; sourceTree = BUILT_PRODUCTS_DIR; };
-		1A6B1C97134E8CF70016A47D /* ANTLRFileStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRFileStream.h; path = ../ANTLRFileStream.h; sourceTree = "<group>"; };
-		1A6B1C98134E8CF70016A47D /* ANTLRHashMap.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRHashMap.h; path = ../ANTLRHashMap.h; sourceTree = "<group>"; };
-		1A6B1C99134E8CF70016A47D /* ANTLRHashRule.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRHashRule.h; path = ../ANTLRHashRule.h; sourceTree = "<group>"; };
-		1A6B1C9A134E8CF70016A47D /* ANTLRInputStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRInputStream.h; path = ../ANTLRInputStream.h; sourceTree = "<group>"; };
-		1A6B1C9B134E8CF70016A47D /* ANTLRIntArray.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRIntArray.h; path = ../ANTLRIntArray.h; sourceTree = "<group>"; };
-		1A6B1C9C134E8CF70016A47D /* ANTLRLexer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRLexer.h; path = ../ANTLRLexer.h; sourceTree = "<group>"; };
-		1A6B1C9D134E8CF70016A47D /* ANTLRLexerRuleReturnScope.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRLexerRuleReturnScope.h; path = ../ANTLRLexerRuleReturnScope.h; sourceTree = "<group>"; };
-		1A6B1C9E134E8CF70016A47D /* ANTLRLexerState.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRLexerState.h; path = ../ANTLRLexerState.h; sourceTree = "<group>"; };
-		1A6B1C9F134E8CF70016A47D /* ANTLRLinkBase.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRLinkBase.h; path = ../ANTLRLinkBase.h; sourceTree = "<group>"; };
-		1A6B1CA0134E8CF70016A47D /* ANTLRLookaheadStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRLookaheadStream.h; path = ../ANTLRLookaheadStream.h; sourceTree = "<group>"; };
-		1A6B1CA1134E8CF70016A47D /* ANTLRMap.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRMap.h; path = ../ANTLRMap.h; sourceTree = "<group>"; };
-		1A6B1CA2134E8CF70016A47D /* ANTLRMapElement.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRMapElement.h; path = ../ANTLRMapElement.h; sourceTree = "<group>"; };
-		1A6B1CA3134E8CF70016A47D /* ANTLRMismatchedNotSetException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRMismatchedNotSetException.h; path = ../ANTLRMismatchedNotSetException.h; sourceTree = "<group>"; };
-		1A6B1CA4134E8CF70016A47D /* ANTLRMismatchedRangeException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRMismatchedRangeException.h; path = ../ANTLRMismatchedRangeException.h; sourceTree = "<group>"; };
-		1A6B1CA5134E8CF70016A47D /* ANTLRMismatchedSetException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRMismatchedSetException.h; path = ../ANTLRMismatchedSetException.h; sourceTree = "<group>"; };
-		1A6B1CA6134E8CF70016A47D /* ANTLRMismatchedTokenException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRMismatchedTokenException.h; path = ../ANTLRMismatchedTokenException.h; sourceTree = "<group>"; };
-		1A6B1CA7134E8CF70016A47D /* ANTLRMismatchedTreeNodeException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRMismatchedTreeNodeException.h; path = ../ANTLRMismatchedTreeNodeException.h; sourceTree = "<group>"; };
-		1A6B1CA8134E8CF70016A47D /* ANTLRMissingTokenException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRMissingTokenException.h; path = ../ANTLRMissingTokenException.h; sourceTree = "<group>"; };
-		1A6B1CA9134E8CF70016A47D /* ANTLRNodeMapElement.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRNodeMapElement.h; path = ../ANTLRNodeMapElement.h; sourceTree = "<group>"; };
-		1A6B1CAA134E8CF70016A47D /* ANTLRNoViableAltException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRNoViableAltException.h; path = ../ANTLRNoViableAltException.h; sourceTree = "<group>"; };
-		1A6B1CAB134E8CF70016A47D /* ANTLRParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRParser.h; path = ../ANTLRParser.h; sourceTree = "<group>"; };
-		1A6B1CAC134E8CF70016A47D /* ANTLRParserRuleReturnScope.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRParserRuleReturnScope.h; path = ../ANTLRParserRuleReturnScope.h; sourceTree = "<group>"; };
-		1A6B1CAD134E8CF70016A47D /* ANTLRParseTree.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRParseTree.h; path = ../ANTLRParseTree.h; sourceTree = "<group>"; };
-		1A6B1CAE134E8CF70016A47D /* ANTLRPtrBuffer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRPtrBuffer.h; path = ../ANTLRPtrBuffer.h; sourceTree = "<group>"; };
-		1A6B1CAF134E8CF70016A47D /* ANTLRPtrStack.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRPtrStack.h; path = ../ANTLRPtrStack.h; sourceTree = "<group>"; };
-		1A6B1CB0134E8CF70016A47D /* ANTLRReaderStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRReaderStream.h; path = ../ANTLRReaderStream.h; sourceTree = "<group>"; };
-		1A6B1CB1134E8CF70016A47D /* ANTLRRecognitionException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRecognitionException.h; path = ../ANTLRRecognitionException.h; sourceTree = "<group>"; };
-		1A6B1CB2134E8CF70016A47D /* ANTLRRecognizerSharedState.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRecognizerSharedState.h; path = ../ANTLRRecognizerSharedState.h; sourceTree = "<group>"; };
-		1A6B1CB3134E8CF70016A47D /* ANTLRRewriteRuleElementStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRewriteRuleElementStream.h; path = ../ANTLRRewriteRuleElementStream.h; sourceTree = "<group>"; };
-		1A6B1CB4134E8CF70016A47D /* ANTLRRewriteRuleNodeStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRewriteRuleNodeStream.h; path = ../ANTLRRewriteRuleNodeStream.h; sourceTree = "<group>"; };
-		1A6B1CB5134E8CF70016A47D /* ANTLRRewriteRuleSubtreeStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRewriteRuleSubtreeStream.h; path = ../ANTLRRewriteRuleSubtreeStream.h; sourceTree = "<group>"; };
-		1A6B1CB6134E8CF70016A47D /* ANTLRRewriteRuleTokenStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRewriteRuleTokenStream.h; path = ../ANTLRRewriteRuleTokenStream.h; sourceTree = "<group>"; };
-		1A6B1CB7134E8CF70016A47D /* ANTLRRuleMapElement.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRuleMapElement.h; path = ../ANTLRRuleMapElement.h; sourceTree = "<group>"; };
-		1A6B1CB8134E8CF70016A47D /* ANTLRRuleMemo.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRuleMemo.h; path = ../ANTLRRuleMemo.h; sourceTree = "<group>"; };
-		1A6B1CB9134E8CF70016A47D /* ANTLRRuleReturnScope.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRuleReturnScope.h; path = ../ANTLRRuleReturnScope.h; sourceTree = "<group>"; };
-		1A6B1CBA134E8CF70016A47D /* ANTLRRuleStack.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRuleStack.h; path = ../ANTLRRuleStack.h; sourceTree = "<group>"; };
-		1A6B1CBB134E8CF70016A47D /* ANTLRRuntimeException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRRuntimeException.h; path = ../ANTLRRuntimeException.h; sourceTree = "<group>"; };
-		1A6B1CBC134E8CF70016A47D /* ANTLRStreamEnumerator.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRStreamEnumerator.h; path = ../ANTLRStreamEnumerator.h; sourceTree = "<group>"; };
-		1A6B1CBD134E8CF70016A47D /* ANTLRStringStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRStringStream.h; path = ../ANTLRStringStream.h; sourceTree = "<group>"; };
-		1A6B1CBE134E8CF70016A47D /* ANTLRStringStreamState.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRStringStreamState.h; path = ../ANTLRStringStreamState.h; sourceTree = "<group>"; };
-		1A6B1CBF134E8CF70016A47D /* ANTLRSymbolStack.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRSymbolStack.h; path = ../ANTLRSymbolStack.h; sourceTree = "<group>"; };
-		1A6B1CC0134E8CF70016A47D /* ANTLRToken.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRToken.h; path = ../ANTLRToken.h; sourceTree = "<group>"; };
-		1A6B1CC1134E8CF70016A47D /* ANTLRToken+DebuggerSupport.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = "ANTLRToken+DebuggerSupport.h"; path = "../ANTLRToken+DebuggerSupport.h"; sourceTree = "<group>"; };
-		1A6B1CC2134E8CF70016A47D /* ANTLRTokenRewriteStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTokenRewriteStream.h; path = ../ANTLRTokenRewriteStream.h; sourceTree = "<group>"; };
-		1A6B1CC3134E8CF70016A47D /* ANTLRTokenSource.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTokenSource.h; path = ../ANTLRTokenSource.h; sourceTree = "<group>"; };
-		1A6B1CC4134E8CF70016A47D /* ANTLRTokenStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTokenStream.h; path = ../ANTLRTokenStream.h; sourceTree = "<group>"; };
-		1A6B1CC5134E8CF70016A47D /* ANTLRTree.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTree.h; path = ../ANTLRTree.h; sourceTree = "<group>"; };
-		1A6B1CC6134E8CF70016A47D /* ANTLRTreeAdaptor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreeAdaptor.h; path = ../ANTLRTreeAdaptor.h; sourceTree = "<group>"; };
-		1A6B1CC7134E8CF70016A47D /* ANTLRTreeException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreeException.h; path = ../ANTLRTreeException.h; sourceTree = "<group>"; };
-		1A6B1CC8134E8CF70016A47D /* ANTLRTreeIterator.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreeIterator.h; path = ../ANTLRTreeIterator.h; sourceTree = "<group>"; };
-		1A6B1CC9134E8CF70016A47D /* ANTLRTreeNodeStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreeNodeStream.h; path = ../ANTLRTreeNodeStream.h; sourceTree = "<group>"; };
-		1A6B1CCA134E8CF70016A47D /* ANTLRTreeParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreeParser.h; path = ../ANTLRTreeParser.h; sourceTree = "<group>"; };
-		1A6B1CCB134E8CF70016A47D /* ANTLRTreePatternLexer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreePatternLexer.h; path = ../ANTLRTreePatternLexer.h; sourceTree = "<group>"; };
-		1A6B1CCC134E8CF70016A47D /* ANTLRTreePatternParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreePatternParser.h; path = ../ANTLRTreePatternParser.h; sourceTree = "<group>"; };
-		1A6B1CCD134E8CF70016A47D /* ANTLRTreeRewriter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreeRewriter.h; path = ../ANTLRTreeRewriter.h; sourceTree = "<group>"; };
-		1A6B1CCE134E8CF70016A47D /* ANTLRTreeRuleReturnScope.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreeRuleReturnScope.h; path = ../ANTLRTreeRuleReturnScope.h; sourceTree = "<group>"; };
-		1A6B1CCF134E8CF70016A47D /* ANTLRTreeVisitor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreeVisitor.h; path = ../ANTLRTreeVisitor.h; sourceTree = "<group>"; };
-		1A6B1CD0134E8CF70016A47D /* ANTLRTreeVisitorAction.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreeVisitorAction.h; path = ../ANTLRTreeVisitorAction.h; sourceTree = "<group>"; };
-		1A6B1CD1134E8CF70016A47D /* ANTLRTreeWizard.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRTreeWizard.h; path = ../ANTLRTreeWizard.h; sourceTree = "<group>"; };
-		1A6B1CD2134E8CF70016A47D /* ANTLRUnbufferedCommonTreeNodeStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRUnbufferedCommonTreeNodeStream.h; path = ../ANTLRUnbufferedCommonTreeNodeStream.h; sourceTree = "<group>"; };
-		1A6B1CD3134E8CF70016A47D /* ANTLRUnbufferedCommonTreeNodeStreamState.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRUnbufferedCommonTreeNodeStreamState.h; path = ../ANTLRUnbufferedCommonTreeNodeStreamState.h; sourceTree = "<group>"; };
-		1A6B1CD4134E8CF70016A47D /* ANTLRUnbufferedTokenStream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRUnbufferedTokenStream.h; path = ../ANTLRUnbufferedTokenStream.h; sourceTree = "<group>"; };
-		1A6B1CD5134E8CF70016A47D /* ANTLRUniqueIDMap.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRUniqueIDMap.h; path = ../ANTLRUniqueIDMap.h; sourceTree = "<group>"; };
-		1A6B1CD6134E8CF70016A47D /* ANTLRUnwantedTokenException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLRUnwantedTokenException.h; path = ../ANTLRUnwantedTokenException.h; sourceTree = "<group>"; };
-		1A6B1D1F134E8DA10016A47D /* BaseTest.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = BaseTest.java; sourceTree = "<group>"; };
-		1A6B1D20134E8DA10016A47D /* DebugTestAutoAST.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = DebugTestAutoAST.java; sourceTree = "<group>"; };
-		1A6B1D21134E8DA10016A47D /* DebugTestCompositeGrammars.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = DebugTestCompositeGrammars.java; sourceTree = "<group>"; };
-		1A6B1D22134E8DA10016A47D /* DebugTestRewriteAST.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = DebugTestRewriteAST.java; sourceTree = "<group>"; };
-		1A6B1D23134E8DA10016A47D /* ErrorQueue.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = ErrorQueue.java; sourceTree = "<group>"; };
-		1A6B1D24134E8DA10016A47D /* TestASTConstruction.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestASTConstruction.java; sourceTree = "<group>"; };
-		1A6B1D25134E8DA10016A47D /* TestAttributes.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestAttributes.java; sourceTree = "<group>"; };
-		1A6B1D26134E8DA10016A47D /* TestAutoAST.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestAutoAST.java; sourceTree = "<group>"; };
-		1A6B1D27134E8DA10016A47D /* TestBufferedTreeNodeStream.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestBufferedTreeNodeStream.java; sourceTree = "<group>"; };
-		1A6B1D28134E8DA10016A47D /* TestCharDFAConversion.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestCharDFAConversion.java; sourceTree = "<group>"; };
-		1A6B1D29134E8DA10016A47D /* TestCommonTokenStream.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestCommonTokenStream.java; sourceTree = "<group>"; };
-		1A6B1D2A134E8DA10016A47D /* TestCompositeGrammars.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestCompositeGrammars.java; sourceTree = "<group>"; };
-		1A6B1D2B134E8DA10016A47D /* TestDFAConversion.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestDFAConversion.java; sourceTree = "<group>"; };
-		1A6B1D2C134E8DA10016A47D /* TestDFAMatching.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestDFAMatching.java; sourceTree = "<group>"; };
-		1A6B1D2D134E8DA10016A47D /* TestFastQueue.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestFastQueue.java; sourceTree = "<group>"; };
-		1A6B1D2E134E8DA10016A47D /* TestHeteroAST.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestHeteroAST.java; sourceTree = "<group>"; };
-		1A6B1D2F134E8DA10016A47D /* TestInterpretedLexing.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestInterpretedLexing.java; sourceTree = "<group>"; };
-		1A6B1D30134E8DA10016A47D /* TestInterpretedParsing.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestInterpretedParsing.java; sourceTree = "<group>"; };
-		1A6B1D31134E8DA10016A47D /* TestIntervalSet.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestIntervalSet.java; sourceTree = "<group>"; };
-		1A6B1D32134E8DA10016A47D /* TestJavaCodeGeneration.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestJavaCodeGeneration.java; sourceTree = "<group>"; };
-		1A6B1D33134E8DA10016A47D /* TestLeftRecursion.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestLeftRecursion.java; sourceTree = "<group>"; };
-		1A6B1D34134E8DA10016A47D /* TestLexer.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestLexer.java; sourceTree = "<group>"; };
-		1A6B1D35134E8DA10016A47D /* TestMessages.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestMessages.java; sourceTree = "<group>"; };
-		1A6B1D36134E8DA10016A47D /* TestNFAConstruction.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestNFAConstruction.java; sourceTree = "<group>"; };
-		1A6B1D37134E8DA10016A47D /* TestRewriteAST.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestRewriteAST.java; sourceTree = "<group>"; };
-		1A6B1D38134E8DA10016A47D /* TestRewriteTemplates.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestRewriteTemplates.java; sourceTree = "<group>"; };
-		1A6B1D39134E8DA10016A47D /* TestSemanticPredicateEvaluation.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestSemanticPredicateEvaluation.java; sourceTree = "<group>"; };
-		1A6B1D3A134E8DA10016A47D /* TestSemanticPredicates.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestSemanticPredicates.java; sourceTree = "<group>"; };
-		1A6B1D3B134E8DA10016A47D /* TestSets.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestSets.java; sourceTree = "<group>"; };
-		1A6B1D3C134E8DA10016A47D /* TestSymbolDefinitions.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestSymbolDefinitions.java; sourceTree = "<group>"; };
-		1A6B1D3D134E8DA10016A47D /* TestSyntacticPredicateEvaluation.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestSyntacticPredicateEvaluation.java; sourceTree = "<group>"; };
-		1A6B1D3E134E8DA10016A47D /* TestSyntaxErrors.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestSyntaxErrors.java; sourceTree = "<group>"; };
-		1A6B1D3F134E8DA10016A47D /* TestTemplates.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestTemplates.java; sourceTree = "<group>"; };
-		1A6B1D40134E8DA10016A47D /* TestTokenRewriteStream.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestTokenRewriteStream.java; sourceTree = "<group>"; };
-		1A6B1D41134E8DA10016A47D /* TestTopologicalSort.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestTopologicalSort.java; sourceTree = "<group>"; };
-		1A6B1D42134E8DA10016A47D /* TestTreeGrammarRewriteAST.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestTreeGrammarRewriteAST.java; sourceTree = "<group>"; };
-		1A6B1D43134E8DA10016A47D /* TestTreeIterator.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestTreeIterator.java; sourceTree = "<group>"; };
-		1A6B1D44134E8DA10016A47D /* TestTreeNodeStream.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestTreeNodeStream.java; sourceTree = "<group>"; };
-		1A6B1D45134E8DA10016A47D /* TestTreeParsing.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestTreeParsing.java; sourceTree = "<group>"; };
-		1A6B1D46134E8DA10016A47D /* TestTrees.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestTrees.java; sourceTree = "<group>"; };
-		1A6B1D47134E8DA10016A47D /* TestTreeWizard.java */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.java; path = TestTreeWizard.java; sourceTree = "<group>"; };
-		1A6B1D4A134E8DA10016A47D /* ANTLRFastQueueTest.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ANTLRFastQueueTest.h; sourceTree = "<group>"; };
-		1A6B1D4B134E8DA10016A47D /* ANTLRFastQueueTest.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ANTLRFastQueueTest.m; sourceTree = "<group>"; };
-		1A6B1D4C134E8DA10016A47D /* ANTLRIntArrayTest.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ANTLRIntArrayTest.h; sourceTree = "<group>"; };
-		1A6B1D4D134E8DA10016A47D /* ANTLRIntArrayTest.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ANTLRIntArrayTest.m; sourceTree = "<group>"; };
-		1A6B1D4F134E8DA10016A47D /* ANTLRRecognizerTest.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ANTLRRecognizerTest.h; sourceTree = "<group>"; };
-		1A6B1D50134E8DA10016A47D /* ANTLRRecognizerTest.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ANTLRRecognizerTest.m; sourceTree = "<group>"; };
-		1A6B1D52134E8DA10016A47D /* ANTLRBitSetTest.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ANTLRBitSetTest.h; sourceTree = "<group>"; };
-		1A6B1D53134E8DA10016A47D /* ANTLRBitSetTest.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ANTLRBitSetTest.m; sourceTree = "<group>"; };
-		1A6B1D55134E8DA10016A47D /* ANTLRStringStreamTest.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ANTLRStringStreamTest.h; sourceTree = "<group>"; };
-		1A6B1D56134E8DA10016A47D /* ANTLRStringStreamTest.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ANTLRStringStreamTest.m; sourceTree = "<group>"; };
-		1A6B1D58134E8DA10016A47D /* TestRewriteRuleTokenStream.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TestRewriteRuleTokenStream.h; sourceTree = "<group>"; };
-		1A6B1D59134E8DA10016A47D /* TestRewriteRuleTokenStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = TestRewriteRuleTokenStream.m; sourceTree = "<group>"; };
-		1A6B1D5B134E8DA10016A47D /* ANTLRCommonTokenTest.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ANTLRCommonTokenTest.h; sourceTree = "<group>"; };
-		1A6B1D5C134E8DA10016A47D /* ANTLRCommonTokenTest.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ANTLRCommonTokenTest.m; sourceTree = "<group>"; };
-		1A6B1D5E134E8DA10016A47D /* ANTLRCommonErrorNodeTest.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ANTLRCommonErrorNodeTest.h; sourceTree = "<group>"; };
-		1A6B1D5F134E8DA10016A47D /* ANTLRCommonErrorNodeTest.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ANTLRCommonErrorNodeTest.m; sourceTree = "<group>"; };
-		1A6B1D60134E8DA10016A47D /* ANTLRCommonTreeAdaptorTest.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ANTLRCommonTreeAdaptorTest.h; sourceTree = "<group>"; };
-		1A6B1D61134E8DA10016A47D /* ANTLRCommonTreeAdaptorTest.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ANTLRCommonTreeAdaptorTest.m; sourceTree = "<group>"; };
-		1A6B1D62134E8DA10016A47D /* ANTLRCommonTreeTest.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ANTLRCommonTreeTest.h; sourceTree = "<group>"; };
-		1A6B1D63134E8DA10016A47D /* ANTLRCommonTreeTest.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ANTLRCommonTreeTest.m; sourceTree = "<group>"; };
-		1A6B1D78134EA0970016A47D /* SenTestingKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SenTestingKit.framework; path = Library/Frameworks/SenTestingKit.framework; sourceTree = DEVELOPER_DIR; };
-		1AAC1C3C134FD6A500B2DC68 /* ANTLR.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ANTLR.h; path = ../ANTLR.h; sourceTree = "<group>"; };
-		1AE72318134E860B001C3F35 /* ANTLR.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = ANTLR.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		1AE7231B134E860B001C3F35 /* Cocoa.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Cocoa.framework; path = System/Library/Frameworks/Cocoa.framework; sourceTree = SDKROOT; };
-		1AE7231E134E860B001C3F35 /* AppKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AppKit.framework; path = System/Library/Frameworks/AppKit.framework; sourceTree = SDKROOT; };
-		1AE7231F134E860B001C3F35 /* CoreData.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreData.framework; path = System/Library/Frameworks/CoreData.framework; sourceTree = SDKROOT; };
-		1AE72323134E860B001C3F35 /* ANTLR-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "ANTLR-Info.plist"; sourceTree = "<group>"; };
-		1AE72325134E860B001C3F35 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
-		1AE72327134E860B001C3F35 /* ANTLR-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "ANTLR-Prefix.pch"; sourceTree = "<group>"; };
-		1AE7232D134E860B001C3F35 /* ANTLRTests.octest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = ANTLRTests.octest; sourceTree = BUILT_PRODUCTS_DIR; };
-		1AE72334134E860B001C3F35 /* ANTLRTests-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "ANTLRTests-Info.plist"; sourceTree = "<group>"; };
-		1AE72336134E860B001C3F35 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
-		1AE72338134E860B001C3F35 /* ANTLRTests-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "ANTLRTests-Prefix.pch"; sourceTree = "<group>"; };
-		1AE72339134E860B001C3F35 /* ANTLRTests.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ANTLRTests.h; sourceTree = "<group>"; };
-		1AE7233B134E860B001C3F35 /* ANTLRTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ANTLRTests.m; sourceTree = "<group>"; };
-		1AE72345134E89BF001C3F35 /* CoreFoundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreFoundation.framework; path = System/Library/Frameworks/CoreFoundation.framework; sourceTree = SDKROOT; };
-		1AE72346134E89BF001C3F35 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
-		1AE72349134E8AB4001C3F35 /* ANTLRBaseMapElement.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRBaseMapElement.m; path = ../ANTLRBaseMapElement.m; sourceTree = SOURCE_ROOT; };
-		1AE7234A134E8AB4001C3F35 /* ANTLRBaseRecognizer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRBaseRecognizer.m; path = ../ANTLRBaseRecognizer.m; sourceTree = SOURCE_ROOT; };
-		1AE7234B134E8AB4001C3F35 /* ANTLRBaseStack.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRBaseStack.m; path = ../ANTLRBaseStack.m; sourceTree = SOURCE_ROOT; };
-		1AE7234C134E8AB4001C3F35 /* ANTLRBaseTree.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRBaseTree.m; path = ../ANTLRBaseTree.m; sourceTree = SOURCE_ROOT; };
-		1AE7234D134E8AB4001C3F35 /* ANTLRBaseTreeAdaptor.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRBaseTreeAdaptor.m; path = ../ANTLRBaseTreeAdaptor.m; sourceTree = SOURCE_ROOT; };
-		1AE7234E134E8AB4001C3F35 /* ANTLRBitSet.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRBitSet.m; path = ../ANTLRBitSet.m; sourceTree = SOURCE_ROOT; };
-		1AE7234F134E8AB4001C3F35 /* ANTLRBufferedTokenStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRBufferedTokenStream.m; path = ../ANTLRBufferedTokenStream.m; sourceTree = SOURCE_ROOT; };
-		1AE72350134E8AB4001C3F35 /* ANTLRBufferedTreeNodeStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRBufferedTreeNodeStream.m; path = ../ANTLRBufferedTreeNodeStream.m; sourceTree = SOURCE_ROOT; };
-		1AE72351134E8AB4001C3F35 /* ANTLRCharStreamState.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRCharStreamState.m; path = ../ANTLRCharStreamState.m; sourceTree = SOURCE_ROOT; };
-		1AE72352134E8AB4001C3F35 /* ANTLRCommonErrorNode.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRCommonErrorNode.m; path = ../ANTLRCommonErrorNode.m; sourceTree = SOURCE_ROOT; };
-		1AE72353134E8AB4001C3F35 /* ANTLRCommonToken.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRCommonToken.m; path = ../ANTLRCommonToken.m; sourceTree = SOURCE_ROOT; };
-		1AE72354134E8AB4001C3F35 /* ANTLRCommonTokenStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRCommonTokenStream.m; path = ../ANTLRCommonTokenStream.m; sourceTree = SOURCE_ROOT; };
-		1AE72355134E8AB4001C3F35 /* ANTLRCommonTree.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRCommonTree.m; path = ../ANTLRCommonTree.m; sourceTree = SOURCE_ROOT; };
-		1AE72356134E8AB4001C3F35 /* ANTLRCommonTreeAdaptor.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRCommonTreeAdaptor.m; path = ../ANTLRCommonTreeAdaptor.m; sourceTree = SOURCE_ROOT; };
-		1AE72357134E8AB4001C3F35 /* ANTLRCommonTreeNodeStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRCommonTreeNodeStream.m; path = ../ANTLRCommonTreeNodeStream.m; sourceTree = SOURCE_ROOT; };
-		1AE72358134E8AB4001C3F35 /* ANTLRDebugEventProxy.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRDebugEventProxy.m; path = ../ANTLRDebugEventProxy.m; sourceTree = SOURCE_ROOT; };
-		1AE72359134E8AB4001C3F35 /* ANTLRDebugParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRDebugParser.m; path = ../ANTLRDebugParser.m; sourceTree = SOURCE_ROOT; };
-		1AE7235A134E8AB4001C3F35 /* ANTLRDebugTokenStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRDebugTokenStream.m; path = ../ANTLRDebugTokenStream.m; sourceTree = SOURCE_ROOT; };
-		1AE7235B134E8AB4001C3F35 /* ANTLRDebugTreeAdaptor.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRDebugTreeAdaptor.m; path = ../ANTLRDebugTreeAdaptor.m; sourceTree = SOURCE_ROOT; };
-		1AE7235C134E8AB4001C3F35 /* ANTLRDebugTreeNodeStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRDebugTreeNodeStream.m; path = ../ANTLRDebugTreeNodeStream.m; sourceTree = SOURCE_ROOT; };
-		1AE7235D134E8AB4001C3F35 /* ANTLRDebugTreeParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRDebugTreeParser.m; path = ../ANTLRDebugTreeParser.m; sourceTree = SOURCE_ROOT; };
-		1AE7235E134E8AB4001C3F35 /* ANTLRDFA.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRDFA.m; path = ../ANTLRDFA.m; sourceTree = SOURCE_ROOT; };
-		1AE7235F134E8AB4001C3F35 /* ANTLRDoubleKeyMap.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRDoubleKeyMap.m; path = ../ANTLRDoubleKeyMap.m; sourceTree = SOURCE_ROOT; };
-		1AE72360134E8AB4001C3F35 /* ANTLREarlyExitException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLREarlyExitException.m; path = ../ANTLREarlyExitException.m; sourceTree = SOURCE_ROOT; };
-		1AE72361134E8AB4001C3F35 /* ANTLRFailedPredicateException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRFailedPredicateException.m; path = ../ANTLRFailedPredicateException.m; sourceTree = SOURCE_ROOT; };
-		1AE72362134E8AB4001C3F35 /* ANTLRFastQueue.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRFastQueue.m; path = ../ANTLRFastQueue.m; sourceTree = SOURCE_ROOT; };
-		1AE72363134E8AB4001C3F35 /* ANTLRFileStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRFileStream.m; path = ../ANTLRFileStream.m; sourceTree = SOURCE_ROOT; };
-		1AE72364134E8AB4001C3F35 /* ANTLRHashMap.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRHashMap.m; path = ../ANTLRHashMap.m; sourceTree = SOURCE_ROOT; };
-		1AE72365134E8AB4001C3F35 /* ANTLRHashRule.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRHashRule.m; path = ../ANTLRHashRule.m; sourceTree = SOURCE_ROOT; };
-		1AE72366134E8AB4001C3F35 /* ANTLRInputStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRInputStream.m; path = ../ANTLRInputStream.m; sourceTree = SOURCE_ROOT; };
-		1AE72367134E8AB4001C3F35 /* ANTLRIntArray.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRIntArray.m; path = ../ANTLRIntArray.m; sourceTree = SOURCE_ROOT; };
-		1AE72368134E8AB4001C3F35 /* ANTLRIntStream.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = ANTLRIntStream.h; path = ../ANTLRIntStream.h; sourceTree = SOURCE_ROOT; };
-		1AE72369134E8AB4001C3F35 /* ANTLRLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRLexer.m; path = ../ANTLRLexer.m; sourceTree = SOURCE_ROOT; };
-		1AE7236A134E8AB4001C3F35 /* ANTLRLexerRuleReturnScope.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRLexerRuleReturnScope.m; path = ../ANTLRLexerRuleReturnScope.m; sourceTree = SOURCE_ROOT; };
-		1AE7236B134E8AB4001C3F35 /* ANTLRLexerState.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRLexerState.m; path = ../ANTLRLexerState.m; sourceTree = SOURCE_ROOT; };
-		1AE7236C134E8AB4001C3F35 /* ANTLRLinkBase.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRLinkBase.m; path = ../ANTLRLinkBase.m; sourceTree = SOURCE_ROOT; };
-		1AE7236D134E8AB4001C3F35 /* ANTLRLookaheadStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRLookaheadStream.m; path = ../ANTLRLookaheadStream.m; sourceTree = SOURCE_ROOT; };
-		1AE7236E134E8AB4001C3F35 /* ANTLRMap.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRMap.m; path = ../ANTLRMap.m; sourceTree = SOURCE_ROOT; };
-		1AE7236F134E8AB4001C3F35 /* ANTLRMapElement.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRMapElement.m; path = ../ANTLRMapElement.m; sourceTree = SOURCE_ROOT; };
-		1AE72370134E8AB4001C3F35 /* ANTLRMismatchedNotSetException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRMismatchedNotSetException.m; path = ../ANTLRMismatchedNotSetException.m; sourceTree = SOURCE_ROOT; };
-		1AE72371134E8AB4001C3F35 /* ANTLRMismatchedRangeException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRMismatchedRangeException.m; path = ../ANTLRMismatchedRangeException.m; sourceTree = SOURCE_ROOT; };
-		1AE72372134E8AB4001C3F35 /* ANTLRMismatchedSetException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRMismatchedSetException.m; path = ../ANTLRMismatchedSetException.m; sourceTree = SOURCE_ROOT; };
-		1AE72373134E8AB4001C3F35 /* ANTLRMismatchedTokenException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRMismatchedTokenException.m; path = ../ANTLRMismatchedTokenException.m; sourceTree = SOURCE_ROOT; };
-		1AE72374134E8AB4001C3F35 /* ANTLRMismatchedTreeNodeException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRMismatchedTreeNodeException.m; path = ../ANTLRMismatchedTreeNodeException.m; sourceTree = SOURCE_ROOT; };
-		1AE72375134E8AB4001C3F35 /* ANTLRMissingTokenException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRMissingTokenException.m; path = ../ANTLRMissingTokenException.m; sourceTree = SOURCE_ROOT; };
-		1AE72376134E8AB4001C3F35 /* ANTLRNodeMapElement.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRNodeMapElement.m; path = ../ANTLRNodeMapElement.m; sourceTree = SOURCE_ROOT; };
-		1AE72377134E8AB4001C3F35 /* ANTLRNoViableAltException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRNoViableAltException.m; path = ../ANTLRNoViableAltException.m; sourceTree = SOURCE_ROOT; };
-		1AE72378134E8AB4001C3F35 /* ANTLRParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRParser.m; path = ../ANTLRParser.m; sourceTree = SOURCE_ROOT; };
-		1AE72379134E8AB4001C3F35 /* ANTLRParserRuleReturnScope.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRParserRuleReturnScope.m; path = ../ANTLRParserRuleReturnScope.m; sourceTree = SOURCE_ROOT; };
-		1AE7237A134E8AB4001C3F35 /* ANTLRParseTree.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRParseTree.m; path = ../ANTLRParseTree.m; sourceTree = SOURCE_ROOT; };
-		1AE7237B134E8AB4001C3F35 /* ANTLRPtrBuffer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRPtrBuffer.m; path = ../ANTLRPtrBuffer.m; sourceTree = SOURCE_ROOT; };
-		1AE7237C134E8AB4001C3F35 /* ANTLRPtrStack.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRPtrStack.m; path = ../ANTLRPtrStack.m; sourceTree = SOURCE_ROOT; };
-		1AE7237D134E8AB4001C3F35 /* ANTLRReaderStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRReaderStream.m; path = ../ANTLRReaderStream.m; sourceTree = SOURCE_ROOT; };
-		1AE7237E134E8AB4001C3F35 /* ANTLRRecognitionException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRecognitionException.m; path = ../ANTLRRecognitionException.m; sourceTree = SOURCE_ROOT; };
-		1AE7237F134E8AB4001C3F35 /* ANTLRRecognizerSharedState.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRecognizerSharedState.m; path = ../ANTLRRecognizerSharedState.m; sourceTree = SOURCE_ROOT; };
-		1AE72380134E8AB4001C3F35 /* ANTLRRewriteRuleElementStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRewriteRuleElementStream.m; path = ../ANTLRRewriteRuleElementStream.m; sourceTree = SOURCE_ROOT; };
-		1AE72381134E8AB4001C3F35 /* ANTLRRewriteRuleNodeStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRewriteRuleNodeStream.m; path = ../ANTLRRewriteRuleNodeStream.m; sourceTree = SOURCE_ROOT; };
-		1AE72382134E8AB4001C3F35 /* ANTLRRewriteRuleSubtreeStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRewriteRuleSubtreeStream.m; path = ../ANTLRRewriteRuleSubtreeStream.m; sourceTree = SOURCE_ROOT; };
-		1AE72383134E8AB4001C3F35 /* ANTLRRewriteRuleTokenStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRewriteRuleTokenStream.m; path = ../ANTLRRewriteRuleTokenStream.m; sourceTree = SOURCE_ROOT; };
-		1AE72384134E8AB4001C3F35 /* ANTLRRuleMapElement.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRuleMapElement.m; path = ../ANTLRRuleMapElement.m; sourceTree = SOURCE_ROOT; };
-		1AE72385134E8AB4001C3F35 /* ANTLRRuleMemo.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRuleMemo.m; path = ../ANTLRRuleMemo.m; sourceTree = SOURCE_ROOT; };
-		1AE72386134E8AB4001C3F35 /* ANTLRRuleReturnScope.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRuleReturnScope.m; path = ../ANTLRRuleReturnScope.m; sourceTree = SOURCE_ROOT; };
-		1AE72387134E8AB4001C3F35 /* ANTLRRuleStack.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRuleStack.m; path = ../ANTLRRuleStack.m; sourceTree = SOURCE_ROOT; };
-		1AE72388134E8AB4001C3F35 /* ANTLRRuntimeException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRRuntimeException.m; path = ../ANTLRRuntimeException.m; sourceTree = SOURCE_ROOT; };
-		1AE72389134E8AB4001C3F35 /* ANTLRStreamEnumerator.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRStreamEnumerator.m; path = ../ANTLRStreamEnumerator.m; sourceTree = SOURCE_ROOT; };
-		1AE7238A134E8AB4001C3F35 /* ANTLRStringStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRStringStream.m; path = ../ANTLRStringStream.m; sourceTree = SOURCE_ROOT; };
-		1AE7238B134E8AB4001C3F35 /* ANTLRSymbolStack.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRSymbolStack.m; path = ../ANTLRSymbolStack.m; sourceTree = SOURCE_ROOT; };
-		1AE7238C134E8AB4001C3F35 /* ANTLRToken+DebuggerSupport.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = "ANTLRToken+DebuggerSupport.m"; path = "../ANTLRToken+DebuggerSupport.m"; sourceTree = SOURCE_ROOT; };
-		1AE7238D134E8AB4001C3F35 /* ANTLRTokenRewriteStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTokenRewriteStream.m; path = ../ANTLRTokenRewriteStream.m; sourceTree = SOURCE_ROOT; };
-		1AE7238F134E8AB4001C3F35 /* ANTLRTreeAdaptor.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreeAdaptor.m; path = ../ANTLRTreeAdaptor.m; sourceTree = SOURCE_ROOT; };
-		1AE72390134E8AB4001C3F35 /* ANTLRTreeException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreeException.m; path = ../ANTLRTreeException.m; sourceTree = SOURCE_ROOT; };
-		1AE72391134E8AB4001C3F35 /* ANTLRTreeIterator.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreeIterator.m; path = ../ANTLRTreeIterator.m; sourceTree = SOURCE_ROOT; };
-		1AE72392134E8AB4001C3F35 /* ANTLRTreeParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreeParser.m; path = ../ANTLRTreeParser.m; sourceTree = SOURCE_ROOT; };
-		1AE72393134E8AB4001C3F35 /* ANTLRTreePatternLexer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreePatternLexer.m; path = ../ANTLRTreePatternLexer.m; sourceTree = SOURCE_ROOT; };
-		1AE72394134E8AB4001C3F35 /* ANTLRTreePatternParser.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreePatternParser.m; path = ../ANTLRTreePatternParser.m; sourceTree = SOURCE_ROOT; };
-		1AE72395134E8AB4001C3F35 /* ANTLRTreeRewriter.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreeRewriter.m; path = ../ANTLRTreeRewriter.m; sourceTree = SOURCE_ROOT; };
-		1AE72396134E8AB4001C3F35 /* ANTLRTreeRuleReturnScope.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreeRuleReturnScope.m; path = ../ANTLRTreeRuleReturnScope.m; sourceTree = SOURCE_ROOT; };
-		1AE72397134E8AB4001C3F35 /* ANTLRTreeVisitor.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreeVisitor.m; path = ../ANTLRTreeVisitor.m; sourceTree = SOURCE_ROOT; };
-		1AE72398134E8AB4001C3F35 /* ANTLRTreeVisitorAction.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreeVisitorAction.m; path = ../ANTLRTreeVisitorAction.m; sourceTree = SOURCE_ROOT; };
-		1AE72399134E8AB4001C3F35 /* ANTLRTreeWizard.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRTreeWizard.m; path = ../ANTLRTreeWizard.m; sourceTree = SOURCE_ROOT; };
-		1AE7239A134E8AB4001C3F35 /* ANTLRUnbufferedCommonTreeNodeStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRUnbufferedCommonTreeNodeStream.m; path = ../ANTLRUnbufferedCommonTreeNodeStream.m; sourceTree = SOURCE_ROOT; };
-		1AE7239B134E8AB4001C3F35 /* ANTLRUnbufferedCommonTreeNodeStreamState.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRUnbufferedCommonTreeNodeStreamState.m; path = ../ANTLRUnbufferedCommonTreeNodeStreamState.m; sourceTree = SOURCE_ROOT; };
-		1AE7239C134E8AB4001C3F35 /* ANTLRUnbufferedTokenStream.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRUnbufferedTokenStream.m; path = ../ANTLRUnbufferedTokenStream.m; sourceTree = SOURCE_ROOT; };
-		1AE7239D134E8AB4001C3F35 /* ANTLRUniqueIDMap.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRUniqueIDMap.m; path = ../ANTLRUniqueIDMap.m; sourceTree = SOURCE_ROOT; };
-		1AE7239E134E8AB4001C3F35 /* ANTLRUnwantedTokenException.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = ANTLRUnwantedTokenException.m; path = ../ANTLRUnwantedTokenException.m; sourceTree = SOURCE_ROOT; };
-/* End PBXFileReference section */
-
-/* Begin PBXFrameworksBuildPhase section */
-		1A63BC5E134F5DAB002EDFB4 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BC70134F5E43002EDFB4 /* ANTLR.framework in Frameworks */,
-				1A63BDF1134FAB4B002EDFB4 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD2F134F5F1E002EDFB4 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BDEF134F93A5002EDFB4 /* ANTLR.framework in Frameworks */,
-				1A63BDF0134F93AC002EDFB4 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD3C134F5F36002EDFB4 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BDF2134FAB60002EDFB4 /* ANTLR.framework in Frameworks */,
-				1A63BDF3134FAB63002EDFB4 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD49134F5F43002EDFB4 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1AB7FE18134FC0800059474B /* ANTLR.framework in Frameworks */,
-				1A63BDAF134F614D002EDFB4 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD56134F5F4D002EDFB4 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BE0C134FB855002EDFB4 /* ANTLR.framework in Frameworks */,
-				1A63BDB4134F6154002EDFB4 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD63134F5F5E002EDFB4 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1AB7FE17134FBFB20059474B /* ANTLR.framework in Frameworks */,
-				1A63BDB9134F615A002EDFB4 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD70134F5F67002EDFB4 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1AB7FE15134FBF900059474B /* ANTLR.framework in Frameworks */,
-				1A63BDBE134F6160002EDFB4 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD7D134F5F71002EDFB4 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1AB7FE16134FBF9F0059474B /* ANTLR.framework in Frameworks */,
-				1A63BDC3134F6167002EDFB4 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BDD1134F6233002EDFB4 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BDF4134FAF58002EDFB4 /* ANTLR.framework in Frameworks */,
-				1A63BDE1134F626A002EDFB4 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BDF9134FB75E002EDFB4 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BE08134FB814002EDFB4 /* ANTLR.framework in Frameworks */,
-				1A63BE09134FB818002EDFB4 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1AE72314134E860B001C3F35 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1AE7231C134E860B001C3F35 /* Cocoa.framework in Frameworks */,
-				1AE72347134E89BF001C3F35 /* CoreFoundation.framework in Frameworks */,
-				1AE72348134E89BF001C3F35 /* Foundation.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1AE72329134E860B001C3F35 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A6B1D79134EA0970016A47D /* SenTestingKit.framework in Frameworks */,
-				1AE72331134E860B001C3F35 /* ANTLR.framework in Frameworks */,
-				1AE7232E134E860B001C3F35 /* Cocoa.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXFrameworksBuildPhase section */
-
-/* Begin PBXGroup section */
-		1A048CFF134E8B9100005F57 /* Classes */ = {
-			isa = PBXGroup;
-			children = (
-				1AAC1C3C134FD6A500B2DC68 /* ANTLR.h */,
-				1A048D01134E8C1000005F57 /* antlr3.h */,
-				1A048D02134E8C1000005F57 /* ANTLRBaseMapElement.h */,
-				1A048D03134E8C1000005F57 /* ANTLRBaseRecognizer.h */,
-				1A048D04134E8C1000005F57 /* ANTLRBaseStack.h */,
-				1A048D05134E8C1000005F57 /* ANTLRBaseTree.h */,
-				1A048D06134E8C1000005F57 /* ANTLRBaseTreeAdaptor.h */,
-				1A048D07134E8C1000005F57 /* ANTLRBitSet.h */,
-				1A048D08134E8C1000005F57 /* ANTLRBufferedTokenStream.h */,
-				1A048D09134E8C1000005F57 /* ANTLRBufferedTreeNodeStream.h */,
-				1A048D0A134E8C1000005F57 /* ANTLRCharStream.h */,
-				1A048D0B134E8C1000005F57 /* ANTLRCharStreamState.h */,
-				1A048D0C134E8C1000005F57 /* ANTLRCommonErrorNode.h */,
-				1A048D0D134E8C1000005F57 /* ANTLRCommonToken.h */,
-				1A048D0E134E8C1000005F57 /* ANTLRCommonTokenStream.h */,
-				1A048D0F134E8C1000005F57 /* ANTLRCommonTree.h */,
-				1A048D10134E8C1000005F57 /* ANTLRCommonTreeAdaptor.h */,
-				1A048D11134E8C1000005F57 /* ANTLRCommonTreeNodeStream.h */,
-				1A048D12134E8C1100005F57 /* ANTLRCommonTreeTest-Info.plist */,
-				1A048D13134E8C1100005F57 /* ANTLRDebug.h */,
-				1A048D14134E8C1100005F57 /* ANTLRDebugEventListener.h */,
-				1A048D15134E8C1100005F57 /* ANTLRDebugEventProxy.h */,
-				1A048D16134E8C1100005F57 /* ANTLRDebugParser.h */,
-				1A048D17134E8C1100005F57 /* ANTLRDebugTokenStream.h */,
-				1A048D18134E8C1100005F57 /* ANTLRDebugTreeAdaptor.h */,
-				1A048D19134E8C1100005F57 /* ANTLRDebugTreeNodeStream.h */,
-				1A048D1A134E8C1100005F57 /* ANTLRDebugTreeParser.h */,
-				1A048D1B134E8C1100005F57 /* ANTLRDFA.h */,
-				1A048D1C134E8C1100005F57 /* ANTLRDoubleKeyMap.h */,
-				1A048D1D134E8C1100005F57 /* ANTLREarlyExitException.h */,
-				1A048D1E134E8C1100005F57 /* ANTLRError.h */,
-				1A048D1F134E8C1100005F57 /* ANTLRFailedPredicateException.h */,
-				1A048D20134E8C1100005F57 /* ANTLRFastQueue.h */,
-				1A6B1C97134E8CF70016A47D /* ANTLRFileStream.h */,
-				1A6B1C98134E8CF70016A47D /* ANTLRHashMap.h */,
-				1A6B1C99134E8CF70016A47D /* ANTLRHashRule.h */,
-				1A6B1C9A134E8CF70016A47D /* ANTLRInputStream.h */,
-				1A6B1C9B134E8CF70016A47D /* ANTLRIntArray.h */,
-				1AE72368134E8AB4001C3F35 /* ANTLRIntStream.h */,
-				1A6B1C9C134E8CF70016A47D /* ANTLRLexer.h */,
-				1A6B1C9D134E8CF70016A47D /* ANTLRLexerRuleReturnScope.h */,
-				1A6B1C9E134E8CF70016A47D /* ANTLRLexerState.h */,
-				1A6B1C9F134E8CF70016A47D /* ANTLRLinkBase.h */,
-				1A6B1CA0134E8CF70016A47D /* ANTLRLookaheadStream.h */,
-				1A6B1CA1134E8CF70016A47D /* ANTLRMap.h */,
-				1A6B1CA2134E8CF70016A47D /* ANTLRMapElement.h */,
-				1A6B1CA3134E8CF70016A47D /* ANTLRMismatchedNotSetException.h */,
-				1A6B1CA4134E8CF70016A47D /* ANTLRMismatchedRangeException.h */,
-				1A6B1CA5134E8CF70016A47D /* ANTLRMismatchedSetException.h */,
-				1A6B1CA6134E8CF70016A47D /* ANTLRMismatchedTokenException.h */,
-				1A6B1CA7134E8CF70016A47D /* ANTLRMismatchedTreeNodeException.h */,
-				1A6B1CA8134E8CF70016A47D /* ANTLRMissingTokenException.h */,
-				1A6B1CA9134E8CF70016A47D /* ANTLRNodeMapElement.h */,
-				1A6B1CAA134E8CF70016A47D /* ANTLRNoViableAltException.h */,
-				1A6B1CAB134E8CF70016A47D /* ANTLRParser.h */,
-				1A6B1CAC134E8CF70016A47D /* ANTLRParserRuleReturnScope.h */,
-				1A6B1CAD134E8CF70016A47D /* ANTLRParseTree.h */,
-				1A6B1CAE134E8CF70016A47D /* ANTLRPtrBuffer.h */,
-				1A6B1CAF134E8CF70016A47D /* ANTLRPtrStack.h */,
-				1A6B1CB0134E8CF70016A47D /* ANTLRReaderStream.h */,
-				1A6B1CB1134E8CF70016A47D /* ANTLRRecognitionException.h */,
-				1A6B1CB2134E8CF70016A47D /* ANTLRRecognizerSharedState.h */,
-				1A6B1CB3134E8CF70016A47D /* ANTLRRewriteRuleElementStream.h */,
-				1A6B1CB4134E8CF70016A47D /* ANTLRRewriteRuleNodeStream.h */,
-				1A6B1CB5134E8CF70016A47D /* ANTLRRewriteRuleSubtreeStream.h */,
-				1A6B1CB6134E8CF70016A47D /* ANTLRRewriteRuleTokenStream.h */,
-				1A6B1CB7134E8CF70016A47D /* ANTLRRuleMapElement.h */,
-				1A6B1CB8134E8CF70016A47D /* ANTLRRuleMemo.h */,
-				1A6B1CB9134E8CF70016A47D /* ANTLRRuleReturnScope.h */,
-				1A6B1CBA134E8CF70016A47D /* ANTLRRuleStack.h */,
-				1A6B1CBB134E8CF70016A47D /* ANTLRRuntimeException.h */,
-				1A6B1CBC134E8CF70016A47D /* ANTLRStreamEnumerator.h */,
-				1A6B1CBD134E8CF70016A47D /* ANTLRStringStream.h */,
-				1A6B1CBE134E8CF70016A47D /* ANTLRStringStreamState.h */,
-				1A6B1CBF134E8CF70016A47D /* ANTLRSymbolStack.h */,
-				1A6B1CC0134E8CF70016A47D /* ANTLRToken.h */,
-				1A6B1CC1134E8CF70016A47D /* ANTLRToken+DebuggerSupport.h */,
-				1A6B1CC2134E8CF70016A47D /* ANTLRTokenRewriteStream.h */,
-				1A6B1CC3134E8CF70016A47D /* ANTLRTokenSource.h */,
-				1A6B1CC4134E8CF70016A47D /* ANTLRTokenStream.h */,
-				1A6B1CC5134E8CF70016A47D /* ANTLRTree.h */,
-				1A6B1CC6134E8CF70016A47D /* ANTLRTreeAdaptor.h */,
-				1A6B1CC7134E8CF70016A47D /* ANTLRTreeException.h */,
-				1A6B1CC8134E8CF70016A47D /* ANTLRTreeIterator.h */,
-				1A6B1CC9134E8CF70016A47D /* ANTLRTreeNodeStream.h */,
-				1A6B1CCA134E8CF70016A47D /* ANTLRTreeParser.h */,
-				1A6B1CCB134E8CF70016A47D /* ANTLRTreePatternLexer.h */,
-				1A6B1CCC134E8CF70016A47D /* ANTLRTreePatternParser.h */,
-				1A6B1CCD134E8CF70016A47D /* ANTLRTreeRewriter.h */,
-				1A6B1CCE134E8CF70016A47D /* ANTLRTreeRuleReturnScope.h */,
-				1A6B1CCF134E8CF70016A47D /* ANTLRTreeVisitor.h */,
-				1A6B1CD0134E8CF70016A47D /* ANTLRTreeVisitorAction.h */,
-				1A6B1CD1134E8CF70016A47D /* ANTLRTreeWizard.h */,
-				1A6B1CD2134E8CF70016A47D /* ANTLRUnbufferedCommonTreeNodeStream.h */,
-				1A6B1CD3134E8CF70016A47D /* ANTLRUnbufferedCommonTreeNodeStreamState.h */,
-				1A6B1CD4134E8CF70016A47D /* ANTLRUnbufferedTokenStream.h */,
-				1A6B1CD5134E8CF70016A47D /* ANTLRUniqueIDMap.h */,
-				1A6B1CD6134E8CF70016A47D /* ANTLRUnwantedTokenException.h */,
-				1AE72349134E8AB4001C3F35 /* ANTLRBaseMapElement.m */,
-				1AE7234A134E8AB4001C3F35 /* ANTLRBaseRecognizer.m */,
-				1AE7234B134E8AB4001C3F35 /* ANTLRBaseStack.m */,
-				1AE7234C134E8AB4001C3F35 /* ANTLRBaseTree.m */,
-				1AE7234D134E8AB4001C3F35 /* ANTLRBaseTreeAdaptor.m */,
-				1AE7234E134E8AB4001C3F35 /* ANTLRBitSet.m */,
-				1AE7234F134E8AB4001C3F35 /* ANTLRBufferedTokenStream.m */,
-				1AE72350134E8AB4001C3F35 /* ANTLRBufferedTreeNodeStream.m */,
-				1AE72351134E8AB4001C3F35 /* ANTLRCharStreamState.m */,
-				1AE72352134E8AB4001C3F35 /* ANTLRCommonErrorNode.m */,
-				1AE72353134E8AB4001C3F35 /* ANTLRCommonToken.m */,
-				1AE72354134E8AB4001C3F35 /* ANTLRCommonTokenStream.m */,
-				1AE72355134E8AB4001C3F35 /* ANTLRCommonTree.m */,
-				1AE72356134E8AB4001C3F35 /* ANTLRCommonTreeAdaptor.m */,
-				1AE72357134E8AB4001C3F35 /* ANTLRCommonTreeNodeStream.m */,
-				1AE72358134E8AB4001C3F35 /* ANTLRDebugEventProxy.m */,
-				1AE72359134E8AB4001C3F35 /* ANTLRDebugParser.m */,
-				1AE7235A134E8AB4001C3F35 /* ANTLRDebugTokenStream.m */,
-				1AE7235B134E8AB4001C3F35 /* ANTLRDebugTreeAdaptor.m */,
-				1AE7235C134E8AB4001C3F35 /* ANTLRDebugTreeNodeStream.m */,
-				1AE7235D134E8AB4001C3F35 /* ANTLRDebugTreeParser.m */,
-				1AE7235E134E8AB4001C3F35 /* ANTLRDFA.m */,
-				1AE7235F134E8AB4001C3F35 /* ANTLRDoubleKeyMap.m */,
-				1AE72360134E8AB4001C3F35 /* ANTLREarlyExitException.m */,
-				1AE72361134E8AB4001C3F35 /* ANTLRFailedPredicateException.m */,
-				1AE72362134E8AB4001C3F35 /* ANTLRFastQueue.m */,
-				1AE72363134E8AB4001C3F35 /* ANTLRFileStream.m */,
-				1AE72364134E8AB4001C3F35 /* ANTLRHashMap.m */,
-				1AE72365134E8AB4001C3F35 /* ANTLRHashRule.m */,
-				1AE72366134E8AB4001C3F35 /* ANTLRInputStream.m */,
-				1AE72367134E8AB4001C3F35 /* ANTLRIntArray.m */,
-				1AE72369134E8AB4001C3F35 /* ANTLRLexer.m */,
-				1AE7236A134E8AB4001C3F35 /* ANTLRLexerRuleReturnScope.m */,
-				1AE7236B134E8AB4001C3F35 /* ANTLRLexerState.m */,
-				1AE7236C134E8AB4001C3F35 /* ANTLRLinkBase.m */,
-				1AE7236D134E8AB4001C3F35 /* ANTLRLookaheadStream.m */,
-				1AE7236E134E8AB4001C3F35 /* ANTLRMap.m */,
-				1AE7236F134E8AB4001C3F35 /* ANTLRMapElement.m */,
-				1AE72370134E8AB4001C3F35 /* ANTLRMismatchedNotSetException.m */,
-				1AE72371134E8AB4001C3F35 /* ANTLRMismatchedRangeException.m */,
-				1AE72372134E8AB4001C3F35 /* ANTLRMismatchedSetException.m */,
-				1AE72373134E8AB4001C3F35 /* ANTLRMismatchedTokenException.m */,
-				1AE72374134E8AB4001C3F35 /* ANTLRMismatchedTreeNodeException.m */,
-				1AE72375134E8AB4001C3F35 /* ANTLRMissingTokenException.m */,
-				1AE72376134E8AB4001C3F35 /* ANTLRNodeMapElement.m */,
-				1AE72377134E8AB4001C3F35 /* ANTLRNoViableAltException.m */,
-				1AE72378134E8AB4001C3F35 /* ANTLRParser.m */,
-				1AE72379134E8AB4001C3F35 /* ANTLRParserRuleReturnScope.m */,
-				1AE7237A134E8AB4001C3F35 /* ANTLRParseTree.m */,
-				1AE7237B134E8AB4001C3F35 /* ANTLRPtrBuffer.m */,
-				1AE7237C134E8AB4001C3F35 /* ANTLRPtrStack.m */,
-				1AE7237D134E8AB4001C3F35 /* ANTLRReaderStream.m */,
-				1AE7237E134E8AB4001C3F35 /* ANTLRRecognitionException.m */,
-				1AE7237F134E8AB4001C3F35 /* ANTLRRecognizerSharedState.m */,
-				1AE72380134E8AB4001C3F35 /* ANTLRRewriteRuleElementStream.m */,
-				1AE72381134E8AB4001C3F35 /* ANTLRRewriteRuleNodeStream.m */,
-				1AE72382134E8AB4001C3F35 /* ANTLRRewriteRuleSubtreeStream.m */,
-				1AE72383134E8AB4001C3F35 /* ANTLRRewriteRuleTokenStream.m */,
-				1AE72384134E8AB4001C3F35 /* ANTLRRuleMapElement.m */,
-				1AE72385134E8AB4001C3F35 /* ANTLRRuleMemo.m */,
-				1AE72386134E8AB4001C3F35 /* ANTLRRuleReturnScope.m */,
-				1AE72387134E8AB4001C3F35 /* ANTLRRuleStack.m */,
-				1AE72388134E8AB4001C3F35 /* ANTLRRuntimeException.m */,
-				1AE72389134E8AB4001C3F35 /* ANTLRStreamEnumerator.m */,
-				1AE7238A134E8AB4001C3F35 /* ANTLRStringStream.m */,
-				1AE7238B134E8AB4001C3F35 /* ANTLRSymbolStack.m */,
-				1AE7238C134E8AB4001C3F35 /* ANTLRToken+DebuggerSupport.m */,
-				1AE7238D134E8AB4001C3F35 /* ANTLRTokenRewriteStream.m */,
-				1AE7238F134E8AB4001C3F35 /* ANTLRTreeAdaptor.m */,
-				1AE72390134E8AB4001C3F35 /* ANTLRTreeException.m */,
-				1AE72391134E8AB4001C3F35 /* ANTLRTreeIterator.m */,
-				1AE72392134E8AB4001C3F35 /* ANTLRTreeParser.m */,
-				1AE72393134E8AB4001C3F35 /* ANTLRTreePatternLexer.m */,
-				1AE72394134E8AB4001C3F35 /* ANTLRTreePatternParser.m */,
-				1AE72395134E8AB4001C3F35 /* ANTLRTreeRewriter.m */,
-				1AE72396134E8AB4001C3F35 /* ANTLRTreeRuleReturnScope.m */,
-				1AE72397134E8AB4001C3F35 /* ANTLRTreeVisitor.m */,
-				1AE72398134E8AB4001C3F35 /* ANTLRTreeVisitorAction.m */,
-				1AE72399134E8AB4001C3F35 /* ANTLRTreeWizard.m */,
-				1AE7239A134E8AB4001C3F35 /* ANTLRUnbufferedCommonTreeNodeStream.m */,
-				1AE7239B134E8AB4001C3F35 /* ANTLRUnbufferedCommonTreeNodeStreamState.m */,
-				1AE7239C134E8AB4001C3F35 /* ANTLRUnbufferedTokenStream.m */,
-				1AE7239D134E8AB4001C3F35 /* ANTLRUniqueIDMap.m */,
-				1AE7239E134E8AB4001C3F35 /* ANTLRUnwantedTokenException.m */,
-			);
-			name = Classes;
-			sourceTree = "<group>";
-		};
-		1A63BC77134F5EB1002EDFB4 /* examples */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BC78134F5EB1002EDFB4 /* combined */,
-				1A63BC84134F5EB1002EDFB4 /* fuzzy */,
-				1A63BC91134F5EB2002EDFB4 /* hoistedPredicates */,
-				1A63BC9C134F5EB2002EDFB4 /* lexertest-simple */,
-				1A63BCAD134F5EB2002EDFB4 /* LL-star */,
-				1A63BCB9134F5EB2002EDFB4 /* polydiff */,
-				1A63BCD8134F5EB2002EDFB4 /* scopes */,
-				1A63BCEA134F5EB2002EDFB4 /* simplecTreeParser */,
-				1A63BD0D134F5EB2002EDFB4 /* treeparser */,
-				1A63BD1F134F5EB2002EDFB4 /* treerewrite */,
-			);
-			name = examples;
-			path = ../examples;
-			sourceTree = "<group>";
-		};
-		1A63BC78134F5EB1002EDFB4 /* combined */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BC79134F5EB1002EDFB4 /* antlr3.h */,
-				1A63BC7A134F5EB1002EDFB4 /* Combined.g */,
-				1A63BC7B134F5EB1002EDFB4 /* Combined.tokens */,
-				1A63BC7C134F5EB1002EDFB4 /* Combined__.gl */,
-				1A63BC7D134F5EB1002EDFB4 /* CombinedLexer.h */,
-				1A63BC7E134F5EB1002EDFB4 /* CombinedLexer.m */,
-				1A63BC7F134F5EB1002EDFB4 /* CombinedParser.h */,
-				1A63BC80134F5EB1002EDFB4 /* CombinedParser.m */,
-				1A63BC81134F5EB1002EDFB4 /* main.m */,
-				1A63BC82134F5EB1002EDFB4 /* output1 */,
-			);
-			path = combined;
-			sourceTree = "<group>";
-		};
-		1A63BC82134F5EB1002EDFB4 /* output1 */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BC83134F5EB1002EDFB4 /* Combined.tokens */,
-			);
-			path = output1;
-			sourceTree = "<group>";
-		};
-		1A63BC84134F5EB1002EDFB4 /* fuzzy */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BC85134F5EB1002EDFB4 /* antlr3.h */,
-				1A63BC86134F5EB1002EDFB4 /* Fuzzy.g */,
-				1A63BC88134F5EB2002EDFB4 /* Fuzzy.tokens */,
-				1A63BC89134F5EB2002EDFB4 /* FuzzyLexer.h */,
-				1A63BC6B134F5DE4002EDFB4 /* FuzzyLexer.m */,
-				1A63BC8B134F5EB2002EDFB4 /* input */,
-				1A63BC6C134F5DE5002EDFB4 /* main.m */,
-				1A63BC8D134F5EB2002EDFB4 /* output1 */,
-			);
-			path = fuzzy;
-			sourceTree = "<group>";
-		};
-		1A63BC8D134F5EB2002EDFB4 /* output1 */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BC8E134F5EB2002EDFB4 /* Fuzzy.m */,
-				1A63BC8F134F5EB2002EDFB4 /* Fuzzy.tokens */,
-				1A63BC90134F5EB2002EDFB4 /* FuzzyLexer.h */,
-			);
-			path = output1;
-			sourceTree = "<group>";
-		};
-		1A63BC91134F5EB2002EDFB4 /* hoistedPredicates */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BC92134F5EB2002EDFB4 /* antlr3.h */,
-				1A63BC93134F5EB2002EDFB4 /* input */,
-				1A63BC94134F5EB2002EDFB4 /* main.m */,
-				1A63BC95134F5EB2002EDFB4 /* output */,
-				1A63BC96134F5EB2002EDFB4 /* T.g */,
-				1A63BC97134F5EB2002EDFB4 /* T.tokens */,
-				1A63BC98134F5EB2002EDFB4 /* TLexer.h */,
-				1A63BC99134F5EB2002EDFB4 /* TLexer.m */,
-				1A63BC9A134F5EB2002EDFB4 /* TParser.h */,
-				1A63BC9B134F5EB2002EDFB4 /* TParser.m */,
-			);
-			path = hoistedPredicates;
-			sourceTree = "<group>";
-		};
-		1A63BC9C134F5EB2002EDFB4 /* lexertest-simple */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BC9D134F5EB2002EDFB4 /* antlr3.h */,
-				1A63BC9E134F5EB2002EDFB4 /* main.m */,
-				1A63BC9F134F5EB2002EDFB4 /* output1 */,
-				1A63BCA5134F5EB2002EDFB4 /* Test.tokens */,
-				1A63BCA6134F5EB2002EDFB4 /* TestLexer.g */,
-				1A63BCA7134F5EB2002EDFB4 /* TestLexer.h */,
-				1A63BCA8134F5EB2002EDFB4 /* TestLexer.h.old */,
-				1A63BCA9134F5EB2002EDFB4 /* TestLexer.m */,
-				1A63BCAA134F5EB2002EDFB4 /* TestLexer.m.old */,
-				1A63BCAB134F5EB2002EDFB4 /* TestLexer.tokens */,
-				1A63BCAC134F5EB2002EDFB4 /* TestLexerLexer.h */,
-			);
-			path = "lexertest-simple";
-			sourceTree = "<group>";
-		};
-		1A63BC9F134F5EB2002EDFB4 /* output1 */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BCA0134F5EB2002EDFB4 /* Test.tokens */,
-				1A63BCA1134F5EB2002EDFB4 /* TestLexer.h */,
-				1A63BCA2134F5EB2002EDFB4 /* Testlexer.m */,
-				1A63BCA3134F5EB2002EDFB4 /* TestLexer.tokens */,
-				1A63BCA4134F5EB2002EDFB4 /* TestLexerLexer.h */,
-			);
-			path = output1;
-			sourceTree = "<group>";
-		};
-		1A63BCAD134F5EB2002EDFB4 /* LL-star */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BCAE134F5EB2002EDFB4 /* antlr3.h */,
-				1A63BCAF134F5EB2002EDFB4 /* input */,
-				1A63BCB0134F5EB2002EDFB4 /* main.m */,
-				1A63BCB1134F5EB2002EDFB4 /* output */,
-				1A63BCB2134F5EB2002EDFB4 /* SimpleC.g */,
-				1A63BCB3134F5EB2002EDFB4 /* SimpleC.tokens */,
-				1A63BCB4134F5EB2002EDFB4 /* SimpleC__.gl */,
-				1A63BCB5134F5EB2002EDFB4 /* SimpleCLexer.h */,
-				1A63BCB6134F5EB2002EDFB4 /* SimpleCLexer.m */,
-				1A63BCB7134F5EB2002EDFB4 /* SimpleCParser.h */,
-				1A63BCB8134F5EB2002EDFB4 /* SimpleCParser.m */,
-			);
-			path = "LL-star";
-			sourceTree = "<group>";
-		};
-		1A63BCB9134F5EB2002EDFB4 /* polydiff */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BCBA134F5EB2002EDFB4 /* files */,
-				1A63BCBB134F5EB2002EDFB4 /* input */,
-				1A63BCBC134F5EB2002EDFB4 /* Main.m */,
-				1A63BCBD134F5EB2002EDFB4 /* output */,
-				1A63BCBE134F5EB2002EDFB4 /* output1 */,
-				1A63BCC8134F5EB2002EDFB4 /* Poly.g */,
-				1A63BCC9134F5EB2002EDFB4 /* Poly.tokens */,
-				1A63BCCA134F5EB2002EDFB4 /* PolyDifferentiator.g */,
-				1A63BCCB134F5EB2002EDFB4 /* PolyDifferentiator.m */,
-				1A63BCCC134F5EB2002EDFB4 /* PolyLexer.h */,
-				1A63BCCD134F5EB2002EDFB4 /* PolyLexer.m */,
-				1A63BCCE134F5EB2002EDFB4 /* PolyParser.h */,
-				1A63BCCF134F5EB2002EDFB4 /* PolyParser.m */,
-				1A63BCD0134F5EB2002EDFB4 /* PolyPrinter.g */,
-				1A63BCD1134F5EB2002EDFB4 /* PolyPrinter.h */,
-				1A63BCD2134F5EB2002EDFB4 /* PolyPrinter.m */,
-				1A63BCD3134F5EB2002EDFB4 /* PolyPrinter.tokens */,
-				1A63BCD4134F5EB2002EDFB4 /* Simplifier.g */,
-				1A63BCD5134F5EB2002EDFB4 /* Simplifier.h */,
-				1A63BCD6134F5EB2002EDFB4 /* Simplifier.m */,
-				1A63BCD7134F5EB2002EDFB4 /* Simplifier.tokens */,
-			);
-			path = polydiff;
-			sourceTree = "<group>";
-		};
-		1A63BCBE134F5EB2002EDFB4 /* output1 */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BCBF134F5EB2002EDFB4 /* Poly.tokens */,
-				1A63BCC0134F5EB2002EDFB4 /* PolyDifferentiator.m */,
-				1A63BCC1134F5EB2002EDFB4 /* PolyLexer.h */,
-				1A63BCC2134F5EB2002EDFB4 /* PolyLexer.m */,
-				1A63BCC3134F5EB2002EDFB4 /* PolyParser.h */,
-				1A63BCC4134F5EB2002EDFB4 /* PolyParser.m */,
-				1A63BCC5134F5EB2002EDFB4 /* Simplifier.h */,
-				1A63BCC6134F5EB2002EDFB4 /* Simplifier.m */,
-				1A63BCC7134F5EB2002EDFB4 /* Simplifier.tokens */,
-			);
-			path = output1;
-			sourceTree = "<group>";
-		};
-		1A63BCD8134F5EB2002EDFB4 /* scopes */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BCD9134F5EB2002EDFB4 /* antlr3.h */,
-				1A63BCDA134F5EB2002EDFB4 /* input */,
-				1A63BCDB134F5EB2002EDFB4 /* main.m */,
-				1A63BCDC134F5EB2002EDFB4 /* output */,
-				1A63BCDD134F5EB2002EDFB4 /* output1 */,
-				1A63BCE3134F5EB2002EDFB4 /* SymbolTable.g */,
-				1A63BCE4134F5EB2002EDFB4 /* SymbolTable.tokens */,
-				1A63BCE5134F5EB2002EDFB4 /* SymbolTable__.gl */,
-				1A63BCE6134F5EB2002EDFB4 /* SymbolTableLexer.h */,
-				1A63BCE7134F5EB2002EDFB4 /* SymbolTableLexer.m */,
-				1A63BCE8134F5EB2002EDFB4 /* SymbolTableParser.h */,
-				1A63BCE9134F5EB2002EDFB4 /* SymbolTableParser.m */,
-			);
-			path = scopes;
-			sourceTree = "<group>";
-		};
-		1A63BCDD134F5EB2002EDFB4 /* output1 */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BCDE134F5EB2002EDFB4 /* SymbolTable.tokens */,
-				1A63BCDF134F5EB2002EDFB4 /* SymbolTableLexer.h */,
-				1A63BCE0134F5EB2002EDFB4 /* SymbolTableLexer.m */,
-				1A63BCE1134F5EB2002EDFB4 /* SymbolTableParser.h */,
-				1A63BCE2134F5EB2002EDFB4 /* SymbolTableParser.m */,
-			);
-			path = output1;
-			sourceTree = "<group>";
-		};
-		1A63BCEA134F5EB2002EDFB4 /* simplecTreeParser */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BCEB134F5EB2002EDFB4 /* antlr3.h */,
-				1A63BCEC134F5EB2002EDFB4 /* input */,
-				1A63BCED134F5EB2002EDFB4 /* main.m */,
-				1A63BCEE134F5EB2002EDFB4 /* output */,
-				1A63BCEF134F5EB2002EDFB4 /* output1 */,
-				1A63BCFB134F5EB2002EDFB4 /* SimpleC.g */,
-				1A63BCFC134F5EB2002EDFB4 /* SimpleC.tokens */,
-				1A63BCFD134F5EB2002EDFB4 /* SimpleC__.gl */,
-				1A63BCFE134F5EB2002EDFB4 /* SimpleCLexer.h */,
-				1A63BCFF134F5EB2002EDFB4 /* SimpleCLexer.java */,
-				1A63BD00134F5EB2002EDFB4 /* SimpleCLexer.m */,
-				1A63BD01134F5EB2002EDFB4 /* SimpleCParser.h */,
-				1A63BD02134F5EB2002EDFB4 /* SimpleCParser.java */,
-				1A63BD03134F5EB2002EDFB4 /* SimpleCParser.m */,
-				1A63BD04134F5EB2002EDFB4 /* SimpleCTP.g */,
-				1A63BD05134F5EB2002EDFB4 /* SimpleCTP.h */,
-				1A63BD06134F5EB2002EDFB4 /* SimpleCTP.java */,
-				1A63BD07134F5EB2002EDFB4 /* SimpleCTP.m */,
-				1A63BD08134F5EB2002EDFB4 /* SimpleCTP.tokens */,
-				1A63BD09134F5EB2002EDFB4 /* SimpleCWalker.g */,
-				1A63BD0A134F5EB2002EDFB4 /* SimpleCWalker.h */,
-				1A63BD0B134F5EB2002EDFB4 /* SimpleCWalker.m */,
-				1A63BD0C134F5EB2002EDFB4 /* SimpleCWalker.tokens */,
-			);
-			path = simplecTreeParser;
-			sourceTree = "<group>";
-		};
-		1A63BCEF134F5EB2002EDFB4 /* output1 */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BCF0134F5EB2002EDFB4 /* SimpleC.tokens */,
-				1A63BCF1134F5EB2002EDFB4 /* SimpleCLexer.h */,
-				1A63BCF2134F5EB2002EDFB4 /* SimpleCLexer.java */,
-				1A63BCF3134F5EB2002EDFB4 /* SimpleCLexer.m */,
-				1A63BCF4134F5EB2002EDFB4 /* SimpleCParser.h */,
-				1A63BCF5134F5EB2002EDFB4 /* SimpleCParser.java */,
-				1A63BCF6134F5EB2002EDFB4 /* SimpleCParser.m */,
-				1A63BCF7134F5EB2002EDFB4 /* SimpleCTP.h */,
-				1A63BCF8134F5EB2002EDFB4 /* SimpleCTP.java */,
-				1A63BCF9134F5EB2002EDFB4 /* SimpleCTP.m */,
-				1A63BCFA134F5EB2002EDFB4 /* SimpleCTP.tokens */,
-			);
-			path = output1;
-			sourceTree = "<group>";
-		};
-		1A63BD0D134F5EB2002EDFB4 /* treeparser */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BD0E134F5EB2002EDFB4 /* files */,
-				1A63BD0F134F5EB2002EDFB4 /* input */,
-				1A63BD10134F5EB2002EDFB4 /* Lang.g */,
-				1A63BD11134F5EB2002EDFB4 /* Lang.tokens */,
-				1A63BD12134F5EB2002EDFB4 /* LangDumpDecl.g */,
-				1A63BD13134F5EB2002EDFB4 /* LangDumpDecl.h */,
-				1A63BD14134F5EB2002EDFB4 /* LangDumpDecl.m */,
-				1A63BD15134F5EB2002EDFB4 /* LangDumpDecl.tokens */,
-				1A63BD16134F5EB2002EDFB4 /* LangLexer.h */,
-				1A63BD17134F5EB2002EDFB4 /* LangLexer.m */,
-				1A63BD18134F5EB2002EDFB4 /* LangParser.h */,
-				1A63BD19134F5EB2002EDFB4 /* LangParser.m */,
-				1A63BD1A134F5EB2002EDFB4 /* Main.java */,
-				1A63BD1B134F5EB2002EDFB4 /* main.m */,
-				1A63BD1C134F5EB2002EDFB4 /* output */,
-				1A63BD1D134F5EB2002EDFB4 /* output1 */,
-				1A63BD1E134F5EB2002EDFB4 /* README.txt */,
-			);
-			path = treeparser;
-			sourceTree = "<group>";
-		};
-		1A63BD1D134F5EB2002EDFB4 /* output1 */ = {
-			isa = PBXGroup;
-			children = (
-			);
-			path = output1;
-			sourceTree = "<group>";
-		};
-		1A63BD1F134F5EB2002EDFB4 /* treerewrite */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BD20134F5EB2002EDFB4 /* antlr3.h */,
-				1A63BD21134F5EB2002EDFB4 /* main.m */,
-				1A63BD22134F5EB2002EDFB4 /* output1 */,
-				1A63BD28134F5EB2002EDFB4 /* TreeRewrite.g */,
-				1A63BD29134F5EB2002EDFB4 /* TreeRewrite.tokens */,
-				1A63BD2A134F5EB2002EDFB4 /* TreeRewriteLexer.h */,
-				1A63BD2B134F5EB2002EDFB4 /* TreeRewriteLexer.m */,
-				1A63BD2C134F5EB2002EDFB4 /* TreeRewriteParser.h */,
-				1A63BD2D134F5EB2002EDFB4 /* TreeRewriteParser.m */,
-			);
-			path = treerewrite;
-			sourceTree = "<group>";
-		};
-		1A63BD22134F5EB2002EDFB4 /* output1 */ = {
-			isa = PBXGroup;
-			children = (
-				1A63BD23134F5EB2002EDFB4 /* TreeRewrite.tokens */,
-				1A63BD24134F5EB2002EDFB4 /* TreeRewriteLexer.h */,
-				1A63BD25134F5EB2002EDFB4 /* TreeRewriteLexer.m */,
-				1A63BD26134F5EB2002EDFB4 /* TreeRewriteParser.h */,
-				1A63BD27134F5EB2002EDFB4 /* TreeRewriteParser.m */,
-			);
-			path = output1;
-			sourceTree = "<group>";
-		};
-		1A6B1D1D134E8DA10016A47D /* ANTLRTests */ = {
-			isa = PBXGroup;
-			children = (
-				1A6B1D1E134E8DA10016A47D /* java */,
-				1A6B1D48134E8DA10016A47D /* runtime */,
-			);
-			name = ANTLRTests;
-			path = ../test;
-			sourceTree = "<group>";
-		};
-		1A6B1D1E134E8DA10016A47D /* java */ = {
-			isa = PBXGroup;
-			children = (
-				1A6B1D1F134E8DA10016A47D /* BaseTest.java */,
-				1A6B1D20134E8DA10016A47D /* DebugTestAutoAST.java */,
-				1A6B1D21134E8DA10016A47D /* DebugTestCompositeGrammars.java */,
-				1A6B1D22134E8DA10016A47D /* DebugTestRewriteAST.java */,
-				1A6B1D23134E8DA10016A47D /* ErrorQueue.java */,
-				1A6B1D24134E8DA10016A47D /* TestASTConstruction.java */,
-				1A6B1D25134E8DA10016A47D /* TestAttributes.java */,
-				1A6B1D26134E8DA10016A47D /* TestAutoAST.java */,
-				1A6B1D27134E8DA10016A47D /* TestBufferedTreeNodeStream.java */,
-				1A6B1D28134E8DA10016A47D /* TestCharDFAConversion.java */,
-				1A6B1D29134E8DA10016A47D /* TestCommonTokenStream.java */,
-				1A6B1D2A134E8DA10016A47D /* TestCompositeGrammars.java */,
-				1A6B1D2B134E8DA10016A47D /* TestDFAConversion.java */,
-				1A6B1D2C134E8DA10016A47D /* TestDFAMatching.java */,
-				1A6B1D2D134E8DA10016A47D /* TestFastQueue.java */,
-				1A6B1D2E134E8DA10016A47D /* TestHeteroAST.java */,
-				1A6B1D2F134E8DA10016A47D /* TestInterpretedLexing.java */,
-				1A6B1D30134E8DA10016A47D /* TestInterpretedParsing.java */,
-				1A6B1D31134E8DA10016A47D /* TestIntervalSet.java */,
-				1A6B1D32134E8DA10016A47D /* TestJavaCodeGeneration.java */,
-				1A6B1D33134E8DA10016A47D /* TestLeftRecursion.java */,
-				1A6B1D34134E8DA10016A47D /* TestLexer.java */,
-				1A6B1D35134E8DA10016A47D /* TestMessages.java */,
-				1A6B1D36134E8DA10016A47D /* TestNFAConstruction.java */,
-				1A6B1D37134E8DA10016A47D /* TestRewriteAST.java */,
-				1A6B1D38134E8DA10016A47D /* TestRewriteTemplates.java */,
-				1A6B1D39134E8DA10016A47D /* TestSemanticPredicateEvaluation.java */,
-				1A6B1D3A134E8DA10016A47D /* TestSemanticPredicates.java */,
-				1A6B1D3B134E8DA10016A47D /* TestSets.java */,
-				1A6B1D3C134E8DA10016A47D /* TestSymbolDefinitions.java */,
-				1A6B1D3D134E8DA10016A47D /* TestSyntacticPredicateEvaluation.java */,
-				1A6B1D3E134E8DA10016A47D /* TestSyntaxErrors.java */,
-				1A6B1D3F134E8DA10016A47D /* TestTemplates.java */,
-				1A6B1D40134E8DA10016A47D /* TestTokenRewriteStream.java */,
-				1A6B1D41134E8DA10016A47D /* TestTopologicalSort.java */,
-				1A6B1D42134E8DA10016A47D /* TestTreeGrammarRewriteAST.java */,
-				1A6B1D43134E8DA10016A47D /* TestTreeIterator.java */,
-				1A6B1D44134E8DA10016A47D /* TestTreeNodeStream.java */,
-				1A6B1D45134E8DA10016A47D /* TestTreeParsing.java */,
-				1A6B1D46134E8DA10016A47D /* TestTrees.java */,
-				1A6B1D47134E8DA10016A47D /* TestTreeWizard.java */,
-			);
-			path = java;
-			sourceTree = "<group>";
-		};
-		1A6B1D48134E8DA10016A47D /* runtime */ = {
-			isa = PBXGroup;
-			children = (
-				1A6B1D49134E8DA10016A47D /* misc */,
-				1A6B1D4E134E8DA10016A47D /* recognizer */,
-				1A6B1D51134E8DA10016A47D /* sets */,
-				1A6B1D54134E8DA10016A47D /* stream */,
-				1A6B1D57134E8DA10016A47D /* TestRewriteRuleTokenStream */,
-				1A6B1D5A134E8DA10016A47D /* token */,
-				1A6B1D5D134E8DA10016A47D /* tree */,
-			);
-			path = runtime;
-			sourceTree = "<group>";
-		};
-		1A6B1D49134E8DA10016A47D /* misc */ = {
-			isa = PBXGroup;
-			children = (
-				1A6B1D4A134E8DA10016A47D /* ANTLRFastQueueTest.h */,
-				1A6B1D4B134E8DA10016A47D /* ANTLRFastQueueTest.m */,
-				1A6B1D4C134E8DA10016A47D /* ANTLRIntArrayTest.h */,
-				1A6B1D4D134E8DA10016A47D /* ANTLRIntArrayTest.m */,
-			);
-			path = misc;
-			sourceTree = "<group>";
-		};
-		1A6B1D4E134E8DA10016A47D /* recognizer */ = {
-			isa = PBXGroup;
-			children = (
-				1A6B1D4F134E8DA10016A47D /* ANTLRRecognizerTest.h */,
-				1A6B1D50134E8DA10016A47D /* ANTLRRecognizerTest.m */,
-			);
-			path = recognizer;
-			sourceTree = "<group>";
-		};
-		1A6B1D51134E8DA10016A47D /* sets */ = {
-			isa = PBXGroup;
-			children = (
-				1A6B1D52134E8DA10016A47D /* ANTLRBitSetTest.h */,
-				1A6B1D53134E8DA10016A47D /* ANTLRBitSetTest.m */,
-			);
-			path = sets;
-			sourceTree = "<group>";
-		};
-		1A6B1D54134E8DA10016A47D /* stream */ = {
-			isa = PBXGroup;
-			children = (
-				1A6B1D55134E8DA10016A47D /* ANTLRStringStreamTest.h */,
-				1A6B1D56134E8DA10016A47D /* ANTLRStringStreamTest.m */,
-			);
-			path = stream;
-			sourceTree = "<group>";
-		};
-		1A6B1D57134E8DA10016A47D /* TestRewriteRuleTokenStream */ = {
-			isa = PBXGroup;
-			children = (
-				1A6B1D58134E8DA10016A47D /* TestRewriteRuleTokenStream.h */,
-				1A6B1D59134E8DA10016A47D /* TestRewriteRuleTokenStream.m */,
-			);
-			path = TestRewriteRuleTokenStream;
-			sourceTree = "<group>";
-		};
-		1A6B1D5A134E8DA10016A47D /* token */ = {
-			isa = PBXGroup;
-			children = (
-				1A6B1D5B134E8DA10016A47D /* ANTLRCommonTokenTest.h */,
-				1A6B1D5C134E8DA10016A47D /* ANTLRCommonTokenTest.m */,
-			);
-			path = token;
-			sourceTree = "<group>";
-		};
-		1A6B1D5D134E8DA10016A47D /* tree */ = {
-			isa = PBXGroup;
-			children = (
-				1A6B1D5E134E8DA10016A47D /* ANTLRCommonErrorNodeTest.h */,
-				1A6B1D5F134E8DA10016A47D /* ANTLRCommonErrorNodeTest.m */,
-				1A6B1D60134E8DA10016A47D /* ANTLRCommonTreeAdaptorTest.h */,
-				1A6B1D61134E8DA10016A47D /* ANTLRCommonTreeAdaptorTest.m */,
-				1A6B1D62134E8DA10016A47D /* ANTLRCommonTreeTest.h */,
-				1A6B1D63134E8DA10016A47D /* ANTLRCommonTreeTest.m */,
-			);
-			path = tree;
-			sourceTree = "<group>";
-		};
-		1AE7230C134E860A001C3F35 = {
-			isa = PBXGroup;
-			children = (
-				1AE72318134E860B001C3F35 /* ANTLR.framework */,
-				1A048CFF134E8B9100005F57 /* Classes */,
-				1A6B1D1D134E8DA10016A47D /* ANTLRTests */,
-				1A63BC77134F5EB1002EDFB4 /* examples */,
-				1AE72321134E860B001C3F35 /* ANTLR */,
-				1AE72332134E860B001C3F35 /* ANTLRTests */,
-				1AE7231A134E860B001C3F35 /* Frameworks */,
-				1AE72319134E860B001C3F35 /* Products */,
-			);
-			sourceTree = "<group>";
-		};
-		1AE72319134E860B001C3F35 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				1AE7232D134E860B001C3F35 /* ANTLRTests.octest */,
-				1A63BC61134F5DAB002EDFB4 /* Fuzzy */,
-				1A63BD32134F5F1E002EDFB4 /* combined */,
-				1A63BD3F134F5F36002EDFB4 /* lexertest-simple */,
-				1A63BD4C134F5F43002EDFB4 /* LL-start */,
-				1A63BD59134F5F4D002EDFB4 /* polydiff */,
-				1A63BD66134F5F5E002EDFB4 /* simplecTreeParser */,
-				1A63BD73134F5F67002EDFB4 /* treeparser */,
-				1A63BD80134F5F71002EDFB4 /* treerewrite */,
-				1A63BDD4134F6233002EDFB4 /* scopes */,
-				1A63BDFC134FB75E002EDFB4 /* hoistedPredicates */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		1AE7231A134E860B001C3F35 /* Frameworks */ = {
-			isa = PBXGroup;
-			children = (
-				1AE7231E134E860B001C3F35 /* AppKit.framework */,
-				1AE7231B134E860B001C3F35 /* Cocoa.framework */,
-				1AE7231F134E860B001C3F35 /* CoreData.framework */,
-				1AE72345134E89BF001C3F35 /* CoreFoundation.framework */,
-				1AE72346134E89BF001C3F35 /* Foundation.framework */,
-				1A6B1D78134EA0970016A47D /* SenTestingKit.framework */,
-				1AE7231D134E860B001C3F35 /* Other Frameworks */,
-			);
-			name = Frameworks;
-			sourceTree = "<group>";
-		};
-		1AE7231D134E860B001C3F35 /* Other Frameworks */ = {
-			isa = PBXGroup;
-			children = (
-			);
-			name = "Other Frameworks";
-			sourceTree = "<group>";
-		};
-		1AE72321134E860B001C3F35 /* ANTLR */ = {
-			isa = PBXGroup;
-			children = (
-				1AE72322134E860B001C3F35 /* Supporting Files */,
-			);
-			path = ANTLR;
-			sourceTree = "<group>";
-		};
-		1AE72322134E860B001C3F35 /* Supporting Files */ = {
-			isa = PBXGroup;
-			children = (
-				1AE72323134E860B001C3F35 /* ANTLR-Info.plist */,
-				1AE72324134E860B001C3F35 /* InfoPlist.strings */,
-				1AE72327134E860B001C3F35 /* ANTLR-Prefix.pch */,
-			);
-			name = "Supporting Files";
-			sourceTree = "<group>";
-		};
-		1AE72332134E860B001C3F35 /* ANTLRTests */ = {
-			isa = PBXGroup;
-			children = (
-				1AE72339134E860B001C3F35 /* ANTLRTests.h */,
-				1AE7233B134E860B001C3F35 /* ANTLRTests.m */,
-				1AE72333134E860B001C3F35 /* Supporting Files */,
-			);
-			path = ANTLRTests;
-			sourceTree = "<group>";
-		};
-		1AE72333134E860B001C3F35 /* Supporting Files */ = {
-			isa = PBXGroup;
-			children = (
-				1AE72334134E860B001C3F35 /* ANTLRTests-Info.plist */,
-				1AE72335134E860B001C3F35 /* InfoPlist.strings */,
-				1AE72338134E860B001C3F35 /* ANTLRTests-Prefix.pch */,
-			);
-			name = "Supporting Files";
-			sourceTree = "<group>";
-		};
-/* End PBXGroup section */
-
-/* Begin PBXHeadersBuildPhase section */
-		1AE72315134E860B001C3F35 /* Headers */ = {
-			isa = PBXHeadersBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1AAC1C3D134FD6A500B2DC68 /* ANTLR.h in Headers */,
-				1A048D21134E8C1100005F57 /* antlr3.h in Headers */,
-				1A048D22134E8C1100005F57 /* ANTLRBaseMapElement.h in Headers */,
-				1A048D23134E8C1100005F57 /* ANTLRBaseRecognizer.h in Headers */,
-				1A048D24134E8C1100005F57 /* ANTLRBaseStack.h in Headers */,
-				1A048D25134E8C1100005F57 /* ANTLRBaseTree.h in Headers */,
-				1A048D26134E8C1100005F57 /* ANTLRBaseTreeAdaptor.h in Headers */,
-				1A048D27134E8C1100005F57 /* ANTLRBitSet.h in Headers */,
-				1A048D28134E8C1100005F57 /* ANTLRBufferedTokenStream.h in Headers */,
-				1A048D29134E8C1100005F57 /* ANTLRBufferedTreeNodeStream.h in Headers */,
-				1A048D2A134E8C1100005F57 /* ANTLRCharStream.h in Headers */,
-				1A048D2B134E8C1100005F57 /* ANTLRCharStreamState.h in Headers */,
-				1A048D2C134E8C1100005F57 /* ANTLRCommonErrorNode.h in Headers */,
-				1A048D2D134E8C1100005F57 /* ANTLRCommonToken.h in Headers */,
-				1A048D2E134E8C1100005F57 /* ANTLRCommonTokenStream.h in Headers */,
-				1A048D2F134E8C1100005F57 /* ANTLRCommonTree.h in Headers */,
-				1A048D30134E8C1100005F57 /* ANTLRCommonTreeAdaptor.h in Headers */,
-				1A048D31134E8C1100005F57 /* ANTLRCommonTreeNodeStream.h in Headers */,
-				1A048D33134E8C1100005F57 /* ANTLRDebug.h in Headers */,
-				1A048D34134E8C1100005F57 /* ANTLRDebugEventListener.h in Headers */,
-				1A048D35134E8C1100005F57 /* ANTLRDebugEventProxy.h in Headers */,
-				1A048D36134E8C1100005F57 /* ANTLRDebugParser.h in Headers */,
-				1A048D37134E8C1100005F57 /* ANTLRDebugTokenStream.h in Headers */,
-				1A048D38134E8C1100005F57 /* ANTLRDebugTreeAdaptor.h in Headers */,
-				1A048D39134E8C1100005F57 /* ANTLRDebugTreeNodeStream.h in Headers */,
-				1A048D3A134E8C1100005F57 /* ANTLRDebugTreeParser.h in Headers */,
-				1A048D3B134E8C1100005F57 /* ANTLRDFA.h in Headers */,
-				1A048D3C134E8C1100005F57 /* ANTLRDoubleKeyMap.h in Headers */,
-				1A048D3D134E8C1100005F57 /* ANTLREarlyExitException.h in Headers */,
-				1A048D3E134E8C1100005F57 /* ANTLRError.h in Headers */,
-				1A048D3F134E8C1100005F57 /* ANTLRFailedPredicateException.h in Headers */,
-				1A048D40134E8C1100005F57 /* ANTLRFastQueue.h in Headers */,
-				1A6B1CD7134E8CF70016A47D /* ANTLRFileStream.h in Headers */,
-				1A6B1CD8134E8CF70016A47D /* ANTLRHashMap.h in Headers */,
-				1A6B1CD9134E8CF70016A47D /* ANTLRHashRule.h in Headers */,
-				1A6B1CDA134E8CF70016A47D /* ANTLRInputStream.h in Headers */,
-				1A6B1CDB134E8CF70016A47D /* ANTLRIntArray.h in Headers */,
-				1A63BDEE134F932E002EDFB4 /* ANTLRIntStream.h in Headers */,
-				1A6B1CDC134E8CF70016A47D /* ANTLRLexer.h in Headers */,
-				1A6B1CDD134E8CF70016A47D /* ANTLRLexerRuleReturnScope.h in Headers */,
-				1A6B1CDE134E8CF70016A47D /* ANTLRLexerState.h in Headers */,
-				1A6B1CDF134E8CF70016A47D /* ANTLRLinkBase.h in Headers */,
-				1A6B1CE0134E8CF70016A47D /* ANTLRLookaheadStream.h in Headers */,
-				1A6B1CE1134E8CF70016A47D /* ANTLRMap.h in Headers */,
-				1A6B1CE2134E8CF70016A47D /* ANTLRMapElement.h in Headers */,
-				1A6B1CE3134E8CF70016A47D /* ANTLRMismatchedNotSetException.h in Headers */,
-				1A6B1CE4134E8CF70016A47D /* ANTLRMismatchedRangeException.h in Headers */,
-				1A6B1CE5134E8CF70016A47D /* ANTLRMismatchedSetException.h in Headers */,
-				1A6B1CE6134E8CF70016A47D /* ANTLRMismatchedTokenException.h in Headers */,
-				1A6B1CE7134E8CF70016A47D /* ANTLRMismatchedTreeNodeException.h in Headers */,
-				1A6B1CE8134E8CF70016A47D /* ANTLRMissingTokenException.h in Headers */,
-				1A6B1CE9134E8CF70016A47D /* ANTLRNodeMapElement.h in Headers */,
-				1A6B1CEA134E8CF70016A47D /* ANTLRNoViableAltException.h in Headers */,
-				1A6B1CEB134E8CF70016A47D /* ANTLRParser.h in Headers */,
-				1A6B1CEC134E8CF70016A47D /* ANTLRParserRuleReturnScope.h in Headers */,
-				1A6B1CED134E8CF80016A47D /* ANTLRParseTree.h in Headers */,
-				1A6B1CEE134E8CF80016A47D /* ANTLRPtrBuffer.h in Headers */,
-				1A6B1CEF134E8CF80016A47D /* ANTLRPtrStack.h in Headers */,
-				1A6B1CF0134E8CF80016A47D /* ANTLRReaderStream.h in Headers */,
-				1A6B1CF1134E8CF80016A47D /* ANTLRRecognitionException.h in Headers */,
-				1A6B1CF2134E8CF80016A47D /* ANTLRRecognizerSharedState.h in Headers */,
-				1A6B1CF3134E8CF80016A47D /* ANTLRRewriteRuleElementStream.h in Headers */,
-				1A6B1CF4134E8CF80016A47D /* ANTLRRewriteRuleNodeStream.h in Headers */,
-				1A6B1CF5134E8CF80016A47D /* ANTLRRewriteRuleSubtreeStream.h in Headers */,
-				1A6B1CF6134E8CF80016A47D /* ANTLRRewriteRuleTokenStream.h in Headers */,
-				1A6B1CF7134E8CF80016A47D /* ANTLRRuleMapElement.h in Headers */,
-				1A6B1CF8134E8CF80016A47D /* ANTLRRuleMemo.h in Headers */,
-				1A6B1CF9134E8CF80016A47D /* ANTLRRuleReturnScope.h in Headers */,
-				1A6B1CFA134E8CF80016A47D /* ANTLRRuleStack.h in Headers */,
-				1A6B1CFB134E8CF80016A47D /* ANTLRRuntimeException.h in Headers */,
-				1A6B1CFC134E8CF80016A47D /* ANTLRStreamEnumerator.h in Headers */,
-				1A6B1CFD134E8CF80016A47D /* ANTLRStringStream.h in Headers */,
-				1A6B1CFE134E8CF80016A47D /* ANTLRStringStreamState.h in Headers */,
-				1A6B1CFF134E8CF80016A47D /* ANTLRSymbolStack.h in Headers */,
-				1A6B1D00134E8CF80016A47D /* ANTLRToken.h in Headers */,
-				1A6B1D01134E8CF80016A47D /* ANTLRToken+DebuggerSupport.h in Headers */,
-				1A6B1D02134E8CF80016A47D /* ANTLRTokenRewriteStream.h in Headers */,
-				1A6B1D03134E8CF80016A47D /* ANTLRTokenSource.h in Headers */,
-				1A6B1D04134E8CF80016A47D /* ANTLRTokenStream.h in Headers */,
-				1A6B1D05134E8CF80016A47D /* ANTLRTree.h in Headers */,
-				1A6B1D06134E8CF80016A47D /* ANTLRTreeAdaptor.h in Headers */,
-				1A6B1D07134E8CF80016A47D /* ANTLRTreeException.h in Headers */,
-				1A6B1D08134E8CF90016A47D /* ANTLRTreeIterator.h in Headers */,
-				1A6B1D09134E8CF90016A47D /* ANTLRTreeNodeStream.h in Headers */,
-				1A6B1D0A134E8CF90016A47D /* ANTLRTreeParser.h in Headers */,
-				1A6B1D0B134E8CF90016A47D /* ANTLRTreePatternLexer.h in Headers */,
-				1A6B1D0C134E8CF90016A47D /* ANTLRTreePatternParser.h in Headers */,
-				1A6B1D0D134E8CF90016A47D /* ANTLRTreeRewriter.h in Headers */,
-				1A6B1D0E134E8CF90016A47D /* ANTLRTreeRuleReturnScope.h in Headers */,
-				1A6B1D0F134E8CF90016A47D /* ANTLRTreeVisitor.h in Headers */,
-				1A6B1D10134E8CF90016A47D /* ANTLRTreeVisitorAction.h in Headers */,
-				1A6B1D11134E8CF90016A47D /* ANTLRTreeWizard.h in Headers */,
-				1A6B1D12134E8CF90016A47D /* ANTLRUnbufferedCommonTreeNodeStream.h in Headers */,
-				1A6B1D13134E8CF90016A47D /* ANTLRUnbufferedCommonTreeNodeStreamState.h in Headers */,
-				1A6B1D14134E8CF90016A47D /* ANTLRUnbufferedTokenStream.h in Headers */,
-				1A6B1D15134E8CF90016A47D /* ANTLRUniqueIDMap.h in Headers */,
-				1A6B1D16134E8CF90016A47D /* ANTLRUnwantedTokenException.h in Headers */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXHeadersBuildPhase section */
-
-/* Begin PBXNativeTarget section */
-		1A63BC60134F5DAB002EDFB4 /* Fuzzy */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1A63BC67134F5DAC002EDFB4 /* Build configuration list for PBXNativeTarget "Fuzzy" */;
-			buildPhases = (
-				1A63BC5D134F5DAB002EDFB4 /* Sources */,
-				1A63BC5E134F5DAB002EDFB4 /* Frameworks */,
-				1A63BC5F134F5DAB002EDFB4 /* CopyFiles */,
-			);
-			buildRules = (
-				1A63BDED134F6810002EDFB4 /* PBXBuildRule */,
-			);
-			dependencies = (
-				1A63BDA3134F60A7002EDFB4 /* PBXTargetDependency */,
-			);
-			name = Fuzzy;
-			productName = Fuzzy;
-			productReference = 1A63BC61134F5DAB002EDFB4 /* Fuzzy */;
-			productType = "com.apple.product-type.tool";
-		};
-		1A63BD31134F5F1E002EDFB4 /* combined */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1A63BD38134F5F1E002EDFB4 /* Build configuration list for PBXNativeTarget "combined" */;
-			buildPhases = (
-				1A63BD2E134F5F1E002EDFB4 /* Sources */,
-				1A63BD2F134F5F1E002EDFB4 /* Frameworks */,
-				1A63BD30134F5F1E002EDFB4 /* CopyFiles */,
-			);
-			buildRules = (
-				1A63BDEC134F649F002EDFB4 /* PBXBuildRule */,
-			);
-			dependencies = (
-				1A63BDA1134F609B002EDFB4 /* PBXTargetDependency */,
-			);
-			name = combined;
-			productName = combined;
-			productReference = 1A63BD32134F5F1E002EDFB4 /* combined */;
-			productType = "com.apple.product-type.tool";
-		};
-		1A63BD3E134F5F36002EDFB4 /* lexertest-simple */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1A63BD45134F5F36002EDFB4 /* Build configuration list for PBXNativeTarget "lexertest-simple" */;
-			buildPhases = (
-				1A63BD3B134F5F36002EDFB4 /* Sources */,
-				1A63BD3C134F5F36002EDFB4 /* Frameworks */,
-				1A63BD3D134F5F36002EDFB4 /* CopyFiles */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				1A63BD9F134F6093002EDFB4 /* PBXTargetDependency */,
-			);
-			name = "lexertest-simple";
-			productName = "lexertest-simple";
-			productReference = 1A63BD3F134F5F36002EDFB4 /* lexertest-simple */;
-			productType = "com.apple.product-type.tool";
-		};
-		1A63BD4B134F5F43002EDFB4 /* LL-start */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1A63BD52134F5F43002EDFB4 /* Build configuration list for PBXNativeTarget "LL-start" */;
-			buildPhases = (
-				1A63BD48134F5F43002EDFB4 /* Sources */,
-				1A63BD49134F5F43002EDFB4 /* Frameworks */,
-				1A63BD4A134F5F43002EDFB4 /* CopyFiles */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				1A63BDA5134F60B0002EDFB4 /* PBXTargetDependency */,
-			);
-			name = "LL-start";
-			productName = "LL-start";
-			productReference = 1A63BD4C134F5F43002EDFB4 /* LL-start */;
-			productType = "com.apple.product-type.tool";
-		};
-		1A63BD58134F5F4D002EDFB4 /* polydiff */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1A63BD5F134F5F4D002EDFB4 /* Build configuration list for PBXNativeTarget "polydiff" */;
-			buildPhases = (
-				1A63BD55134F5F4D002EDFB4 /* Sources */,
-				1A63BD56134F5F4D002EDFB4 /* Frameworks */,
-				1A63BD57134F5F4D002EDFB4 /* CopyFiles */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				1A63BDA7134F60BC002EDFB4 /* PBXTargetDependency */,
-			);
-			name = polydiff;
-			productName = polydiff;
-			productReference = 1A63BD59134F5F4D002EDFB4 /* polydiff */;
-			productType = "com.apple.product-type.tool";
-		};
-		1A63BD65134F5F5E002EDFB4 /* simplecTreeParser */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1A63BD6C134F5F5E002EDFB4 /* Build configuration list for PBXNativeTarget "simplecTreeParser" */;
-			buildPhases = (
-				1A63BD62134F5F5E002EDFB4 /* Sources */,
-				1A63BD63134F5F5E002EDFB4 /* Frameworks */,
-				1A63BD64134F5F5E002EDFB4 /* CopyFiles */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				1A63BDA9134F60C3002EDFB4 /* PBXTargetDependency */,
-			);
-			name = simplecTreeParser;
-			productName = simplecTreeParser;
-			productReference = 1A63BD66134F5F5E002EDFB4 /* simplecTreeParser */;
-			productType = "com.apple.product-type.tool";
-		};
-		1A63BD72134F5F67002EDFB4 /* treeparser */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1A63BD79134F5F68002EDFB4 /* Build configuration list for PBXNativeTarget "treeparser" */;
-			buildPhases = (
-				1A63BD6F134F5F67002EDFB4 /* Sources */,
-				1A63BD70134F5F67002EDFB4 /* Frameworks */,
-				1A63BD71134F5F67002EDFB4 /* CopyFiles */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				1A63BDAB134F60CC002EDFB4 /* PBXTargetDependency */,
-			);
-			name = treeparser;
-			productName = treeparser;
-			productReference = 1A63BD73134F5F67002EDFB4 /* treeparser */;
-			productType = "com.apple.product-type.tool";
-		};
-		1A63BD7F134F5F71002EDFB4 /* treerewrite */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1A63BD86134F5F72002EDFB4 /* Build configuration list for PBXNativeTarget "treerewrite" */;
-			buildPhases = (
-				1A63BD7C134F5F71002EDFB4 /* Sources */,
-				1A63BD7D134F5F71002EDFB4 /* Frameworks */,
-				1A63BD7E134F5F71002EDFB4 /* Copy Files */,
-			);
-			buildRules = (
-				1A76A02C134FC7540041634F /* PBXBuildRule */,
-			);
-			dependencies = (
-				1A63BDAD134F60D2002EDFB4 /* PBXTargetDependency */,
-			);
-			name = treerewrite;
-			productName = treerewrite;
-			productReference = 1A63BD80134F5F71002EDFB4 /* treerewrite */;
-			productType = "com.apple.product-type.tool";
-		};
-		1A63BDD3134F6233002EDFB4 /* scopes */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1A63BDDA134F6234002EDFB4 /* Build configuration list for PBXNativeTarget "scopes" */;
-			buildPhases = (
-				1A63BDD0134F6233002EDFB4 /* Sources */,
-				1A63BDD1134F6233002EDFB4 /* Frameworks */,
-				1A63BDD2134F6233002EDFB4 /* CopyFiles */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				1A63BDE6134F629B002EDFB4 /* PBXTargetDependency */,
-			);
-			name = scopes;
-			productName = scopes;
-			productReference = 1A63BDD4134F6233002EDFB4 /* scopes */;
-			productType = "com.apple.product-type.tool";
-		};
-		1A63BDFB134FB75E002EDFB4 /* hoistedPredicates */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1A63BE02134FB75F002EDFB4 /* Build configuration list for PBXNativeTarget "hoistedPredicates" */;
-			buildPhases = (
-				1A63BDF8134FB75E002EDFB4 /* Sources */,
-				1A63BDF9134FB75E002EDFB4 /* Frameworks */,
-				1A63BDFA134FB75E002EDFB4 /* CopyFiles */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				1A63BE0B134FB824002EDFB4 /* PBXTargetDependency */,
-			);
-			name = hoistedPredicates;
-			productName = hoistedPredicates;
-			productReference = 1A63BDFC134FB75E002EDFB4 /* hoistedPredicates */;
-			productType = "com.apple.product-type.tool";
-		};
-		1AE72317134E860B001C3F35 /* ANTLR */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1AE7233F134E860B001C3F35 /* Build configuration list for PBXNativeTarget "ANTLR" */;
-			buildPhases = (
-				1AE72313134E860B001C3F35 /* Sources */,
-				1AE72314134E860B001C3F35 /* Frameworks */,
-				1AE72315134E860B001C3F35 /* Headers */,
-				1AE72316134E860B001C3F35 /* Resources */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-			);
-			name = ANTLR;
-			productName = ANTLR;
-			productReference = 1AE72318134E860B001C3F35 /* ANTLR.framework */;
-			productType = "com.apple.product-type.framework";
-		};
-		1AE7232C134E860B001C3F35 /* ANTLRTests */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 1AE72342134E860B001C3F35 /* Build configuration list for PBXNativeTarget "ANTLRTests" */;
-			buildPhases = (
-				1AE72328134E860B001C3F35 /* Sources */,
-				1AE72329134E860B001C3F35 /* Frameworks */,
-				1AE7232A134E860B001C3F35 /* Resources */,
-				1AE7232B134E860B001C3F35 /* ShellScript */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				1AE72330134E860B001C3F35 /* PBXTargetDependency */,
-			);
-			name = ANTLRTests;
-			productName = ANTLRTests;
-			productReference = 1AE7232D134E860B001C3F35 /* ANTLRTests.octest */;
-			productType = "com.apple.product-type.bundle";
-		};
-/* End PBXNativeTarget section */
-
-/* Begin PBXProject section */
-		1AE7230E134E860A001C3F35 /* Project object */ = {
-			isa = PBXProject;
-			attributes = {
-				ORGANIZATIONNAME = "Alan's MachineWorks";
-			};
-			buildConfigurationList = 1AE72311134E860A001C3F35 /* Build configuration list for PBXProject "ANTLR" */;
-			compatibilityVersion = "Xcode 3.2";
-			developmentRegion = English;
-			hasScannedForEncodings = 0;
-			knownRegions = (
-				en,
-			);
-			mainGroup = 1AE7230C134E860A001C3F35;
-			productRefGroup = 1AE72319134E860B001C3F35 /* Products */;
-			projectDirPath = "";
-			projectRoot = "";
-			targets = (
-				1AE72317134E860B001C3F35 /* ANTLR */,
-				1AE7232C134E860B001C3F35 /* ANTLRTests */,
-				1A63BD31134F5F1E002EDFB4 /* combined */,
-				1A63BC60134F5DAB002EDFB4 /* Fuzzy */,
-				1A63BDFB134FB75E002EDFB4 /* hoistedPredicates */,
-				1A63BD3E134F5F36002EDFB4 /* lexertest-simple */,
-				1A63BD4B134F5F43002EDFB4 /* LL-start */,
-				1A63BD58134F5F4D002EDFB4 /* polydiff */,
-				1A63BDD3134F6233002EDFB4 /* scopes */,
-				1A63BD65134F5F5E002EDFB4 /* simplecTreeParser */,
-				1A63BD72134F5F67002EDFB4 /* treeparser */,
-				1A63BD7F134F5F71002EDFB4 /* treerewrite */,
-			);
-		};
-/* End PBXProject section */
-
-/* Begin PBXResourcesBuildPhase section */
-		1AE72316134E860B001C3F35 /* Resources */ = {
-			isa = PBXResourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1AE72326134E860B001C3F35 /* InfoPlist.strings in Resources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1AE7232A134E860B001C3F35 /* Resources */ = {
-			isa = PBXResourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1AE72337134E860B001C3F35 /* InfoPlist.strings in Resources */,
-				1AE7233A134E860B001C3F35 /* ANTLRTests.h in Resources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXResourcesBuildPhase section */
-
-/* Begin PBXShellScriptBuildPhase section */
-		1AE7232B134E860B001C3F35 /* ShellScript */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputPaths = (
-			);
-			outputPaths = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "# Run the unit tests in this test bundle.\n\"${SYSTEM_DEVELOPER_DIR}/Tools/RunUnitTests\"\n";
-		};
-/* End PBXShellScriptBuildPhase section */
-
-/* Begin PBXSourcesBuildPhase section */
-		1A63BC5D134F5DAB002EDFB4 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BC6F134F5DE5002EDFB4 /* main.m in Sources */,
-				1A63BC6E134F5DE5002EDFB4 /* FuzzyLexer.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD2E134F5F1E002EDFB4 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BD8B134F5FF3002EDFB4 /* main.m in Sources */,
-				1A63BD89134F5FF3002EDFB4 /* CombinedLexer.m in Sources */,
-				1A63BD8A134F5FF3002EDFB4 /* CombinedParser.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD3B134F5F36002EDFB4 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BD94134F606A002EDFB4 /* main.m in Sources */,
-				1A63BD95134F606A002EDFB4 /* TestLexer.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD48134F5F43002EDFB4 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BDC7134F61E4002EDFB4 /* main.m in Sources */,
-				1A63BDC8134F61E8002EDFB4 /* SimpleCLexer.m in Sources */,
-				1A63BDC9134F61EC002EDFB4 /* SimpleCParser.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD55134F5F4D002EDFB4 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BDCA134F6218002EDFB4 /* Main.m in Sources */,
-				1A63BDCB134F6218002EDFB4 /* PolyDifferentiator.m in Sources */,
-				1A63BDCC134F6218002EDFB4 /* PolyLexer.m in Sources */,
-				1A63BDCD134F6218002EDFB4 /* PolyParser.m in Sources */,
-				1A63BDCE134F6218002EDFB4 /* PolyPrinter.m in Sources */,
-				1A63BDCF134F6218002EDFB4 /* Simplifier.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD62134F5F5E002EDFB4 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BDE8134F62D0002EDFB4 /* main.m in Sources */,
-				1A63BDEA134F62D0002EDFB4 /* SimpleCTP.m in Sources */,
-				1A63BDEB134F62D0002EDFB4 /* SimpleCWalker.m in Sources */,
-				1A63BDE7134F62CB002EDFB4 /* SimpleCLexer.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD6F134F5F67002EDFB4 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A76A02F134FD4160041634F /* main.m in Sources */,
-				1A76A032134FD4B90041634F /* LangDumpDecl.m in Sources */,
-				1A76A030134FD4A00041634F /* LangLexer.m in Sources */,
-				1A76A031134FD4A40041634F /* LangParser.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BD7C134F5F71002EDFB4 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BDF6134FB55F002EDFB4 /* main.m in Sources */,
-				1A63BDF5134FB55B002EDFB4 /* TreeRewriteLexer.m in Sources */,
-				1A63BDF7134FB564002EDFB4 /* TreeRewriteParser.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BDD0134F6233002EDFB4 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BDDD134F6258002EDFB4 /* main.m in Sources */,
-				1A63BDDE134F6258002EDFB4 /* SymbolTableLexer.m in Sources */,
-				1A63BDDF134F6258002EDFB4 /* SymbolTableParser.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1A63BDF8134FB75E002EDFB4 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1A63BE05134FB807002EDFB4 /* main.m in Sources */,
-				1A63BE06134FB80B002EDFB4 /* TLexer.m in Sources */,
-				1A63BE07134FB80E002EDFB4 /* TParser.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1AE72313134E860B001C3F35 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1AE7239F134E8AB4001C3F35 /* ANTLRBaseMapElement.m in Sources */,
-				1AE723A0134E8AB4001C3F35 /* ANTLRBaseRecognizer.m in Sources */,
-				1AE723A1134E8AB4001C3F35 /* ANTLRBaseStack.m in Sources */,
-				1AE723A2134E8AB4001C3F35 /* ANTLRBaseTree.m in Sources */,
-				1AE723A3134E8AB4001C3F35 /* ANTLRBaseTreeAdaptor.m in Sources */,
-				1AE723A4134E8AB4001C3F35 /* ANTLRBitSet.m in Sources */,
-				1AE723A5134E8AB4001C3F35 /* ANTLRBufferedTokenStream.m in Sources */,
-				1AE723A6134E8AB4001C3F35 /* ANTLRBufferedTreeNodeStream.m in Sources */,
-				1AE723A7134E8AB4001C3F35 /* ANTLRCharStreamState.m in Sources */,
-				1AE723A8134E8AB4001C3F35 /* ANTLRCommonErrorNode.m in Sources */,
-				1AE723A9134E8AB4001C3F35 /* ANTLRCommonToken.m in Sources */,
-				1AE723AA134E8AB4001C3F35 /* ANTLRCommonTokenStream.m in Sources */,
-				1AE723AB134E8AB4001C3F35 /* ANTLRCommonTree.m in Sources */,
-				1AE723AC134E8AB4001C3F35 /* ANTLRCommonTreeAdaptor.m in Sources */,
-				1AE723AD134E8AB4001C3F35 /* ANTLRCommonTreeNodeStream.m in Sources */,
-				1AE723AE134E8AB4001C3F35 /* ANTLRDebugEventProxy.m in Sources */,
-				1AE723AF134E8AB4001C3F35 /* ANTLRDebugParser.m in Sources */,
-				1AE723B0134E8AB4001C3F35 /* ANTLRDebugTokenStream.m in Sources */,
-				1AE723B1134E8AB4001C3F35 /* ANTLRDebugTreeAdaptor.m in Sources */,
-				1AE723B2134E8AB4001C3F35 /* ANTLRDebugTreeNodeStream.m in Sources */,
-				1AE723B3134E8AB4001C3F35 /* ANTLRDebugTreeParser.m in Sources */,
-				1AE723B4134E8AB4001C3F35 /* ANTLRDFA.m in Sources */,
-				1AE723B5134E8AB4001C3F35 /* ANTLRDoubleKeyMap.m in Sources */,
-				1AE723B6134E8AB4001C3F35 /* ANTLREarlyExitException.m in Sources */,
-				1AE723B7134E8AB4001C3F35 /* ANTLRFailedPredicateException.m in Sources */,
-				1AE723B8134E8AB4001C3F35 /* ANTLRFastQueue.m in Sources */,
-				1AE723B9134E8AB4001C3F35 /* ANTLRFileStream.m in Sources */,
-				1AE723BA134E8AB5001C3F35 /* ANTLRHashMap.m in Sources */,
-				1AE723BB134E8AB5001C3F35 /* ANTLRHashRule.m in Sources */,
-				1AE723BC134E8AB5001C3F35 /* ANTLRInputStream.m in Sources */,
-				1AE723BD134E8AB5001C3F35 /* ANTLRIntArray.m in Sources */,
-				1AE723BF134E8AB5001C3F35 /* ANTLRLexer.m in Sources */,
-				1AE723C0134E8AB5001C3F35 /* ANTLRLexerRuleReturnScope.m in Sources */,
-				1AE723C1134E8AB5001C3F35 /* ANTLRLexerState.m in Sources */,
-				1AE723C2134E8AB5001C3F35 /* ANTLRLinkBase.m in Sources */,
-				1AE723C3134E8AB5001C3F35 /* ANTLRLookaheadStream.m in Sources */,
-				1AE723C4134E8AB5001C3F35 /* ANTLRMap.m in Sources */,
-				1AE723C5134E8AB5001C3F35 /* ANTLRMapElement.m in Sources */,
-				1AE723C6134E8AB5001C3F35 /* ANTLRMismatchedNotSetException.m in Sources */,
-				1AE723C7134E8AB5001C3F35 /* ANTLRMismatchedRangeException.m in Sources */,
-				1AE723C8134E8AB5001C3F35 /* ANTLRMismatchedSetException.m in Sources */,
-				1AE723C9134E8AB5001C3F35 /* ANTLRMismatchedTokenException.m in Sources */,
-				1AE723CA134E8AB5001C3F35 /* ANTLRMismatchedTreeNodeException.m in Sources */,
-				1AE723CB134E8AB5001C3F35 /* ANTLRMissingTokenException.m in Sources */,
-				1AE723CC134E8AB5001C3F35 /* ANTLRNodeMapElement.m in Sources */,
-				1AE723CD134E8AB5001C3F35 /* ANTLRNoViableAltException.m in Sources */,
-				1AE723CE134E8AB5001C3F35 /* ANTLRParser.m in Sources */,
-				1AE723CF134E8AB5001C3F35 /* ANTLRParserRuleReturnScope.m in Sources */,
-				1AE723D0134E8AB5001C3F35 /* ANTLRParseTree.m in Sources */,
-				1AE723D1134E8AB5001C3F35 /* ANTLRPtrBuffer.m in Sources */,
-				1AE723D2134E8AB5001C3F35 /* ANTLRPtrStack.m in Sources */,
-				1AE723D3134E8AB5001C3F35 /* ANTLRReaderStream.m in Sources */,
-				1AE723D4134E8AB5001C3F35 /* ANTLRRecognitionException.m in Sources */,
-				1AE723D5134E8AB5001C3F35 /* ANTLRRecognizerSharedState.m in Sources */,
-				1AE723D6134E8AB5001C3F35 /* ANTLRRewriteRuleElementStream.m in Sources */,
-				1AE723D7134E8AB5001C3F35 /* ANTLRRewriteRuleNodeStream.m in Sources */,
-				1AE723D8134E8AB5001C3F35 /* ANTLRRewriteRuleSubtreeStream.m in Sources */,
-				1AE723D9134E8AB5001C3F35 /* ANTLRRewriteRuleTokenStream.m in Sources */,
-				1AE723DA134E8AB5001C3F35 /* ANTLRRuleMapElement.m in Sources */,
-				1AE723DB134E8AB5001C3F35 /* ANTLRRuleMemo.m in Sources */,
-				1AE723DC134E8AB5001C3F35 /* ANTLRRuleReturnScope.m in Sources */,
-				1AE723DD134E8AB5001C3F35 /* ANTLRRuleStack.m in Sources */,
-				1AE723DE134E8AB5001C3F35 /* ANTLRRuntimeException.m in Sources */,
-				1AE723DF134E8AB5001C3F35 /* ANTLRStreamEnumerator.m in Sources */,
-				1AE723E0134E8AB5001C3F35 /* ANTLRStringStream.m in Sources */,
-				1AE723E1134E8AB5001C3F35 /* ANTLRSymbolStack.m in Sources */,
-				1AE723E2134E8AB5001C3F35 /* ANTLRToken+DebuggerSupport.m in Sources */,
-				1AE723E3134E8AB6001C3F35 /* ANTLRTokenRewriteStream.m in Sources */,
-				1AE723E5134E8AB6001C3F35 /* ANTLRTreeAdaptor.m in Sources */,
-				1AE723E6134E8AB6001C3F35 /* ANTLRTreeException.m in Sources */,
-				1AE723E7134E8AB6001C3F35 /* ANTLRTreeIterator.m in Sources */,
-				1AE723E8134E8AB6001C3F35 /* ANTLRTreeParser.m in Sources */,
-				1AE723E9134E8AB6001C3F35 /* ANTLRTreePatternLexer.m in Sources */,
-				1AE723EA134E8AB6001C3F35 /* ANTLRTreePatternParser.m in Sources */,
-				1AE723EB134E8AB6001C3F35 /* ANTLRTreeRewriter.m in Sources */,
-				1AE723EC134E8AB6001C3F35 /* ANTLRTreeRuleReturnScope.m in Sources */,
-				1AE723ED134E8AB6001C3F35 /* ANTLRTreeVisitor.m in Sources */,
-				1AE723EE134E8AB6001C3F35 /* ANTLRTreeVisitorAction.m in Sources */,
-				1AE723EF134E8AB6001C3F35 /* ANTLRTreeWizard.m in Sources */,
-				1AE723F0134E8AB6001C3F35 /* ANTLRUnbufferedCommonTreeNodeStream.m in Sources */,
-				1AE723F1134E8AB6001C3F35 /* ANTLRUnbufferedCommonTreeNodeStreamState.m in Sources */,
-				1AE723F2134E8AB6001C3F35 /* ANTLRUnbufferedTokenStream.m in Sources */,
-				1AE723F3134E8AB6001C3F35 /* ANTLRUniqueIDMap.m in Sources */,
-				1AE723F4134E8AB6001C3F35 /* ANTLRUnwantedTokenException.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1AE72328134E860B001C3F35 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				1AE7233C134E860B001C3F35 /* ANTLRTests.m in Sources */,
-				1A6B1D6A134E8DEB0016A47D /* ANTLRBitSetTest.h in Sources */,
-				1A6B1D6B134E8DEB0016A47D /* ANTLRBitSetTest.m in Sources */,
-				1A6B1D70134E8DEB0016A47D /* ANTLRCommonTokenTest.h in Sources */,
-				1A6B1D71134E8DEB0016A47D /* ANTLRCommonTokenTest.m in Sources */,
-				1A6B1D72134E8DEB0016A47D /* ANTLRCommonErrorNodeTest.h in Sources */,
-				1A6B1D73134E8DEB0016A47D /* ANTLRCommonErrorNodeTest.m in Sources */,
-				1A6B1D74134E8DEB0016A47D /* ANTLRCommonTreeAdaptorTest.h in Sources */,
-				1A6B1D75134E8DEC0016A47D /* ANTLRCommonTreeAdaptorTest.m in Sources */,
-				1A6B1D76134E8DEC0016A47D /* ANTLRCommonTreeTest.h in Sources */,
-				1A6B1D77134E8DEC0016A47D /* ANTLRCommonTreeTest.m in Sources */,
-				1A6B1D64134E8DEB0016A47D /* ANTLRFastQueueTest.h in Sources */,
-				1A6B1D65134E8DEB0016A47D /* ANTLRFastQueueTest.m in Sources */,
-				1A6B1D66134E8DEB0016A47D /* ANTLRIntArrayTest.h in Sources */,
-				1A6B1D67134E8DEB0016A47D /* ANTLRIntArrayTest.m in Sources */,
-				1A6B1D68134E8DEB0016A47D /* ANTLRRecognizerTest.h in Sources */,
-				1A6B1D69134E8DEB0016A47D /* ANTLRRecognizerTest.m in Sources */,
-				1A6B1D6C134E8DEB0016A47D /* ANTLRStringStreamTest.h in Sources */,
-				1A6B1D6D134E8DEB0016A47D /* ANTLRStringStreamTest.m in Sources */,
-				1A6B1D6E134E8DEB0016A47D /* TestRewriteRuleTokenStream.h in Sources */,
-				1A6B1D6F134E8DEB0016A47D /* TestRewriteRuleTokenStream.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXSourcesBuildPhase section */
-
-/* Begin PBXTargetDependency section */
-		1A63BD9F134F6093002EDFB4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1A63BD9E134F6093002EDFB4 /* PBXContainerItemProxy */;
-		};
-		1A63BDA1134F609B002EDFB4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1A63BDA0134F609B002EDFB4 /* PBXContainerItemProxy */;
-		};
-		1A63BDA3134F60A7002EDFB4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1A63BDA2134F60A7002EDFB4 /* PBXContainerItemProxy */;
-		};
-		1A63BDA5134F60B0002EDFB4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1A63BDA4134F60B0002EDFB4 /* PBXContainerItemProxy */;
-		};
-		1A63BDA7134F60BC002EDFB4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1A63BDA6134F60BC002EDFB4 /* PBXContainerItemProxy */;
-		};
-		1A63BDA9134F60C3002EDFB4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1A63BDA8134F60C3002EDFB4 /* PBXContainerItemProxy */;
-		};
-		1A63BDAB134F60CC002EDFB4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1A63BDAA134F60CC002EDFB4 /* PBXContainerItemProxy */;
-		};
-		1A63BDAD134F60D2002EDFB4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1A63BDAC134F60D2002EDFB4 /* PBXContainerItemProxy */;
-		};
-		1A63BDE6134F629B002EDFB4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1A63BDE5134F629B002EDFB4 /* PBXContainerItemProxy */;
-		};
-		1A63BE0B134FB824002EDFB4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1A63BE0A134FB824002EDFB4 /* PBXContainerItemProxy */;
-		};
-		1AE72330134E860B001C3F35 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 1AE72317134E860B001C3F35 /* ANTLR */;
-			targetProxy = 1AE7232F134E860B001C3F35 /* PBXContainerItemProxy */;
-		};
-/* End PBXTargetDependency section */
-
-/* Begin PBXVariantGroup section */
-		1AE72324134E860B001C3F35 /* InfoPlist.strings */ = {
-			isa = PBXVariantGroup;
-			children = (
-				1AE72325134E860B001C3F35 /* en */,
-			);
-			name = InfoPlist.strings;
-			sourceTree = "<group>";
-		};
-		1AE72335134E860B001C3F35 /* InfoPlist.strings */ = {
-			isa = PBXVariantGroup;
-			children = (
-				1AE72336134E860B001C3F35 /* en */,
-			);
-			name = InfoPlist.strings;
-			sourceTree = "<group>";
-		};
-/* End PBXVariantGroup section */
-
-/* Begin XCBuildConfiguration section */
-		1A63BC68134F5DAC002EDFB4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				"FRAMEWORK_SEARCH_PATHS[arch=*]" = /Library/Frameworks;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				HEADER_SEARCH_PATHS = /Library/Frameworks;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-			};
-			name = Debug;
-		};
-		1A63BC69134F5DAC002EDFB4 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-			};
-			name = Release;
-		};
-		1A63BD39134F5F1E002EDFB4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-			};
-			name = Debug;
-		};
-		1A63BD3A134F5F1E002EDFB4 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-			};
-			name = Release;
-		};
-		1A63BD46134F5F36002EDFB4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				HEADER_SEARCH_PATHS = /Library/Frameworks;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-			};
-			name = Debug;
-		};
-		1A63BD47134F5F36002EDFB4 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-			};
-			name = Release;
-		};
-		1A63BD53134F5F43002EDFB4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-			};
-			name = Debug;
-		};
-		1A63BD54134F5F43002EDFB4 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-			};
-			name = Release;
-		};
-		1A63BD60134F5F4D002EDFB4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				HEADER_SEARCH_PATHS = /Library/Frameworks;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				USER_HEADER_SEARCH_PATHS = /Library/Frameworks;
-			};
-			name = Debug;
-		};
-		1A63BD61134F5F4D002EDFB4 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				USER_HEADER_SEARCH_PATHS = /Library/Frameworks;
-			};
-			name = Release;
-		};
-		1A63BD6D134F5F5E002EDFB4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-			};
-			name = Debug;
-		};
-		1A63BD6E134F5F5E002EDFB4 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-			};
-			name = Release;
-		};
-		1A63BD7A134F5F68002EDFB4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-			};
-			name = Debug;
-		};
-		1A63BD7B134F5F68002EDFB4 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-			};
-			name = Release;
-		};
-		1A63BD87134F5F72002EDFB4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-			};
-			name = Debug;
-		};
-		1A63BD88134F5F72002EDFB4 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-			};
-			name = Release;
-		};
-		1A63BDDB134F6234002EDFB4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-				USER_HEADER_SEARCH_PATHS = /Library/Frameworks;
-			};
-			name = Debug;
-		};
-		1A63BDDC134F6234002EDFB4 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				TEST_AFTER_BUILD = YES;
-				USER_HEADER_SEARCH_PATHS = /Library/Frameworks;
-			};
-			name = Release;
-		};
-		1A63BE03134FB75F002EDFB4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-			};
-			name = Debug;
-		};
-		1A63BE04134FB75F002EDFB4 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				ONLY_ACTIVE_ARCH = YES;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-			};
-			name = Release;
-		};
-		1AE7233D134E860B001C3F35 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
-				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_ENABLE_OBJC_GC = supported;
-				GCC_OPTIMIZATION_LEVEL = 0;
-				GCC_PREPROCESSOR_DEFINITIONS = DEBUG;
-				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
-				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				HEADER_SEARCH_PATHS = /Library/Frameworks;
-				MACOSX_DEPLOYMENT_TARGET = 10.6;
-				ONLY_ACTIVE_ARCH = NO;
-				SDKROOT = macosx;
-				USER_HEADER_SEARCH_PATHS = /Library/Frameworks;
-				VALID_ARCHS = i386;
-			};
-			name = Debug;
-		};
-		1AE7233E134E860B001C3F35 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
-				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_ENABLE_OBJC_GC = supported;
-				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				HEADER_SEARCH_PATHS = /Library/Frameworks;
-				MACOSX_DEPLOYMENT_TARGET = 10.6;
-				ONLY_ACTIVE_ARCH = NO;
-				SDKROOT = macosx;
-				USER_HEADER_SEARCH_PATHS = /Library/Frameworks;
-				VALID_ARCHS = i386;
-			};
-			name = Release;
-		};
-		1AE72340134E860B001C3F35 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
-				COPY_PHASE_STRIP = NO;
-				DYLIB_COMPATIBILITY_VERSION = 1;
-				DYLIB_CURRENT_VERSION = 1;
-				FRAMEWORK_VERSION = A;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				GCC_PRECOMPILE_PREFIX_HEADER = YES;
-				GCC_PREFIX_HEADER = "ANTLR/ANTLR-Prefix.pch";
-				INFOPLIST_FILE = "ANTLR/ANTLR-Info.plist";
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				VALID_ARCHS = i386;
-				WRAPPER_EXTENSION = framework;
-			};
-			name = Debug;
-		};
-		1AE72341134E860B001C3F35 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				DYLIB_COMPATIBILITY_VERSION = 1;
-				DYLIB_CURRENT_VERSION = 1;
-				FRAMEWORK_VERSION = A;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_ENABLE_OBJC_GC = required;
-				GCC_PRECOMPILE_PREFIX_HEADER = YES;
-				GCC_PREFIX_HEADER = "ANTLR/ANTLR-Prefix.pch";
-				INFOPLIST_FILE = "ANTLR/ANTLR-Info.plist";
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				VALID_ARCHS = i386;
-				WRAPPER_EXTENSION = framework;
-			};
-			name = Release;
-		};
-		1AE72343134E860B001C3F35 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				COPY_PHASE_STRIP = NO;
-				FRAMEWORK_SEARCH_PATHS = "$(DEVELOPER_LIBRARY_DIR)/Frameworks";
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_PRECOMPILE_PREFIX_HEADER = YES;
-				GCC_PREFIX_HEADER = "ANTLRTests/ANTLRTests-Prefix.pch";
-				INFOPLIST_FILE = "ANTLRTests/ANTLRTests-Info.plist";
-				OTHER_LDFLAGS = (
-					"-framework",
-					SenTestingKit,
-				);
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				WRAPPER_EXTENSION = octest;
-			};
-			name = Debug;
-		};
-		1AE72344134E860B001C3F35 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				FRAMEWORK_SEARCH_PATHS = "$(DEVELOPER_LIBRARY_DIR)/Frameworks";
-				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
-				GCC_PRECOMPILE_PREFIX_HEADER = YES;
-				GCC_PREFIX_HEADER = "ANTLRTests/ANTLRTests-Prefix.pch";
-				INFOPLIST_FILE = "ANTLRTests/ANTLRTests-Info.plist";
-				OTHER_LDFLAGS = (
-					"-framework",
-					SenTestingKit,
-				);
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				WRAPPER_EXTENSION = octest;
-			};
-			name = Release;
-		};
-/* End XCBuildConfiguration section */
-
-/* Begin XCConfigurationList section */
-		1A63BC67134F5DAC002EDFB4 /* Build configuration list for PBXNativeTarget "Fuzzy" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1A63BC68134F5DAC002EDFB4 /* Debug */,
-				1A63BC69134F5DAC002EDFB4 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1A63BD38134F5F1E002EDFB4 /* Build configuration list for PBXNativeTarget "combined" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1A63BD39134F5F1E002EDFB4 /* Debug */,
-				1A63BD3A134F5F1E002EDFB4 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1A63BD45134F5F36002EDFB4 /* Build configuration list for PBXNativeTarget "lexertest-simple" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1A63BD46134F5F36002EDFB4 /* Debug */,
-				1A63BD47134F5F36002EDFB4 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1A63BD52134F5F43002EDFB4 /* Build configuration list for PBXNativeTarget "LL-start" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1A63BD53134F5F43002EDFB4 /* Debug */,
-				1A63BD54134F5F43002EDFB4 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1A63BD5F134F5F4D002EDFB4 /* Build configuration list for PBXNativeTarget "polydiff" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1A63BD60134F5F4D002EDFB4 /* Debug */,
-				1A63BD61134F5F4D002EDFB4 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1A63BD6C134F5F5E002EDFB4 /* Build configuration list for PBXNativeTarget "simplecTreeParser" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1A63BD6D134F5F5E002EDFB4 /* Debug */,
-				1A63BD6E134F5F5E002EDFB4 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1A63BD79134F5F68002EDFB4 /* Build configuration list for PBXNativeTarget "treeparser" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1A63BD7A134F5F68002EDFB4 /* Debug */,
-				1A63BD7B134F5F68002EDFB4 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1A63BD86134F5F72002EDFB4 /* Build configuration list for PBXNativeTarget "treerewrite" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1A63BD87134F5F72002EDFB4 /* Debug */,
-				1A63BD88134F5F72002EDFB4 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1A63BDDA134F6234002EDFB4 /* Build configuration list for PBXNativeTarget "scopes" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1A63BDDB134F6234002EDFB4 /* Debug */,
-				1A63BDDC134F6234002EDFB4 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1A63BE02134FB75F002EDFB4 /* Build configuration list for PBXNativeTarget "hoistedPredicates" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1A63BE03134FB75F002EDFB4 /* Debug */,
-				1A63BE04134FB75F002EDFB4 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1AE72311134E860A001C3F35 /* Build configuration list for PBXProject "ANTLR" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1AE7233D134E860B001C3F35 /* Debug */,
-				1AE7233E134E860B001C3F35 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1AE7233F134E860B001C3F35 /* Build configuration list for PBXNativeTarget "ANTLR" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1AE72340134E860B001C3F35 /* Debug */,
-				1AE72341134E860B001C3F35 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		1AE72342134E860B001C3F35 /* Build configuration list for PBXNativeTarget "ANTLRTests" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				1AE72343134E860B001C3F35 /* Debug */,
-				1AE72344134E860B001C3F35 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-/* End XCConfigurationList section */
-	};
-	rootObject = 1AE7230E134E860A001C3F35 /* Project object */;
-}
diff --git a/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/xcuserdata/acondit.xcuserdatad/xcdebugger/Breakpoints.xcbkptlist b/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/xcuserdata/acondit.xcuserdatad/xcdebugger/Breakpoints.xcbkptlist
deleted file mode 100644
index 05301bc..0000000
--- a/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/xcuserdata/acondit.xcuserdatad/xcdebugger/Breakpoints.xcbkptlist
+++ /dev/null
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Bucket
-   type = "1"
-   version = "1.0">
-</Bucket>
diff --git a/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/xcuserdata/acondit.xcuserdatad/xcschemes/ANTLR.xcscheme b/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/xcuserdata/acondit.xcuserdatad/xcschemes/ANTLR.xcscheme
deleted file mode 100644
index 0b76a62..0000000
--- a/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/xcuserdata/acondit.xcuserdatad/xcschemes/ANTLR.xcscheme
+++ /dev/null
@@ -1,82 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Scheme
-   version = "1.3">
-   <BuildAction
-      parallelizeBuildables = "YES"
-      buildImplicitDependencies = "NO">
-      <BuildActionEntries>
-         <BuildActionEntry
-            buildForTesting = "NO"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "1AE72317134E860B001C3F35"
-               BuildableName = "ANTLR.framework"
-               BlueprintName = "ANTLR"
-               ReferencedContainer = "container:ANTLR.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "NO"
-            buildForProfiling = "NO"
-            buildForArchiving = "NO"
-            buildForAnalyzing = "NO">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "1AE7232C134E860B001C3F35"
-               BuildableName = "ANTLRTests.octest"
-               BlueprintName = "ANTLRTests"
-               ReferencedContainer = "container:ANTLR.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-      </BuildActionEntries>
-   </BuildAction>
-   <TestAction
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.GDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.GDB"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      buildConfiguration = "Debug">
-      <Testables>
-         <TestableReference
-            skipped = "NO">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "1AE7232C134E860B001C3F35"
-               BuildableName = "ANTLRTests.octest"
-               BlueprintName = "ANTLRTests"
-               ReferencedContainer = "container:ANTLR.xcodeproj">
-            </BuildableReference>
-         </TestableReference>
-      </Testables>
-   </TestAction>
-   <LaunchAction
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.GDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.GDB"
-      displayScaleIsEnabled = "NO"
-      displayScale = "1.00"
-      launchStyle = "0"
-      useCustomWorkingDirectory = "NO"
-      buildConfiguration = "Debug">
-      <AdditionalOptions>
-      </AdditionalOptions>
-   </LaunchAction>
-   <ProfileAction
-      displayScaleIsEnabled = "NO"
-      displayScale = "1.00"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      savedToolIdentifier = ""
-      useCustomWorkingDirectory = "NO"
-      buildConfiguration = "Release">
-   </ProfileAction>
-   <AnalyzeAction
-      buildConfiguration = "Debug">
-   </AnalyzeAction>
-   <ArchiveAction
-      buildConfiguration = "Release"
-      revealArchiveInOrganizer = "YES">
-   </ArchiveAction>
-</Scheme>
diff --git a/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/xcuserdata/acondit.xcuserdatad/xcschemes/xcschememanagement.plist b/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/xcuserdata/acondit.xcuserdatad/xcschemes/xcschememanagement.plist
deleted file mode 100644
index 348d7aa..0000000
--- a/runtime/ObjC/Framework/ANTLR/ANTLR.xcodeproj/xcuserdata/acondit.xcuserdatad/xcschemes/xcschememanagement.plist
+++ /dev/null
@@ -1,132 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>SchemeUserState</key>
-	<dict>
-		<key>ANTLR.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>0</integer>
-		</dict>
-		<key>ANTLRTests.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>1</integer>
-		</dict>
-		<key>Fuzzy.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>3</integer>
-		</dict>
-		<key>LL-start.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>6</integer>
-		</dict>
-		<key>combined.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>2</integer>
-		</dict>
-		<key>hoistedPredicates.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>4</integer>
-		</dict>
-		<key>lexertest-simple.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>5</integer>
-		</dict>
-		<key>polydiff.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>7</integer>
-		</dict>
-		<key>scopes.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>8</integer>
-		</dict>
-		<key>simplecTreeParser.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>9</integer>
-		</dict>
-		<key>treeparser.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>10</integer>
-		</dict>
-		<key>treerewrite.xcscheme</key>
-		<dict>
-			<key>orderHint</key>
-			<integer>11</integer>
-		</dict>
-	</dict>
-	<key>SuppressBuildableAutocreation</key>
-	<dict>
-		<key>1A63BC60134F5DAB002EDFB4</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1A63BD31134F5F1E002EDFB4</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1A63BD3E134F5F36002EDFB4</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1A63BD4B134F5F43002EDFB4</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1A63BD58134F5F4D002EDFB4</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1A63BD65134F5F5E002EDFB4</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1A63BD72134F5F67002EDFB4</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1A63BD7F134F5F71002EDFB4</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1A63BDD3134F6233002EDFB4</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1A63BDFB134FB75E002EDFB4</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1AE72317134E860B001C3F35</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-		<key>1AE7232C134E860B001C3F35</key>
-		<dict>
-			<key>primary</key>
-			<true/>
-		</dict>
-	</dict>
-</dict>
-</plist>
diff --git a/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests-Info.plist b/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests-Info.plist
deleted file mode 100644
index 4814b62..0000000
--- a/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests-Info.plist
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>CFBundleDevelopmentRegion</key>
-	<string>en</string>
-	<key>CFBundleExecutable</key>
-	<string>${EXECUTABLE_NAME}</string>
-	<key>CFBundleIdentifier</key>
-	<string>AMKS.${PRODUCT_NAME:rfc1034identifier}</string>
-	<key>CFBundleInfoDictionaryVersion</key>
-	<string>6.0</string>
-	<key>CFBundlePackageType</key>
-	<string>BNDL</string>
-	<key>CFBundleShortVersionString</key>
-	<string>1.0</string>
-	<key>CFBundleSignature</key>
-	<string>????</string>
-	<key>CFBundleVersion</key>
-	<string>1</string>
-</dict>
-</plist>
diff --git a/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests-Prefix.pch b/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests-Prefix.pch
deleted file mode 100644
index 9d05c98..0000000
--- a/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests-Prefix.pch
+++ /dev/null
@@ -1,7 +0,0 @@
-//
-// Prefix header for all source files of the 'ANTLRTests' target in the 'ANTLRTests' project
-//
-
-#ifdef __OBJC__
-    #import <Cocoa/Cocoa.h>
-#endif
diff --git a/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests.h b/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests.h
deleted file mode 100644
index a4b4456..0000000
--- a/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests.h
+++ /dev/null
@@ -1,17 +0,0 @@
-//
-//  ANTLRTests.h
-//  ANTLRTests
-//
-//  Created by Alan Condit on 4/7/11.
-//  Copyright 2011 Alan's MachineWorks. All rights reserved.
-//
-
-#import <SenTestingKit/SenTestingKit.h>
-
-
-@interface ANTLRTests : SenTestCase {
-@private
-
-}
-
-@end
diff --git a/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests.m b/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests.m
deleted file mode 100644
index c0386a0..0000000
--- a/runtime/ObjC/Framework/ANTLR/ANTLRTests/ANTLRTests.m
+++ /dev/null
@@ -1,28 +0,0 @@
-//
-//  ANTLRTests.m
-//  ANTLRTests
-//
-//  Created by Alan Condit on 4/7/11.
-//  Copyright 2011 Alan's MachineWorks. All rights reserved.
-//
-
-#import "ANTLRTests.h"
-
-
-@implementation ANTLRTests
-
-- (void)setUp
-{
-    [super setUp];
-
-    // Set-up code here.
-}
-
-- (void)tearDown
-{
-    // Tear-down code here.
-
-    [super tearDown];
-}
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/misc/ANTLRFastQueueTest.h b/runtime/ObjC/Framework/test/runtime/misc/ANTLRFastQueueTest.h
deleted file mode 100644
index eb85a2d..0000000
--- a/runtime/ObjC/Framework/test/runtime/misc/ANTLRFastQueueTest.h
+++ /dev/null
@@ -1,24 +0,0 @@
-//
-//  ANTLRFastQueueTest.h
-//  ANTLR
-//
-//  Created by Ian Michell on 13/05/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import <SenTestingKit/SenTestingKit.h>
-
-
-@interface ANTLRFastQueueTest : SenTestCase {
-
-}
-
--(void) testInit;
--(void) testAddAndGet;
--(void) testInvalidElementIndex;
--(void) testHead;
--(void) testClear;
--(void) testDescription;
--(void) testRemove;
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/misc/ANTLRFastQueueTest.m b/runtime/ObjC/Framework/test/runtime/misc/ANTLRFastQueueTest.m
deleted file mode 100644
index 74508a7..0000000
--- a/runtime/ObjC/Framework/test/runtime/misc/ANTLRFastQueueTest.m
+++ /dev/null
@@ -1,103 +0,0 @@
-//
-//  ANTLRFastQueueTest.m
-//  ANTLR
-//
-//  Created by Ian Michell on 13/05/2010.
-//  Copyright 2010 Ian Michell and Alan Condit. All rights reserved.
-//
-
-#import "ANTLRFastQueueTest.h"
-#import "ANTLRFastQueue.h"
-#import "ANTLRError.h"
-#import "ANTLRRuntimeException.h"
-
-@implementation ANTLRFastQueueTest
-
--(void) testInit
-{
-	ANTLRFastQueue *queue = [[ANTLRFastQueue newANTLRFastQueue] retain];
-	STAssertNotNil(queue, @"Queue was not created and was nil");
-	[queue release];
-}
-
--(void) testAddAndGet
-{
-	ANTLRFastQueue *queue = [[ANTLRFastQueue newANTLRFastQueue] retain];
-	STAssertNotNil(queue, @"Queue was not created and was nil");
-	[queue addObject:@"My String"];
-	STAssertTrue([[queue objectAtIndex:0] isKindOfClass:[NSString class]], @"First object is not a NSString");
-	STAssertEquals([queue objectAtIndex:0], @"My String", @"Object at index zero is invalid");
-	STAssertTrue([queue size] == 1, @"Queue is the wrong size: %d", [queue size]);
-	[queue release];
-}
-
--(void) testInvalidElementIndex
-{
-    //ANTLRRuntimeException *ANTLRNoSuchElementException = [ANTLRNoSuchElementException newException:@"No such element exception"];
-    id retVal;
-	ANTLRFastQueue *queue = [[ANTLRFastQueue newANTLRFastQueue] retain];
-	STAssertNotNil(queue, @"Queue was not created and was nil");
-	@try
-	{
-		retVal = [queue objectAtIndex:100];
-	}
-	@catch (ANTLRNoSuchElementException *e)
-	{
-		STAssertTrue([[e name] isEqualTo:@"ANTLRNoSuchElementException"], @"Exception was not type: ANTLRNoSuchElementException -- %@", [e name]);
-		return;
-	}
-	STFail(@"Exception ANTLRNoSuchElementException was not thrown -- %@", [retVal name]);
-    [queue release];
-}
-
--(void) testHead
-{
-	ANTLRFastQueue *queue = [[ANTLRFastQueue newANTLRFastQueue] retain];
-	STAssertNotNil(queue, @"Queue was not created and was nil");
-	[queue addObject:@"Item 1"];
-	[queue addObject:@"Item 2"];
-	[queue addObject:@"Item 3"];
-	id head = [queue head];
-	STAssertNotNil(head, @"Object returned from head is nil");
-	STAssertEquals(head, @"Item 1", @"Object returned was not first item in");
-	[queue release];
-}
-
--(void) testClear
-{
-	ANTLRFastQueue *queue = [[ANTLRFastQueue newANTLRFastQueue] retain];
-	STAssertNotNil(queue, @"Queue was not created and was nil");
-	[queue addObject:@"Item 1"];
-	[queue addObject:@"Item 2"];
-	[queue addObject:@"Item 3"];
-	STAssertTrue([queue size] == 3, @"Queue was too small, was: %d expected 3", [queue size]);
-	[queue reset];
-	STAssertTrue([queue size] == 0, @"Queue is not empty, it's still %d", [queue size]);
-	[queue release];
-}
-
--(void) testDescription
-{
-	ANTLRFastQueue *queue = [[ANTLRFastQueue newANTLRFastQueue] retain];
-	STAssertNotNil(queue, @"Queue was not created and was nil");
-	[queue addObject:@"My"];
-	[queue addObject:@"String"];
-	STAssertTrue([[queue description] isEqualToString:@"My String"], @"Queue description was not right, got: \"%@\" expected: \"My String\"", [queue description]);
-	[queue release];
-}
-
--(void) testRemove
-{
-	ANTLRFastQueue *queue = [[ANTLRFastQueue newANTLRFastQueue] retain];
-	STAssertNotNil(queue, @"Queue was not created and was nil");
-	[queue addObject:@"My"];
-	[queue addObject:@"String"];
-	STAssertTrue([queue size] == 2, @"Queue not the correct size, was: %d expected 2", [queue size]);
-	[queue remove];
-	STAssertTrue([queue size] == 1, @"Queue not the correct size, was %d expected 1", [queue size]);
-	[queue remove]; // test that the queue is reset when we remove the last object...
-	STAssertTrue([queue size] == 0, @"Queue was not reset, when we hit the buffer, was still %d", [queue size]);
-	[queue release];
-}
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/misc/ANTLRIntArrayTest.h b/runtime/ObjC/Framework/test/runtime/misc/ANTLRIntArrayTest.h
deleted file mode 100644
index 1dffb23..0000000
--- a/runtime/ObjC/Framework/test/runtime/misc/ANTLRIntArrayTest.h
+++ /dev/null
@@ -1,21 +0,0 @@
-//
-//  ANTLRIntArrayTest.h
-//  ANTLR
-//
-//  Created by Ian Michell on 13/05/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import <SenTestingKit/SenTestingKit.h>
-
-
-@interface ANTLRIntArrayTest : SenTestCase
-{
-
-}
-
--(void) testAdd;
--(void) testPushPop;
--(void) testClearAndAdd;
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/misc/ANTLRIntArrayTest.m b/runtime/ObjC/Framework/test/runtime/misc/ANTLRIntArrayTest.m
deleted file mode 100644
index a3edc20..0000000
--- a/runtime/ObjC/Framework/test/runtime/misc/ANTLRIntArrayTest.m
+++ /dev/null
@@ -1,47 +0,0 @@
-//
-//  ANTLRIntArrayTest.m
-//  ANTLR
-//
-//  Created by Ian Michell on 13/05/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import "ANTLRIntArrayTest.h"
-#import "ANTLRIntArray.h"
-
-@implementation ANTLRIntArrayTest
-
--(void) testAdd
-{
-	ANTLRIntArray *intArray = [ANTLRIntArray newArrayWithLen:10];
-	[intArray addInteger:1];
-	STAssertTrue([intArray count] == 1, @"Int array should be of size 1");
-	STAssertTrue([intArray integerAtIndex:0] == 1, @"First item in int array should be 1");
-	[intArray release];
-}
-
--(void) testPushPop
-{
-	ANTLRIntArray *intArray = [ANTLRIntArray newArrayWithLen:10];
-	for (NSInteger i = 0; i < 10; i++)
-	{
-		[intArray push:i + 1];
-	}
-	NSInteger popped = [intArray pop];
-	NSLog(@"Popped value: %d", popped);
-	STAssertTrue(popped == 10, @"Pop should pull the last element out, which should be 10 was: %d", popped);
-	[intArray release];
-}
-
--(void) testClearAndAdd
-{
-	ANTLRIntArray *intArray = [ANTLRIntArray newArrayWithLen:10];
-	[intArray addInteger:1];
-	STAssertTrue([intArray count] == 1, @"Int array should be of size 1");
-	STAssertTrue([intArray integerAtIndex:0] == 1, @"First item in int array should be 1");
-	[intArray reset];
-	STAssertTrue([intArray count] == 0, @"Array size should be 0");
-	[intArray release];
-}
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/recognizer/ANTLRRecognizerTest.h b/runtime/ObjC/Framework/test/runtime/recognizer/ANTLRRecognizerTest.h
deleted file mode 100755
index c20897d..0000000
--- a/runtime/ObjC/Framework/test/runtime/recognizer/ANTLRRecognizerTest.h
+++ /dev/null
@@ -1,16 +0,0 @@
-//
-//  ANTLRRecognizerTest.h
-//  ANTLR
-//
-//  Created by Ian Michell on 02/07/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import <SenTestingKit/SenTestingKit.h>
-
-
-@interface ANTLRRecognizerTest : SenTestCase {
-
-}
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/recognizer/ANTLRRecognizerTest.m b/runtime/ObjC/Framework/test/runtime/recognizer/ANTLRRecognizerTest.m
deleted file mode 100755
index f857107..0000000
--- a/runtime/ObjC/Framework/test/runtime/recognizer/ANTLRRecognizerTest.m
+++ /dev/null
@@ -1,14 +0,0 @@
-//
-//  ANTLRRecognizerTest.m
-//  ANTLR
-//
-//  Created by Ian Michell on 02/07/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import "ANTLRRecognizerTest.h"
-
-
-@implementation ANTLRRecognizerTest
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.h b/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.h
deleted file mode 100644
index 77f028b..0000000
--- a/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.h
+++ /dev/null
@@ -1,25 +0,0 @@
-//
-//  ANTLRCommonTokenTest.h
-//  ANTLR
-//
-//  Created by Ian Michell on 25/05/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import <SenTestingKit/SenTestingKit.h>
-
-
-@interface ANTLRCommonTokenTest : SenTestCase
-{
-
-}
-
--(void) test01InitAndRelease;
--(void) test02GetEOFToken;
--(void) test03InitWithTokenType;
--(void) test04InitWithTokenTypeAndText;
--(void) test05InitWithCharStream;
--(void) test06InitWithToken;
--(void) test07TokenDescription;
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.m b/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.m
deleted file mode 100644
index e945c5d..0000000
--- a/runtime/ObjC/Framework/test/runtime/token/ANTLRCommonTokenTest.m
+++ /dev/null
@@ -1,98 +0,0 @@
-//
-//  ANTLRCommonTokenTest.m
-//  ANTLR
-//
-//  Created by Ian Michell on 25/05/2010.
-//  Copyright 2010 Ian Michell and Alan Condit. All rights reserved.
-//
-
-#import "ANTLRCommonTokenTest.h"
-#import "ANTLRCommonToken.h"
-#import "ANTLRStringStream.h"
-
-@implementation ANTLRCommonTokenTest
-
--(void) test01InitAndRelease
-{
-	ANTLRCommonToken *token = [[ANTLRCommonToken newToken] retain];
-	STAssertNotNil(token, @"Token was nil");
-	[token release];
-}
-
--(void) test02GetEOFToken
-{
-	ANTLRCommonToken *token = [[ANTLRCommonToken eofToken] retain];
-	STAssertNotNil(token, @"Token was nil");
-	STAssertEquals(token.type, (NSInteger)ANTLRTokenTypeEOF, @"Token was not of type ANTLRTokenTypeEOF");
-	[token release];
-}
-
--(void) test03InitWithTokenType
-{
-	ANTLRCommonToken *token = [[ANTLRCommonToken newToken:ANTLRTokenTypeUP] retain];
-	token.text = @"<UP>";
-	STAssertNotNil(token, @"Token was nil");
-	STAssertEquals(token.type, (NSInteger)ANTLRTokenTypeUP, @"Token was not of type ANTLRTokenTypeUP");
-	STAssertNotNil(token.text, @"Token text was nil, was expecting <UP>");
-	STAssertTrue([token.text isEqualToString:@"<UP>"], @"Token text was not <UP> was instead: %@", token.text);
-	[token release];
-}
-
--(void) test04InitWithTokenTypeAndText
-{
-	ANTLRCommonToken *token = [[ANTLRCommonToken newToken:ANTLRTokenTypeUP Text:@"<UP>"] retain];
-	STAssertNotNil(token, @"Token was nil");
-	STAssertEquals(token.type, (NSInteger)ANTLRTokenTypeUP, @"Token was not of type ANTLRTokenTypeUP");
-	STAssertNotNil(token.text, @"Token text was nil, was expecting <UP>");
-	STAssertTrue([token.text isEqualToString:@"<UP>"], @"Token text was not <UP> was instead: %@", token.text);
-	[token release];
-}
-
--(void) test05InitWithCharStream
-{
-	ANTLRStringStream *stream = [[ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"] retain];
-	ANTLRCommonToken *token = [[ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5] retain];
-	STAssertNotNil(token, @"Token was nil");
-	STAssertEquals(token.type, (NSInteger)555, @"Token was not of type 555"); // Nice random type number
-	STAssertNotNil(token.text, @"Token text was nil, was expecting ||");
-	STAssertTrue([token.text isEqualToString:@"||"], @"Token text was not || was instead: %@", token.text);
-	[token release];
-    [stream release];
-}
-
--(void) test06InitWithToken
-{
-	ANTLRStringStream *stream = [[ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"] retain];
-	ANTLRCommonToken *token = [[ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5] retain];
-	STAssertNotNil(token, @"Token was nil");
-	STAssertEquals(token.type, (NSInteger)555, @"Token was not of type 555"); // Nice random type number
-	STAssertNotNil(token.text, @"Token text was nil, was expecting ||");
-	STAssertTrue([token.text isEqualToString:@"||"], @"Token text was not || was instead: %@", token.text);
-
-	ANTLRCommonToken *newToken = [[ANTLRCommonToken newTokenWithToken:token] retain];
-	STAssertNotNil(newToken, @"New token is nil!");
-	STAssertEquals(newToken.type, token.type, @"Tokens types do not match %d:%d!", newToken.type, token.type);
-	STAssertEquals(newToken.line, token.line, @"Token lines do not match!");
-	STAssertEquals(newToken.index, token.index, @"Token indexes do not match");
-	STAssertEquals(newToken.channel, token.channel, @"Token channels are not the same");
-	STAssertEquals(newToken.charPositionInLine, token.charPositionInLine, @"Token char positions in lines do not match");
-	STAssertEquals(newToken.startIndex, token.startIndex, @"Token start positions do not match");
-	STAssertEquals(newToken.stopIndex, token.stopIndex, @"Token stop positions do not match");
-	STAssertTrue([newToken.text isEqualToString:token.text], @"Token text does not match!");
-	[token release];
-	[newToken release];
-    [stream release];
-}
-
--(void) test07TokenDescription
-{
-    NSString *aDescription;
-	ANTLRStringStream *stream = [[ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"] retain];
-	ANTLRCommonToken *token = [[ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5] retain];
-    aDescription = [token description];
-	STAssertTrue([aDescription isEqualToString:@"[@0, 4:5='||',<555>,0:0]"], @"String description for token is not correct! got %@", aDescription);
-    [token release];
-    [stream release];
-}
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonErrorNodeTest.h b/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonErrorNodeTest.h
deleted file mode 100755
index 861bf36..0000000
--- a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonErrorNodeTest.h
+++ /dev/null
@@ -1,16 +0,0 @@
-//
-//  ANTLRCommonErrorNodeTest.h
-//  ANTLR
-//
-//  Created by Ian Michell on 10/06/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import <SenTestingKit/SenTestingKit.h>
-
-
-@interface ANTLRCommonErrorNodeTest : SenTestCase {
-
-}
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonErrorNodeTest.m b/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonErrorNodeTest.m
deleted file mode 100755
index b5d1c8a..0000000
--- a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonErrorNodeTest.m
+++ /dev/null
@@ -1,14 +0,0 @@
-//
-//  ANTLRCommonErrorNodeTest.m
-//  ANTLR
-//
-//  Created by Ian Michell on 10/06/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import "ANTLRCommonErrorNodeTest.h"
-
-
-@implementation ANTLRCommonErrorNodeTest
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeAdaptorTest.h b/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeAdaptorTest.h
deleted file mode 100755
index 7326675..0000000
--- a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeAdaptorTest.h
+++ /dev/null
@@ -1,16 +0,0 @@
-//
-//  ANTLRCommonTreeAdaptorTest.h
-//  ANTLR
-//
-//  Created by Ian Michell on 10/06/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import <SenTestingKit/SenTestingKit.h>
-
-
-@interface ANTLRCommonTreeAdaptorTest : SenTestCase {
-
-}
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeAdaptorTest.m b/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeAdaptorTest.m
deleted file mode 100755
index 9c9a7bb..0000000
--- a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeAdaptorTest.m
+++ /dev/null
@@ -1,14 +0,0 @@
-//
-//  ANTLRCommonTreeAdaptorTest.m
-//  ANTLR
-//
-//  Created by Ian Michell on 10/06/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import "ANTLRCommonTreeAdaptorTest.h"
-
-
-@implementation ANTLRCommonTreeAdaptorTest
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeTest.h b/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeTest.h
deleted file mode 100644
index 36d23b3..0000000
--- a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeTest.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  ANTLRCommonTreeTest.h
-//  ANTLR
-//
-//  Created by Ian Michell on 26/05/2010.
-//  Copyright 2010 Ian Michell and Alan Condit. All rights reserved.
-//
-
-#import <SenTestingKit/SenTestingKit.h>
-
-
-@interface ANTLRCommonTreeTest : SenTestCase
-{
-}
-
--(void) test01InitAndRelease;
--(void) test02InitWithTree;
--(void) test03WithToken;
--(void) test04InvalidTreeNode;
--(void) test05InitWithCommonTreeNode;
--(void) test06CopyTree;
--(void) test07Description;
--(void) test08Text;
--(void) test09AddChild;
--(void) test10AddChildren;
--(void) test11AddSelfAsChild;
--(void) test12AddEmptyChildWithNoChildren;
--(void) test13AddEmptyChildWithChildren;
--(void) test14ChildAtIndex;
--(void) test15SetChildAtIndex;
--(void) test16GetAncestor;
--(void) test17FirstChildWithType;
--(void) test18SanityCheckParentAndChildIndexesForParentTree;
--(void) test19DeleteChild;
--(void) test20TreeDescriptions;
--(void) test21ReplaceChildrenAtIndexWithNoChildren;
--(void) test22ReplaceChildrenAtIndex;
--(void) test23ReplaceChildrenAtIndexWithChild;
--(void) test24ReplacechildrenAtIndexWithLessChildren;
--(void) test25ReplacechildrenAtIndexWithMoreChildren;
-
-@end
diff --git a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeTest.m b/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeTest.m
deleted file mode 100644
index b944721..0000000
--- a/runtime/ObjC/Framework/test/runtime/tree/ANTLRCommonTreeTest.m
+++ /dev/null
@@ -1,555 +0,0 @@
-//
-//  ANTLRCommonTreeTest.m
-//  ANTLR
-//
-//  Created by Ian Michell on 26/05/2010.
-//  Copyright 2010 Ian Michell. All rights reserved.
-//
-
-#import "ANTLRBaseTree.h"
-#import "ANTLRCommonTreeTest.h"
-#import "ANTLRStringStream.h"
-#import "ANTLRCommonTree.h"
-#import "ANTLRCommonToken.h"
-#import "ANTLRError.h"
-#import "ANTLRRuntimeException.h"
-
-@implementation ANTLRCommonTreeTest
-
--(void) test01InitAndRelease
-{
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTree];
-	STAssertNotNil(tree, @"Tree was nil");
-	// FIXME: It doesn't do anything else, perhaps initWithTree should set something somewhere, java says no though...
-    return;
-}
-
--(void) test02InitWithTree
-{
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTree];
-	STAssertNotNil(tree, @"Tree was nil");
-    if (tree != nil)
-        STAssertEquals([tree getType], (NSInteger)ANTLRTokenTypeInvalid, @"Tree should have an invalid token type, because it has no token");
-    // [tree release];
-    return;
-}
-
--(void) test03WithToken
-{
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	token.line = 1;
-	token.charPositionInLine = 4;
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-	STAssertNotNil(tree, @"Tree was nil");
-    if (tree != nil)
-        STAssertNotNil(tree.token, @"Tree with token was nil");
-    if (tree != nil && tree.token != nil) {
-        STAssertEquals((NSUInteger) tree.token.line, (NSUInteger)1, [NSString stringWithFormat:@"Tree should be at line 1, but was at %d", tree.token.line] );
-        STAssertEquals((NSUInteger) tree.token.charPositionInLine, (NSUInteger)4, [NSString stringWithFormat:@"Char position should be 1, but was at %d", tree.token.charPositionInLine]);
-        STAssertNotNil(((ANTLRCommonToken *)tree.token).text, @"Tree with token with text was nil");
-    }
-    if (tree != nil && tree.token != nil && tree.token.text != nil)
-        STAssertTrue([tree.token.text isEqualToString:@"||"], @"Text was not ||");
-	//[tree release];
-    return;
-}
-
--(void) test04InvalidTreeNode
-{
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:[ANTLRCommonToken invalidToken]];
-	STAssertNotNil(tree, @"Tree was nil");
-	STAssertEquals(tree.token.type, (NSInteger)ANTLRTokenTypeInvalid, @"Tree Token type was not ANTLRTokenTypeInvalid");
-	//[tree release];
-    return;
-}
-
--(void) test05InitWithCommonTreeNode
-{
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-	STAssertNotNil(tree, @"Tree was nil");
-	STAssertNotNil(tree.token, @"Tree token was nil");
-	ANTLRCommonTree *newTree = [ANTLRCommonTree newTreeWithTree:tree];
-	STAssertNotNil(newTree, @"New tree was nil");
-	STAssertNotNil(newTree.token, @"New tree token was nil");
-	STAssertEquals(newTree.token, tree.token, @"Tokens did not match");
-	STAssertEquals(newTree.startIndex, tree.startIndex, @"Token start index did not match %d:%d", newTree.startIndex, tree.startIndex);
-	STAssertEquals(newTree.stopIndex, tree.stopIndex, @"Token stop index did not match %d:%d", newTree.stopIndex, tree.stopIndex);
-	//[stream release];
-	//[tree release];
-	//[newTree release];
-	//[token release];
-    return;
-}
-
--(void) test06CopyTree
-{
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-	STAssertNotNil(tree, @"Tree was nil");
-	ANTLRCommonTree *newTree = (ANTLRCommonTree *)[tree copyWithZone:nil];
-	STAssertTrue([newTree isKindOfClass:[ANTLRCommonTree class]], @"Copied tree was not an ANTLRCommonTree");
-	STAssertNotNil(newTree, @"New tree was nil");
-	// STAssertEquals(newTree.token, tree.token, @"Tokens did not match");
-	STAssertEquals(newTree.stopIndex, tree.stopIndex, @"Token stop index did not match");
-	STAssertEquals(newTree.startIndex, tree.startIndex, @"Token start index did not match");
-	//[stream release];
-	//[tree release];
-	//[newTree release];
-	// [token release];
-    return;
-}
-
--(void) test07Description
-{
-    NSString *aString;
-	ANTLRCommonTree *errorTree = [ANTLRCommonTree invalidNode];
-	STAssertNotNil(errorTree, @"Error tree node is nil");
-    if (errorTree != nil) {
-        aString = [errorTree description];
-        STAssertNotNil( aString, @"errorTree description returned nil");
-        if (aString != nil)
-            STAssertTrue([aString isEqualToString:@"<errornode>"], @"Not a valid error node description %@", aString);
-    }
-	//[errorTree release];
-
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeUP];
-	STAssertNotNil(tree, @"Tree is nil");
-    if (tree != nil)
-        STAssertNil([tree description], @"Tree description was not nil, was: %@", [tree description]);
-	//[tree release];
-
-	tree = [ANTLRCommonTree newTree];
-	STAssertNotNil(tree, @"Tree is nil");
-    if (tree != nil) {
-        aString = [tree description];
-        STAssertNotNil(aString, @"tree description returned nil");
-        if (aString != nil)
-            STAssertTrue([aString isEqualToString:@"nil"], @"Tree description was not empty", [tree description]);
-    }
-	//[tree release];
-
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	tree = [ANTLRCommonTree newTreeWithToken:token];
-	STAssertNotNil(tree, @"Tree node is nil");
-    aString = [tree description];
-    STAssertNotNil(aString, @"tree description returned nil");
-    if (aString != nil)
-        STAssertTrue([aString isEqualToString:@"||"], @"description was not || was instead %@", [tree description]);
-	//[tree release];
-    return;
-}
-
--(void) test08Text
-{
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-	STAssertNotNil(tree, @"Tree was nil");
-	STAssertTrue([tree.token.text isEqualToString:@"||"], @"Tree text was not valid, should have been || was %@", tree.token.text);
-	//[tree release];
-
-	// test nil (for line coverage)
-	tree = [ANTLRCommonTree newTree];
-	STAssertNotNil(tree, @"Tree was nil");
-	STAssertNil(tree.token.text, @"Tree text was not nil: %@", tree.token.text);
-    return;
-}
-
--(void) test09AddChild
-{
-	// Create a new tree
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTreeWithTokenType:555];
-    parent.token.line = 1;
-	parent.token.charPositionInLine = 1;
-
-	// Child tree
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	token.line = 1;
-	token.charPositionInLine = 4;
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-
-	// Add a child to the parent tree
-	[parent addChild:tree];
-
-
-	STAssertNotNil(parent, @"parent was nil");
-    if (parent != nil)
-        STAssertNotNil(parent.token, @"parent was nil");
-	STAssertEquals((NSInteger)parent.token.line, (NSInteger)1, @"Tree should be at line 1 but is %d", parent.token.line);
-	STAssertEquals((NSInteger)parent.token.charPositionInLine, (NSInteger)1, @"Char position should be 1 but is %d", parent.token.charPositionInLine);
-
-	STAssertEquals((NSInteger)[parent getChildCount], (NSInteger)1, @"There should be 1 child but there were %d", [parent getChildCount]);
-	STAssertEquals((NSInteger)[[parent getChild:0] getChildIndex], (NSInteger)0, @"Child index should be 0 was : %d", [[parent getChild:0] getChildIndex]);
-	STAssertEquals([[parent getChild:0] getParent], parent, @"Parent not set for child");
-
-	//[parent release];
-    return;
-}
-
--(void) test10AddChildren
-{
-	// Create a new tree
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-
-	// Child tree
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	token.line = 1;
-	token.charPositionInLine = 4;
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-
-	// Add a child to the parent tree
-	[parent addChild: tree];
-
-	ANTLRCommonTree *newParent = [ANTLRCommonTree newTree];
-	[newParent addChildren:parent.children];
-
-	STAssertEquals([newParent getChild:0], [parent getChild:0], @"Children did not match");
-    return;
-}
-
--(void) test11AddSelfAsChild
-{
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-	@try
-	{
-		[parent addChild:parent];
-	}
-	@catch (NSException *e)
-	{
-		STAssertTrue([[e name] isEqualToString:@"ANTLRIllegalArgumentException"], @"Got wrong kind of exception! %@", [e name]);
-		//[parent release];
-		return;
-	}
-	STFail(@"Did not get an exception when adding an empty child!");
-    return;
-}
-
--(void) test12AddEmptyChildWithNoChildren
-{
-	ANTLRCommonTree *emptyChild = [ANTLRCommonTree newTree];
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-	[parent addChild:emptyChild];
-	STAssertEquals((NSInteger)[parent getChildCount], (NSInteger)0, @"There were supposed to be no children!");
-	//[parent release];
-	//[emptyChild release];
-    return;
-}
-
--(void) test13AddEmptyChildWithChildren
-{
-	// Create a new tree
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-
-	// Child tree
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	token.line = 1;
-	token.charPositionInLine = 4;
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-
-	// Add a child to the parent tree
-	[parent addChild: tree];
-
-	ANTLRCommonTree *newParent = [ANTLRCommonTree newTree];
-	[newParent addChild:parent];
-
-	STAssertEquals((NSInteger)[newParent getChildCount], (NSInteger)1, @"Parent should only have 1 child: %d", [newParent getChildCount]);
-	STAssertEquals([newParent getChild:0], tree, @"Child was not the correct object.");
-	//[parent release];
-	//[newParent release];
-	//[tree release];
-    return;
-}
-
--(void) test14ChildAtIndex
-{
-	// Create a new tree
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-
-	// Child tree
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-
-	// Add a child to the parent tree
-	[parent addChild: tree];
-
-	STAssertEquals((NSInteger)[parent getChildCount], (NSInteger)1, @"There were either no children or more than 1: %d", [parent getChildCount]);
-
-	ANTLRCommonTree *child = [parent getChild:0];
-	STAssertNotNil(child, @"Child at index 0 should not be nil");
-	STAssertEquals(child, tree, @"Child and Original tree were not the same");
-	//[parent release];
-    return;
-}
-
--(void) test15SetChildAtIndex
-{
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-
-	// Child tree
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-
-
-	tree = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeUP];
-	tree.token.text = @"<UP>";
-	[parent addChild:tree];
-
-	STAssertTrue([parent getChild:0] == tree, @"Trees don't match");
-	[parent setChild:0 With:tree];
-
-	ANTLRCommonTree *child = [parent getChild:0];
-	STAssertTrue([parent getChildCount] == 1, @"There were either no children or more than 1: %d", [parent getChildCount]);
-	STAssertNotNil(child, @"Child at index 0 should not be nil");
-	STAssertEquals(child, tree, @"Child and Original tree were not the same");
-	//[parent release];
-    return;
-}
-
--(void) test16GetAncestor
-{
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeUP];
-	parent.token.text = @"<UP>";
-
-	ANTLRCommonTree *down = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeDOWN];
-	down.token.text = @"<DOWN>";
-
-	[parent addChild:down];
-
-	// Child tree
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-
-	[down addChild:tree];
-	STAssertTrue([tree hasAncestor:ANTLRTokenTypeUP], @"Should have an ancestor of type ANTLRTokenTypeUP");
-
-	ANTLRCommonTree *ancestor = [tree getAncestor:ANTLRTokenTypeUP];
-	STAssertNotNil(ancestor, @"Ancestor should not be nil");
-	STAssertEquals(ancestor, parent, @"Acenstors do not match");
-	//[parent release];
-    return;
-}
-
--(void) test17FirstChildWithType
-{
-	// Create a new tree
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-
-	ANTLRCommonTree *up = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeUP];
-	ANTLRCommonTree *down = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeDOWN];
-
-	[parent addChild:up];
-	[parent addChild:down];
-
-	ANTLRCommonTree *found = (ANTLRCommonTree *)[parent getFirstChildWithType:ANTLRTokenTypeDOWN];
-	STAssertNotNil(found, @"Child with type DOWN should not be nil");
-    if (found != nil) {
-        STAssertNotNil(found.token, @"Child token with type DOWN should not be nil");
-        if (found.token != nil)
-            STAssertEquals((NSInteger)found.token.type, (NSInteger)ANTLRTokenTypeDOWN, @"Token type was not correct, should be down!");
-    }
-	found = (ANTLRCommonTree *)[parent getFirstChildWithType:ANTLRTokenTypeUP];
-	STAssertNotNil(found, @"Child with type UP should not be nil");
-    if (found != nil) {
-        STAssertNotNil(found.token, @"Child token with type UP should not be nil");
-        if (found.token != nil)
-            STAssertEquals((NSInteger)found.token.type, (NSInteger)ANTLRTokenTypeUP, @"Token type was not correct, should be up!");
-    }
-	//[parent release];
-    return;
-}
-
--(void) test18SanityCheckParentAndChildIndexesForParentTree
-{
-	// Child tree
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTreeWithTokenType:555];
-	STAssertNotNil(tree, @"tree should not be nil");
-	@try
-	{
-		[tree sanityCheckParentAndChildIndexes];
-	}
-	@catch (NSException * e)
-	{
-		STFail(@"Exception was thrown and this is not what's right...");
-	}
-
-	BOOL passed = NO;
-	@try
-	{
-		[tree sanityCheckParentAndChildIndexes:parent At:0];
-	}
-	@catch (NSException * e)
-	{
-		STAssertTrue([[e name] isEqualToString:@"ANTLRIllegalStateException"], @"Exception was not an ANTLRIllegalStateException but was %@", [e name]);
-		passed = YES;
-	}
-	if (!passed)
-	{
-		STFail(@"An exception should have been thrown");
-	}
-
-	STAssertNotNil(parent, @"parent should not be nil");
-	[parent addChild:tree];
-	@try
-	{
-		[tree sanityCheckParentAndChildIndexes:parent At:0];
-	}
-	@catch (NSException * e)
-	{
-		STFail(@"No exception should have been thrown!");
-	}
-    return;
-}
-
--(void) test19DeleteChild
-{
-	// Child tree
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-	[parent addChild:tree];
-
-	ANTLRCommonTree *deletedChild = [parent deleteChild:0];
-	STAssertEquals(deletedChild, tree, @"Children do not match!");
-	STAssertEquals((NSInteger)[parent getChildCount], (NSInteger)0, @"Child count should be zero!");
-    return;
-}
-
--(void) test20TreeDescriptions
-{
-	// Child tree
-	ANTLRStringStream *stream = [ANTLRStringStream newANTLRStringStream:@"this||is||a||double||piped||separated||csv"];
-	ANTLRCommonToken *token = [ANTLRCommonToken newToken:stream Type:555 Channel:ANTLRTokenChannelDefault Start:4 Stop:5];
-	ANTLRCommonTree *tree = [ANTLRCommonTree newTreeWithToken:token];
-
-	// Description for tree
-	NSString *treeDesc = [tree treeDescription];
-    STAssertNotNil(treeDesc, @"Tree description should not be nil");
-    STAssertTrue([treeDesc isEqualToString:@"||"], @"Tree description was not || but rather %@", treeDesc);
-
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-	STAssertTrue([[parent treeDescription] isEqualToString:@"nil"], @"Tree description was not nil was %@", [parent treeDescription]);
-	[parent addChild:tree];
-	treeDesc = [parent treeDescription];
-	STAssertTrue([treeDesc isEqualToString:@"||"], @"Tree description was not || but was: %@", treeDesc);
-
-	// Test non empty parent
-	ANTLRCommonTree *down = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeDOWN];
-	down.token.text = @"<DOWN>";
-
-	[tree addChild:down];
-	treeDesc = [parent treeDescription];
-	STAssertTrue([treeDesc isEqualToString:@"(|| <DOWN>)"], @"Tree description was wrong expected (|| <DOWN>) but got: %@", treeDesc);
-    return;
-}
-
--(void) test21ReplaceChildrenAtIndexWithNoChildren
-{
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-	ANTLRCommonTree *parent2 = [ANTLRCommonTree newTree];
-	ANTLRCommonTree *child = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeDOWN];
-	child.token.text = @"<DOWN>";
-	[parent2 addChild:child];
-	@try
-	{
-		[parent replaceChildrenFrom:1 To:2 With:parent2];
-	}
-	@catch (NSException *ex)
-	{
-		STAssertTrue([[ex name] isEqualToString:@"ANTLRIllegalArgumentException"], @"Expected an illegal argument exception... Got instead: %@", [ex name]);
-		return;
-	}
-	STFail(@"Exception was not thrown when I tried to replace a child on a parent with no children");
-    return;
-}
-
--(void) test22ReplaceChildrenAtIndex
-{
-	ANTLRCommonTree *parent1 = [ANTLRCommonTree newTree];
-	ANTLRCommonTree *child1 = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeUP];
-	[parent1 addChild:child1];
-	ANTLRCommonTree *parent2 = [ANTLRCommonTree newTree];
-	ANTLRCommonTree *child2 = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeDOWN];
-	child2.token.text = @"<DOWN>";
-	[parent2 addChild:child2];
-
-	[parent2 replaceChildrenFrom:0 To:0 With:parent1];
-
-	STAssertEquals([parent2 getChild:0], child1, @"Child for parent 2 should have been from parent 1");
-    return;
-}
-
--(void) test23ReplaceChildrenAtIndexWithChild
-{
-	ANTLRCommonTree *replacement = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeUP];
-	replacement.token.text = @"<UP>";
-	ANTLRCommonTree *parent = [ANTLRCommonTree newTree];
-	ANTLRCommonTree *child = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeDOWN];
-	child.token.text = @"<DOWN>";
-	[parent addChild:child];
-
-	[parent replaceChildrenFrom:0 To:0 With:replacement];
-
-	STAssertTrue([parent getChild:0] == replacement, @"Children do not match");
-    return;
-}
-
--(void) test24ReplacechildrenAtIndexWithLessChildren
-{
-	ANTLRCommonTree *parent1 = [ANTLRCommonTree newTree];
-	ANTLRCommonTree *child1 = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeUP];
-	[parent1 addChild:child1];
-
-	ANTLRCommonTree *parent2 = [ANTLRCommonTree newTree];
-
-	ANTLRCommonTree *child2 = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeEOF];
-	[parent2 addChild:child2];
-
-	ANTLRCommonTree *child3 = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeDOWN];
-	child2.token.text = @"<DOWN>";
-	[parent2 addChild:child3];
-
-	[parent2 replaceChildrenFrom:0 To:1 With:parent1];
-	STAssertEquals((NSInteger)[parent2 getChildCount], (NSInteger)1, @"Should have one child but has %d", [parent2 getChildCount]);
-	STAssertEquals([parent2 getChild:0], child1, @"Child for parent 2 should have been from parent 1");
-    return;
-}
-
--(void) test25ReplacechildrenAtIndexWithMoreChildren
-{
-	ANTLRCommonTree *parent1 = [ANTLRCommonTree newTree];
-	ANTLRCommonTree *child1 = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeUP];
-	[parent1 addChild:child1];
-	ANTLRCommonTree *child2 = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeEOF];
-	[parent1 addChild:child2];
-
-	ANTLRCommonTree *parent2 = [ANTLRCommonTree newTree];
-
-	ANTLRCommonTree *child3 = [ANTLRCommonTree newTreeWithTokenType:ANTLRTokenTypeDOWN];
-	child2.token.text = @"<DOWN>";
-	[parent2 addChild:child3];
-
-	[parent2 replaceChildrenFrom:0 To:0 With:parent1];
-	STAssertEquals((NSInteger)[parent2 getChildCount], (NSInteger)2, @"Should have one child but has %d", [parent2 getChildCount]);
-	STAssertEquals([parent2 getChild:0], child1, @"Child for parent 2 should have been from parent 1");
-	STAssertEquals([parent2 getChild:1], child2, @"An extra child (child2) should be in the children collection");
-    return;
-}
-
-@end

