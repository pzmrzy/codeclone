commit 7a8fea4cf1034997a4672ae0cbe1eb3ce1fdcd10
Author:     Terence Parr <parrt@antlr.org>
AuthorDate: Sat Dec 1 14:11:16 2012 -0800
Commit:     Terence Parr <parrt@antlr.org>
CommitDate: Sat Dec 1 14:11:16 2012 -0800

add error msg for .. in parser.

diff --git a/tool/src/main/antlr3/org/antlr/grammar/v3/ANTLR.g b/tool/src/main/antlr3/org/antlr/grammar/v3/ANTLR.g
index 335a643..94fc10b 100644
--- a/tool/src/main/antlr3/org/antlr/grammar/v3/ANTLR.g
+++ b/tool/src/main/antlr3/org/antlr/grammar/v3/ANTLR.g
@@ -800,9 +800,21 @@ ebnf
)
;

-range
-	:	c1=CHAR_LITERAL RANGE c2=CHAR_LITERAL
+range!
+	:	{grammarType == Grammar.LEXER}?=>
+	 	c1=CHAR_LITERAL RANGE c2=CHAR_LITERAL
-> ^(CHAR_RANGE[$c1,".."] $c1 $c2)
+	|	{grammarType != Grammar.LEXER &&
+	     Rule.getRuleType(currentRuleName) == Grammar.PARSER}?=> // range elsewhere is an error
+		(	t=TOKEN_REF r=RANGE TOKEN_REF
+		|	t=STRING_LITERAL r=RANGE STRING_LITERAL
+		|	t=CHAR_LITERAL r=RANGE CHAR_LITERAL
+		)
+		{
+		ErrorManager.syntaxError(
+			ErrorManager.MSG_RANGE_OP_ILLEGAL,grammar,$r,null,null);
+		}
+		-> $t // have to generate something for surrounding code, just return first token
;

terminal
diff --git a/tool/src/main/java/org/antlr/tool/ErrorManager.java b/tool/src/main/java/org/antlr/tool/ErrorManager.java
index e815af3..e3e9eba 100644
--- a/tool/src/main/java/org/antlr/tool/ErrorManager.java
+++ b/tool/src/main/java/org/antlr/tool/ErrorManager.java
@@ -41,7 +41,13 @@ import org.stringtemplate.v4.STGroupFile;
import org.stringtemplate.v4.misc.STMessage;

import java.lang.reflect.Field;
-import java.util.*;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+import java.util.Set;

/** Defines all the errors ANTLR can generator for both the tool and for
*  issues with a grammar.
@@ -181,6 +187,7 @@ public class ErrorManager {
public static final int MSG_CONFLICTING_OPTION_IN_TREE_FILTER = 167;
public static final int MSG_ILLEGAL_OPTION_VALUE = 168;
public static final int MSG_ALL_OPS_NEED_SAME_ASSOC = 169;
+	public static final int MSG_RANGE_OP_ILLEGAL = 170;

// GRAMMAR WARNINGS
public static final int MSG_GRAMMAR_NONDETERMINISM = 200; // A predicts alts 1,2
diff --git a/tool/src/main/resources/org/antlr/tool/templates/messages/languages/en.stg b/tool/src/main/resources/org/antlr/tool/templates/messages/languages/en.stg
index ea27ddc..7376ae8 100644
--- a/tool/src/main/resources/org/antlr/tool/templates/messages/languages/en.stg
+++ b/tool/src/main/resources/org/antlr/tool/templates/messages/languages/en.stg
@@ -228,6 +228,7 @@ WILDCARD_AS_ROOT(arg) ::= "Wildcard invalid as root; wildcard can itself be a tr
CONFLICTING_OPTION_IN_TREE_FILTER(arg,arg2) ::= "option <arg>=<arg2> conflicts with tree grammar filter mode"
ILLEGAL_OPTION_VALUE(arg, arg2) ::= "value '<arg2>' invalid for option <arg>"
ALL_OPS_NEED_SAME_ASSOC(arg) ::= "all operators of alt <alt> of left-recursive rule must have same associativity"
+RANGE_OP_ILLEGAL(arg) ::= "the .. range operator isn't allowed in parser rules"

// GRAMMAR WARNINGS


