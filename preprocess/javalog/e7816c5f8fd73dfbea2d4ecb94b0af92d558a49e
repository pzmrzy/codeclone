commit e7816c5f8fd73dfbea2d4ecb94b0af92d558a49e
Author:     Sam Harwell <sam@tunnelvisionlabs.com>
AuthorDate: Thu Dec 13 14:44:35 2012 -0600
Commit:     Sam Harwell <sam@tunnelvisionlabs.com>
CommitDate: Thu Dec 13 18:00:32 2012 -0600

Remove unused field BaseTest.lastTestFailed, unit tests can just use methods in org.junit.Assert directly

diff --git a/tool/src/test/java/org/antlr/test/BaseTest.java b/tool/src/test/java/org/antlr/test/BaseTest.java
index ea1e521..12c88ac 100644
--- a/tool/src/test/java/org/antlr/test/BaseTest.java
+++ b/tool/src/test/java/org/antlr/test/BaseTest.java
@@ -57,6 +57,7 @@ import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

+import static org.junit.Assert.*;

public abstract class BaseTest {
// -J-Dorg.antlr.test.BaseTest.level=FINE
@@ -83,9 +84,6 @@ public abstract class BaseTest {

public String tmpdir = null;

-    /** reset during setUp and set to true if we find a problem */
-    protected boolean lastTestFailed = false;
-
/** If error during parser execution, store stderr here; can't return
*  stdout and stderr.  This doesn't trap errors from running antlr.
*/
@@ -104,7 +102,6 @@ public abstract class BaseTest {

@Before
public void setUp() throws Exception {
-        lastTestFailed = false; // hope for the best, but set to true in asserts that fail
// new output dir for each test
tmpdir = new File(System.getProperty("java.io.tmpdir"),
"antlr-"+getClass().getName()+"-"+
@@ -979,23 +976,4 @@ public abstract class BaseTest {
System.out.println("Tree map looks like: " + nset.toString());
return nset.toString();
}
-
-    // override to track errors
-
-    public void assertEquals(String msg, Object a, Object b) { try {Assert.assertEquals(msg,a,b);} catch (Error e) {lastTestFailed=true; throw e;} }
-    public void assertEquals(Object a, Object b) { try {Assert.assertEquals(a,b);} catch (Error e) {lastTestFailed=true; throw e;} }
-    public void assertEquals(String msg, long a, long b) { try {Assert.assertEquals(msg,a,b);} catch (Error e) {lastTestFailed=true; throw e;} }
-    public void assertEquals(long a, long b) { try {Assert.assertEquals(a,b);} catch (Error e) {lastTestFailed=true; throw e;} }
-
-    public void assertTrue(String msg, boolean b) { try {Assert.assertTrue(msg,b);} catch (Error e) {lastTestFailed=true; throw e;} }
-    public void assertTrue(boolean b) { try {Assert.assertTrue(b);} catch (Error e) {lastTestFailed=true; throw e;} }
-
-    public void assertFalse(String msg, boolean b) { try {Assert.assertFalse(msg,b);} catch (Error e) {lastTestFailed=true; throw e;} }
-    public void assertFalse(boolean b) { try {Assert.assertFalse(b);} catch (Error e) {lastTestFailed=true; throw e;} }
-
-    public void assertNotNull(String msg, Object p) { try {Assert.assertNotNull(msg, p);} catch (Error e) {lastTestFailed=true; throw e;} }
-    public void assertNotNull(Object p) { try {Assert.assertNotNull(p);} catch (Error e) {lastTestFailed=true; throw e;} }
-
-    public void assertNull(String msg, Object p) { try {Assert.assertNull(msg, p);} catch (Error e) {lastTestFailed=true; throw e;} }
-    public void assertNull(Object p) { try {Assert.assertNull(p);} catch (Error e) {lastTestFailed=true; throw e;} }
}
diff --git a/tool/src/test/java/org/antlr/test/TestASTConstruction.java b/tool/src/test/java/org/antlr/test/TestASTConstruction.java
index 41fb566..8a652a2 100644
--- a/tool/src/test/java/org/antlr/test/TestASTConstruction.java
+++ b/tool/src/test/java/org/antlr/test/TestASTConstruction.java
@@ -30,6 +30,8 @@ package org.antlr.test;
import org.antlr.tool.Grammar;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestASTConstruction extends BaseTest {

/** Public default constructor used by TestRig */
diff --git a/tool/src/test/java/org/antlr/test/TestAttributes.java b/tool/src/test/java/org/antlr/test/TestAttributes.java
index 00eb996..bcbfe31 100644
--- a/tool/src/test/java/org/antlr/test/TestAttributes.java
+++ b/tool/src/test/java/org/antlr/test/TestAttributes.java
@@ -41,6 +41,8 @@ import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;

+import static org.junit.Assert.*;
+
/** Check the $x, $x.y attributes.  For checking the actual
*  translation, assume the Java target.  This is still a great test
*  for the semantics of the $x.y stuff regardless of the target.
diff --git a/tool/src/test/java/org/antlr/test/TestAutoAST.java b/tool/src/test/java/org/antlr/test/TestAutoAST.java
index b6c7ede..94eb472 100644
--- a/tool/src/test/java/org/antlr/test/TestAutoAST.java
+++ b/tool/src/test/java/org/antlr/test/TestAutoAST.java
@@ -30,6 +30,8 @@ package org.antlr.test;
import org.junit.Ignore;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestAutoAST extends BaseTest {
protected boolean debug = false;

diff --git a/tool/src/test/java/org/antlr/test/TestBufferedTreeNodeStream.java b/tool/src/test/java/org/antlr/test/TestBufferedTreeNodeStream.java
index 137bfb3..58e5b4b 100644
--- a/tool/src/test/java/org/antlr/test/TestBufferedTreeNodeStream.java
+++ b/tool/src/test/java/org/antlr/test/TestBufferedTreeNodeStream.java
@@ -34,6 +34,8 @@ import org.antlr.runtime.tree.Tree;
import org.antlr.runtime.tree.TreeNodeStream;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestBufferedTreeNodeStream extends TestTreeNodeStream {
// inherits tests; these methods make it use a new buffer

diff --git a/tool/src/test/java/org/antlr/test/TestCharDFAConversion.java b/tool/src/test/java/org/antlr/test/TestCharDFAConversion.java
index ec45996..c1af910 100644
--- a/tool/src/test/java/org/antlr/test/TestCharDFAConversion.java
+++ b/tool/src/test/java/org/antlr/test/TestCharDFAConversion.java
@@ -35,6 +35,8 @@ import org.junit.Test;

import java.util.List;

+import static org.junit.Assert.*;
+
public class TestCharDFAConversion extends BaseTest {

/** Public default constructor used by TestRig */
diff --git a/tool/src/test/java/org/antlr/test/TestCommonTokenStream.java b/tool/src/test/java/org/antlr/test/TestCommonTokenStream.java
index 863fa28..3a85a1f 100644
--- a/tool/src/test/java/org/antlr/test/TestCommonTokenStream.java
+++ b/tool/src/test/java/org/antlr/test/TestCommonTokenStream.java
@@ -33,6 +33,8 @@ import org.antlr.tool.Grammar;
import org.antlr.tool.Interpreter;
import org.junit.Test;

+import static org.junit.Assert.*;
+
/** This actually tests new (12/4/09) buffered but on-demand fetching stream */
public class TestCommonTokenStream extends BaseTest {
@Test public void testFirstToken() throws Exception {
diff --git a/tool/src/test/java/org/antlr/test/TestCompositeGrammars.java b/tool/src/test/java/org/antlr/test/TestCompositeGrammars.java
index cb13bff..cad4add 100644
--- a/tool/src/test/java/org/antlr/test/TestCompositeGrammars.java
+++ b/tool/src/test/java/org/antlr/test/TestCompositeGrammars.java
@@ -33,6 +33,8 @@ import org.junit.Test;

import java.io.File;

+import static org.junit.Assert.*;
+
public class TestCompositeGrammars extends BaseTest {
protected boolean debug = false;

diff --git a/tool/src/test/java/org/antlr/test/TestDFAConversion.java b/tool/src/test/java/org/antlr/test/TestDFAConversion.java
index b1462fe..b30bd20 100644
--- a/tool/src/test/java/org/antlr/test/TestDFAConversion.java
+++ b/tool/src/test/java/org/antlr/test/TestDFAConversion.java
@@ -38,6 +38,8 @@ import org.junit.Test;

import java.util.*;

+import static org.junit.Assert.*;
+
public class TestDFAConversion extends BaseTest {

@Test public void testA() throws Exception {
diff --git a/tool/src/test/java/org/antlr/test/TestDFAMatching.java b/tool/src/test/java/org/antlr/test/TestDFAMatching.java
index a4fb2fb..6b8dc7a 100644
--- a/tool/src/test/java/org/antlr/test/TestDFAMatching.java
+++ b/tool/src/test/java/org/antlr/test/TestDFAMatching.java
@@ -33,6 +33,8 @@ import org.antlr.runtime.ANTLRStringStream;
import org.antlr.tool.Grammar;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestDFAMatching extends BaseTest {

/** Public default constructor used by TestRig */
diff --git a/tool/src/test/java/org/antlr/test/TestFastQueue.java b/tool/src/test/java/org/antlr/test/TestFastQueue.java
index ff8aed1..fce3019 100644
--- a/tool/src/test/java/org/antlr/test/TestFastQueue.java
+++ b/tool/src/test/java/org/antlr/test/TestFastQueue.java
@@ -32,7 +32,7 @@ import org.junit.Test;

import java.util.NoSuchElementException;

-import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.*;

public class TestFastQueue {
@Test public void testQueueNoRemove() throws Exception {
diff --git a/tool/src/test/java/org/antlr/test/TestHeteroAST.java b/tool/src/test/java/org/antlr/test/TestHeteroAST.java
index 4078421..a9f694f 100644
--- a/tool/src/test/java/org/antlr/test/TestHeteroAST.java
+++ b/tool/src/test/java/org/antlr/test/TestHeteroAST.java
@@ -29,6 +29,8 @@ package org.antlr.test;

import org.junit.Test;

+import static org.junit.Assert.*;
+
/** Test hetero trees in parsers and tree parsers */
public class TestHeteroAST extends BaseTest {
protected boolean debug = false;
diff --git a/tool/src/test/java/org/antlr/test/TestInterpretedLexing.java b/tool/src/test/java/org/antlr/test/TestInterpretedLexing.java
index f0de1ce..6a3ab1e 100644
--- a/tool/src/test/java/org/antlr/test/TestInterpretedLexing.java
+++ b/tool/src/test/java/org/antlr/test/TestInterpretedLexing.java
@@ -35,6 +35,8 @@ import org.antlr.tool.Grammar;
import org.antlr.tool.Interpreter;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestInterpretedLexing extends BaseTest {

/*
diff --git a/tool/src/test/java/org/antlr/test/TestInterpretedParsing.java b/tool/src/test/java/org/antlr/test/TestInterpretedParsing.java
index a575139..1e2e910 100644
--- a/tool/src/test/java/org/antlr/test/TestInterpretedParsing.java
+++ b/tool/src/test/java/org/antlr/test/TestInterpretedParsing.java
@@ -34,6 +34,8 @@ import org.antlr.tool.Grammar;
import org.antlr.tool.Interpreter;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestInterpretedParsing extends BaseTest {
/** Public default constructor used by TestRig */
public TestInterpretedParsing() {
diff --git a/tool/src/test/java/org/antlr/test/TestIntervalSet.java b/tool/src/test/java/org/antlr/test/TestIntervalSet.java
index caf5c07..f6a9d00 100644
--- a/tool/src/test/java/org/antlr/test/TestIntervalSet.java
+++ b/tool/src/test/java/org/antlr/test/TestIntervalSet.java
@@ -31,6 +31,8 @@ import org.antlr.analysis.Label;
import org.antlr.misc.IntervalSet;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestIntervalSet extends BaseTest {

/** Public default constructor used by TestRig */
diff --git a/tool/src/test/java/org/antlr/test/TestJavaCodeGeneration.java b/tool/src/test/java/org/antlr/test/TestJavaCodeGeneration.java
index 50ea257..5a189cd 100644
--- a/tool/src/test/java/org/antlr/test/TestJavaCodeGeneration.java
+++ b/tool/src/test/java/org/antlr/test/TestJavaCodeGeneration.java
@@ -29,6 +29,8 @@ package org.antlr.test;

import org.junit.Test;

+import static org.junit.Assert.*;
+
/** General code generation testing; compilation and/or execution.
*  These tests are more about avoiding duplicate var definitions
*  etc... than testing a particular ANTLR feature.
diff --git a/tool/src/test/java/org/antlr/test/TestLeftRecursion.java b/tool/src/test/java/org/antlr/test/TestLeftRecursion.java
index f81ddf0..bf2f798 100644
--- a/tool/src/test/java/org/antlr/test/TestLeftRecursion.java
+++ b/tool/src/test/java/org/antlr/test/TestLeftRecursion.java
@@ -3,6 +3,8 @@ package org.antlr.test;
import org.junit.Ignore;
import org.junit.Test;

+import static org.junit.Assert.*;
+
/** */
@Ignore
public class TestLeftRecursion extends BaseTest {
diff --git a/tool/src/test/java/org/antlr/test/TestLexer.java b/tool/src/test/java/org/antlr/test/TestLexer.java
index 0b2651f..2e3265d 100644
--- a/tool/src/test/java/org/antlr/test/TestLexer.java
+++ b/tool/src/test/java/org/antlr/test/TestLexer.java
@@ -33,6 +33,8 @@ import org.stringtemplate.v4.ST;
import org.antlr.tool.Grammar;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestLexer extends BaseTest {
protected boolean debug = false;

diff --git a/tool/src/test/java/org/antlr/test/TestMessages.java b/tool/src/test/java/org/antlr/test/TestMessages.java
index e135f54..bede62d 100644
--- a/tool/src/test/java/org/antlr/test/TestMessages.java
+++ b/tool/src/test/java/org/antlr/test/TestMessages.java
@@ -37,6 +37,8 @@ import org.antlr.tool.Grammar;
import org.antlr.tool.GrammarSemanticsMessage;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestMessages extends BaseTest {

/** Public default constructor used by TestRig */
diff --git a/tool/src/test/java/org/antlr/test/TestNFAConstruction.java b/tool/src/test/java/org/antlr/test/TestNFAConstruction.java
index 4ff774e..05909f5 100644
--- a/tool/src/test/java/org/antlr/test/TestNFAConstruction.java
+++ b/tool/src/test/java/org/antlr/test/TestNFAConstruction.java
@@ -32,6 +32,8 @@ import org.antlr.tool.FASerializer;
import org.antlr.tool.Grammar;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestNFAConstruction extends BaseTest {

/** Public default constructor used by TestRig */
diff --git a/tool/src/test/java/org/antlr/test/TestRewriteAST.java b/tool/src/test/java/org/antlr/test/TestRewriteAST.java
index 7999112..a805ba3 100644
--- a/tool/src/test/java/org/antlr/test/TestRewriteAST.java
+++ b/tool/src/test/java/org/antlr/test/TestRewriteAST.java
@@ -35,6 +35,8 @@ import org.antlr.tool.GrammarSemanticsMessage;
import org.junit.Ignore;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestRewriteAST extends BaseTest {
protected boolean debug = false;

diff --git a/tool/src/test/java/org/antlr/test/TestRewriteTemplates.java b/tool/src/test/java/org/antlr/test/TestRewriteTemplates.java
index 4dc89f2..af0e1de 100644
--- a/tool/src/test/java/org/antlr/test/TestRewriteTemplates.java
+++ b/tool/src/test/java/org/antlr/test/TestRewriteTemplates.java
@@ -32,6 +32,8 @@ import org.antlr.codegen.CodeGenerator;
import org.antlr.tool.*;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestRewriteTemplates extends BaseTest {
protected boolean debug = false;

diff --git a/tool/src/test/java/org/antlr/test/TestSemanticPredicateEvaluation.java b/tool/src/test/java/org/antlr/test/TestSemanticPredicateEvaluation.java
index 72f8d02..6da7f31 100644
--- a/tool/src/test/java/org/antlr/test/TestSemanticPredicateEvaluation.java
+++ b/tool/src/test/java/org/antlr/test/TestSemanticPredicateEvaluation.java
@@ -29,6 +29,8 @@ package org.antlr.test;

import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestSemanticPredicateEvaluation extends BaseTest {
@Test public void testSimpleCyclicDFAWithPredicate() throws Exception {
String grammar =
diff --git a/tool/src/test/java/org/antlr/test/TestSemanticPredicates.java b/tool/src/test/java/org/antlr/test/TestSemanticPredicates.java
index f84a0ec..49aa75c 100644
--- a/tool/src/test/java/org/antlr/test/TestSemanticPredicates.java
+++ b/tool/src/test/java/org/antlr/test/TestSemanticPredicates.java
@@ -40,6 +40,8 @@ import java.util.List;
import java.util.Map;
import java.util.Set;

+import static org.junit.Assert.*;
+
public class TestSemanticPredicates extends BaseTest {

/** Public default constructor used by TestRig */
diff --git a/tool/src/test/java/org/antlr/test/TestSets.java b/tool/src/test/java/org/antlr/test/TestSets.java
index 6f21bd3..8a57af2 100644
--- a/tool/src/test/java/org/antlr/test/TestSets.java
+++ b/tool/src/test/java/org/antlr/test/TestSets.java
@@ -29,6 +29,8 @@ package org.antlr.test;

import org.junit.Test;

+import static org.junit.Assert.*;
+
/** Test the set stuff in lexer and parser */
public class TestSets extends BaseTest {
protected boolean debug = false;
diff --git a/tool/src/test/java/org/antlr/test/TestSymbolDefinitions.java b/tool/src/test/java/org/antlr/test/TestSymbolDefinitions.java
index 29f35bb..43bf93e 100644
--- a/tool/src/test/java/org/antlr/test/TestSymbolDefinitions.java
+++ b/tool/src/test/java/org/antlr/test/TestSymbolDefinitions.java
@@ -36,6 +36,8 @@ import org.junit.Test;

import java.util.*;

+import static org.junit.Assert.*;
+
public class TestSymbolDefinitions extends BaseTest {

/** Public default constructor used by TestRig */
diff --git a/tool/src/test/java/org/antlr/test/TestSyntacticPredicateEvaluation.java b/tool/src/test/java/org/antlr/test/TestSyntacticPredicateEvaluation.java
index 478194c..029d5be 100644
--- a/tool/src/test/java/org/antlr/test/TestSyntacticPredicateEvaluation.java
+++ b/tool/src/test/java/org/antlr/test/TestSyntacticPredicateEvaluation.java
@@ -29,6 +29,8 @@ package org.antlr.test;

import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestSyntacticPredicateEvaluation extends BaseTest {
@Test public void testTwoPredsWithNakedAlt() throws Exception {
String grammar =
diff --git a/tool/src/test/java/org/antlr/test/TestSyntaxErrors.java b/tool/src/test/java/org/antlr/test/TestSyntaxErrors.java
index c8d6428..8ceacea 100644
--- a/tool/src/test/java/org/antlr/test/TestSyntaxErrors.java
+++ b/tool/src/test/java/org/antlr/test/TestSyntaxErrors.java
@@ -30,6 +30,8 @@ package org.antlr.test;

import org.junit.Test;

+import static org.junit.Assert.*;
+
/** test runtime parse errors */
public class TestSyntaxErrors extends BaseTest {
@Test public void testLL2() throws Exception {
diff --git a/tool/src/test/java/org/antlr/test/TestTemplates.java b/tool/src/test/java/org/antlr/test/TestTemplates.java
index cb8d0f3..fd41c7a 100644
--- a/tool/src/test/java/org/antlr/test/TestTemplates.java
+++ b/tool/src/test/java/org/antlr/test/TestTemplates.java
@@ -40,6 +40,8 @@ import org.antlr.tool.GrammarSemanticsMessage;
import org.antlr.tool.Message;
import org.junit.Test;

+import static org.junit.Assert.*;
+
/** Test templates in actions; %... shorthands */
public class TestTemplates extends BaseTest {
private static final String LINE_SEP = System.getProperty("line.separator");
diff --git a/tool/src/test/java/org/antlr/test/TestTokenRewriteStream.java b/tool/src/test/java/org/antlr/test/TestTokenRewriteStream.java
index cc864ee..81a736b 100644
--- a/tool/src/test/java/org/antlr/test/TestTokenRewriteStream.java
+++ b/tool/src/test/java/org/antlr/test/TestTokenRewriteStream.java
@@ -34,6 +34,8 @@ import org.antlr.tool.Grammar;
import org.antlr.tool.Interpreter;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestTokenRewriteStream extends BaseTest {

/** Public default constructor used by TestRig */
diff --git a/tool/src/test/java/org/antlr/test/TestTopologicalSort.java b/tool/src/test/java/org/antlr/test/TestTopologicalSort.java
index 1a1455f..62cfebd 100644
--- a/tool/src/test/java/org/antlr/test/TestTopologicalSort.java
+++ b/tool/src/test/java/org/antlr/test/TestTopologicalSort.java
@@ -32,6 +32,8 @@ import org.junit.Test;

import java.util.List;

+import static org.junit.Assert.*;
+
/** Test topo sort in GraphNode. */
public class TestTopologicalSort extends BaseTest {
@Test
diff --git a/tool/src/test/java/org/antlr/test/TestTreeGrammarRewriteAST.java b/tool/src/test/java/org/antlr/test/TestTreeGrammarRewriteAST.java
index 5898a08..746fddc 100644
--- a/tool/src/test/java/org/antlr/test/TestTreeGrammarRewriteAST.java
+++ b/tool/src/test/java/org/antlr/test/TestTreeGrammarRewriteAST.java
@@ -35,6 +35,8 @@ import org.antlr.tool.Grammar;
import org.antlr.tool.GrammarSyntaxMessage;
import org.junit.Test;

+import static org.junit.Assert.*;
+
/** Tree rewrites in tree parsers are basically identical to rewrites
*  in a normal grammar except that the atomic element is a node not
*  a Token.  Tests here ensure duplication of nodes occurs properly
diff --git a/tool/src/test/java/org/antlr/test/TestTreeIterator.java b/tool/src/test/java/org/antlr/test/TestTreeIterator.java
index 33bfb2d..0803bc3 100644
--- a/tool/src/test/java/org/antlr/test/TestTreeIterator.java
+++ b/tool/src/test/java/org/antlr/test/TestTreeIterator.java
@@ -30,7 +30,7 @@ package org.antlr.test;
import org.antlr.runtime.tree.*;
import org.junit.Test;

-import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.*;

public class TestTreeIterator {
static final String[] tokens = new String[] {
diff --git a/tool/src/test/java/org/antlr/test/TestTreeNodeStream.java b/tool/src/test/java/org/antlr/test/TestTreeNodeStream.java
index 004d23b..f0ddcd1 100644
--- a/tool/src/test/java/org/antlr/test/TestTreeNodeStream.java
+++ b/tool/src/test/java/org/antlr/test/TestTreeNodeStream.java
@@ -32,6 +32,8 @@ import org.antlr.runtime.Token;
import org.antlr.runtime.tree.*;
import org.junit.Test;

+import static org.junit.Assert.*;
+
/** Test the tree node stream. */
public class TestTreeNodeStream extends BaseTest {

diff --git a/tool/src/test/java/org/antlr/test/TestTreeParsing.java b/tool/src/test/java/org/antlr/test/TestTreeParsing.java
index 9664dcb..4e81ebb 100644
--- a/tool/src/test/java/org/antlr/test/TestTreeParsing.java
+++ b/tool/src/test/java/org/antlr/test/TestTreeParsing.java
@@ -29,6 +29,8 @@ package org.antlr.test;

import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestTreeParsing extends BaseTest {
@Test public void testFlatList() throws Exception {
String grammar =
diff --git a/tool/src/test/java/org/antlr/test/TestTreeWizard.java b/tool/src/test/java/org/antlr/test/TestTreeWizard.java
index ebfd182..f8c9a7f 100644
--- a/tool/src/test/java/org/antlr/test/TestTreeWizard.java
+++ b/tool/src/test/java/org/antlr/test/TestTreeWizard.java
@@ -38,6 +38,7 @@ import java.util.HashMap;
import java.util.List;
import java.util.Map;

+import static org.junit.Assert.*;

public class TestTreeWizard extends BaseTest {
protected static final String[] tokens =
diff --git a/tool/src/test/java/org/antlr/test/TestTrees.java b/tool/src/test/java/org/antlr/test/TestTrees.java
index e9c79b2..c9b1d07 100644
--- a/tool/src/test/java/org/antlr/test/TestTrees.java
+++ b/tool/src/test/java/org/antlr/test/TestTrees.java
@@ -35,6 +35,8 @@ import org.antlr.runtime.tree.Tree;
import org.antlr.runtime.tree.TreeAdaptor;
import org.junit.Test;

+import static org.junit.Assert.*;
+
public class TestTrees extends BaseTest {
TreeAdaptor adaptor = new CommonTreeAdaptor();
protected boolean debug = false;

