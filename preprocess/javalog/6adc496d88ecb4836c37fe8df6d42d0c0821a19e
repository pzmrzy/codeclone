commit 6adc496d88ecb4836c37fe8df6d42d0c0821a19e
Author:     Mike Lischke <mike.lischke@gmail.com>
AuthorDate: Fri Nov 8 16:25:54 2013 +0100
Commit:     Mike Lischke <mike.lischke@gmail.com>
CommitDate: Fri Nov 8 16:25:54 2013 +0100

Re-added some casts that got lost during merge (plus some typo fixes).

diff --git a/runtime/C/src/antlr3collections.c b/runtime/C/src/antlr3collections.c
index 1e74222..9d79edd 100644
--- a/runtime/C/src/antlr3collections.c
+++ b/runtime/C/src/antlr3collections.c
@@ -2572,15 +2572,15 @@ sortToArray      (pANTLR3_TOPO topo)
return NULL;
}
// First we need a vector to populate with enough
-    // entries to accomodate the sorted list and another to accomodate
+    // entries to accommodate the sorted list and another to accommodate
// the maximum cycle we could detect which is all nodes such as 0->1->2->3->0
//
-    topo->sorted    = ANTLR3_MALLOC(topo->limit * sizeof(ANTLR3_UINT32));
+    topo->sorted    = (pANTLR3_UINT32)ANTLR3_MALLOC(topo->limit * sizeof(ANTLR3_UINT32));
if (topo->sorted == NULL)
{
return NULL;
}
-    topo->cycle     = ANTLR3_MALLOC(topo->limit * sizeof(ANTLR3_UINT32));
+    topo->cycle     = (pANTLR3_UINT32)ANTLR3_MALLOC(topo->limit * sizeof(ANTLR3_UINT32));
if (topo->cycle == NULL)
{
return NULL;
@@ -2687,7 +2687,7 @@ sortVector       (pANTLR3_TOPO topo, pANTLR3_VECTOR v)
// according to where we moved it last. Then we can just swap vector entries until
// we are done :-)
//
-    vIndex = ANTLR3_MALLOC(topo->limit * sizeof(ANTLR3_UINT32));
+    vIndex = (pANTLR3_UINT32)ANTLR3_MALLOC(topo->limit * sizeof(ANTLR3_UINT32));
if (vIndex == NULL)
{
// malloc failed

