commit 4485adf5a448f4e69b905daf718345319441c094
Author:     Sam Harwell <sam@tunnelvisionlabs.com>
AuthorDate: Tue Dec 11 23:02:34 2012 -0600
Commit:     Sam Harwell <sam@tunnelvisionlabs.com>
CommitDate: Wed Dec 12 01:40:51 2012 -0600

Add assertions that the compilation succeeded in BaseTest

diff --git a/tool/src/test/java/org/antlr/test/BaseTest.java b/tool/src/test/java/org/antlr/test/BaseTest.java
index fa9ad04..a5c3aec 100644
--- a/tool/src/test/java/org/antlr/test/BaseTest.java
+++ b/tool/src/test/java/org/antlr/test/BaseTest.java
@@ -197,11 +197,13 @@ public abstract class BaseTest {
String input,
boolean debug)
{
-		rawGenerateAndBuildRecognizer(grammarFileName,
+		boolean compiled = rawGenerateAndBuildRecognizer(grammarFileName,
grammarStr,
null,
lexerName,
debug);
+		Assert.assertTrue(compiled);
+
writeFile(tmpdir, "input", input);
return rawExecRecognizer(null,
null,
@@ -221,11 +223,13 @@ public abstract class BaseTest {
String startRuleName,
String input, boolean debug)
{
-		rawGenerateAndBuildRecognizer(grammarFileName,
+		boolean compiled = rawGenerateAndBuildRecognizer(grammarFileName,
grammarStr,
parserName,
lexerName,
debug);
+		Assert.assertTrue(compiled);
+
writeFile(tmpdir, "input", input);
boolean parserBuildsTrees =
grammarStr.indexOf("output=AST")>=0 ||
@@ -281,18 +285,20 @@ public abstract class BaseTest {
boolean debug)
{
// build the parser
-		rawGenerateAndBuildRecognizer(parserGrammarFileName,
+		boolean compiled = rawGenerateAndBuildRecognizer(parserGrammarFileName,
parserGrammarStr,
parserName,
lexerName,
debug);
+		Assert.assertTrue(compiled);

// build the tree parser
-		rawGenerateAndBuildRecognizer(treeParserGrammarFileName,
+		compiled = rawGenerateAndBuildRecognizer(treeParserGrammarFileName,
treeParserGrammarStr,
treeParserName,
lexerName,
debug);
+		Assert.assertTrue(compiled);

writeFile(tmpdir, "input", input);

@@ -327,6 +333,10 @@ public abstract class BaseTest {
//System.out.println(grammarStr);
boolean allIsWell =
antlr(grammarFileName, grammarFileName, grammarStr, debug);
+		if (!allIsWell) {
+			return false;
+		}
+
if ( lexerName!=null ) {
boolean ok;
if ( parserName!=null ) {

