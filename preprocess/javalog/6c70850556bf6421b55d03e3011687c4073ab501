commit 6c70850556bf6421b55d03e3011687c4073ab501
Author:     Ivan Brezina <ibrezina@ibrezina.net>
AuthorDate: Sat Jun 29 21:48:07 2013 +0200
Commit:     Ivan Brezina <ibre5041@ibrezina.net>
CommitDate: Mon Sep 9 11:42:37 2013 +0200

Store token position in Lexer label refs

diff --git a/tool/src/main/resources/org/antlr/codegen/templates/Cpp/Cpp.stg b/tool/src/main/resources/org/antlr/codegen/templates/Cpp/Cpp.stg
index 1ef92a9..f027455 100755
--- a/tool/src/main/resources/org/antlr/codegen/templates/Cpp/Cpp.stg
+++ b/tool/src/main/resources/org/antlr/codegen/templates/Cpp/Cpp.stg
@@ -1685,6 +1685,8 @@ matchSetAndListLabel(s,label,elementIndex,postmatchCode) ::= <<
lexerStringRef(string,label,elementIndex) ::= <<
<if(label)>
ANTLR_MARKER <label>Start = this->getCharIndex();
+ANTLR_UINT32 <label>StartLine<elementIndex> = this->getLine();
+ANTLR_UINT32 <label>StartCharPos<elementIndex> = this->getCharPositionInLine();
this->matchs(<string>);
<checkRuleBacktrackFailure()>
<label> = new CommonTokenType;
@@ -1692,6 +1694,8 @@ this->matchs(<string>);
<label>->set_startIndex( <label>Start);
<label>->set_stopIndex( this->getCharIndex()-1);
<label>->set_input( this->get_input() );
+<label>->set_line( <label>StartLine<elementIndex> );
+<label>->set_charPositionInLine( <label>StartCharPos<elementIndex> );
<else>
this->matchs(<string>);
<checkRuleBacktrackFailure()><\n>
@@ -1754,13 +1758,17 @@ lexerRuleRef(rule,label,args,elementIndex,scope) ::= <<
<if(label)>
{
ANTLR_MARKER <label>Start<elementIndex> = this->getCharIndex();
+    ANTLR_UINT32 <label>StartLine<elementIndex> = this->getLine();
+    ANTLR_UINT32 <label>StartCharPos<elementIndex> = this->getCharPositionInLine();
<if(scope)>m_<scope:delegateName()>-><endif>m<rule.name>(<if(scope)>m_<scope:delegateName()><endif> <if(args)>, <endif><args; separator=", ">);
<checkRuleBacktrackFailure()>
<label> = new CommonTokenType();
<label>->set_type( CommonTokenType::TOKEN_INVALID);
<label>->set_startIndex( <label>Start<elementIndex> );
-    <label>->set_stopIndex( this->getCharIndex()-1);
+    <label>->set_stopIndex( this->getCharIndex()-1 );
<label>->set_input( this->get_input() );
+    <label>->set_line( <label>StartLine<elementIndex> );
+    <label>->set_charPositionInLine( <label>StartCharPos<elementIndex> );
}
<else>
<if(scope)>m_<scope:delegateName()>-><endif>m<rule.name>(<args; separator=", ">);
@@ -1779,6 +1787,8 @@ lexerMatchEOF(label,elementIndex) ::= <<
<if(label)>
{
ANTLR_UINT32 <label>Start<elementIndex>;
+    ANTLR_UINT32 <label>StartLine<elementIndex> = this->getLine();
+    ANTLR_UINT32 <label>StartCharPos<elementIndex> = this->getCharPositionInLine();
<labelType> <label>;
<label>Start<elementIndex> = this->getCharIndex();
this->matchc(ANTLR_CHARSTREAM_EOF);
@@ -1788,6 +1798,8 @@ lexerMatchEOF(label,elementIndex) ::= <<
<label>->set_startIndex(<label>Start<elementIndex>);
<label>->set_stopIndex(this->getCharIndex()-1);
<label>->set_input( this->get_input() );
+    <label>->set_line( <label>StartLine<elementIndex> );
+    <label>->set_charPositionInLine( <label>StartCharPos<elementIndex> );
}
<else>
this->matchc(ANTLR_CHARSTREAM_EOF);

