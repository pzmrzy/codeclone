commit 345a3d39aa580b2015a196a475a61cab942e2b62
Author:     Zannick <jokeserver@gmail.com>
AuthorDate: Sat Jul 28 18:26:03 2012 -0700
Commit:     Zannick <jokeserver@gmail.com>
CommitDate: Sat Jul 28 18:26:03 2012 -0700

Fix handling of syntactic predicate fragments.

- Don't use the base templates for synpred fragments.
This fixes issue 29.
- Don't handle backtracking stuff in synpred fragments.
This fixes a related issue that arose due to the fix above.
- Clean up some redundant definitions and newlines.

diff --git a/tool/src/main/java/org/antlr/codegen/PythonTarget.java b/tool/src/main/java/org/antlr/codegen/PythonTarget.java
index bb9f698..9df18c2 100644
--- a/tool/src/main/java/org/antlr/codegen/PythonTarget.java
+++ b/tool/src/main/java/org/antlr/codegen/PythonTarget.java
@@ -42,6 +42,10 @@ import java.util.ArrayList;
import java.util.List;

public class PythonTarget extends Target {
+    @Override
+    public boolean useBaseTemplatesForSynPredFragments() {
+        return false;
+    }
/** Target must be able to override the labels used for token types */
@Override
public String getTokenTypeAsTargetLabel(CodeGenerator generator,
diff --git a/tool/src/main/resources/org/antlr/codegen/templates/Python/ASTParser.stg b/tool/src/main/resources/org/antlr/codegen/templates/Python/ASTParser.stg
index 64ffa68..a77d888 100644
--- a/tool/src/main/resources/org/antlr/codegen/templates/Python/ASTParser.stg
+++ b/tool/src/main/resources/org/antlr/codegen/templates/Python/ASTParser.stg
@@ -39,12 +39,14 @@
*/

finishedBacktracking(block) ::= <<
+<if(!ruleDescriptor.isSynPred)>
<if(backtracking)>
if <actions.(actionScope).synpredgate>:
<block>
<else>
<block>
<endif>
+<endif>
>>

@ruleBody.setErrorReturnValue() ::= <<
diff --git a/tool/src/main/resources/org/antlr/codegen/templates/Python/Python.stg b/tool/src/main/resources/org/antlr/codegen/templates/Python/Python.stg
index 8f1436c..7cd278d 100644
--- a/tool/src/main/resources/org/antlr/codegen/templates/Python/Python.stg
+++ b/tool/src/main/resources/org/antlr/codegen/templates/Python/Python.stg
@@ -509,9 +509,7 @@ ruleLabelDefs() ::= <<
ruleDescriptor.wildcardTreeListLabels]
:{it | list_<it.label.text> = None}; separator="\n"
>
-<[ruleDescriptor.ruleLabels,ruleDescriptor.ruleListLabels]
-    :ruleLabelDef(); separator="\n"
->
+<ruleDescriptor.ruleLabels:ruleLabelDef(); separator="\n">
<ruleDescriptor.ruleListLabels:{it | <it.label.text> = None}; separator="\n">
>>

@@ -1273,7 +1271,7 @@ delegateName(d) ::= <<

/** Define a rule label including default value */
ruleLabelDef(label) ::= <<
-<label.label.text> = None<\n>
+<label.label.text> = None
>>

returnStructName(r) ::= "<r.name>_return"

