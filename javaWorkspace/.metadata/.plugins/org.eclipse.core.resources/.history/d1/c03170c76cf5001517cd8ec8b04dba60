package xiao.clone.detect.util;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.eclipse.jdt.core.ToolFactory;
import org.eclipse.jdt.core.compiler.IScanner;
import org.eclipse.jdt.core.compiler.ITerminalSymbols;
import org.eclipse.jdt.core.compiler.InvalidInputException;

public class Tokenizer {
	
	public List<Token> tokenize(String src) throws InvalidInputException{
		IScanner is = ToolFactory.createScanner(false, false, false, false);
		is.setSource(src.toCharArray());
		List<Token> tokenList = new ArrayList<Token>();
		
		int tNum = is.getNextToken();
		System.out.println(is.getRawTokenSource());
		while(tNum != ITerminalSymbols.TokenNameEOF){
			tokenList.add(new Token(new String(is.getRawTokenSource()), tNum));
			tNum = is.getNextToken();
		}
		return this.normalizeToken(tokenList);
	}
	
	private List<Token> normalizeToken(List<Token> tokenList){
		for(Token token : tokenList){
			String word = token.getRawValue();
			word = word.replaceAll(
				      String.format("%s|%s|%s",
				         "(?<=[A-Z])(?=[A-Z][a-z])",
				         "(?<=[^A-Z])(?=[A-Z])",
				         "(?<=[A-Za-z])(?=[^A-Za-z])"), " ").toLowerCase();
			token.setRawValue(word);
		}
		return tokenList;
	}
	
	public static void main(String[] arg){
		String[] tests = {
		        "lowercase",        // [lowercase]
		        "Class",            // [Class]
		        "MyClass",          // [My Class]
		        "HTML",             // [HTML]
		        "PDFLoader",        // [PDF Loader]
		        "AString",          // [A String]
		        "SimpleXMLParser",  // [Simple XML Parser]
		        "GL11Version",      // [GL 11 Version]
		        "99Bottles",        // [99 Bottles]
		        "May5",             // [May 5]
		        "BFG9000",          // [BFG 9000]
		    };
		    for (String test : tests) {
		        System.out.println("[" + test.replaceAll(
					      String.format("%s|%s|%s",
							         "(?<=[A-Z])(?=[A-Z][a-z])",
							         "(?<=[^A-Z])(?=[A-Z])",
							         "(?<=[A-Za-z])(?=[^A-Za-z])"), " ").toLowerCase() + "]");
		    }
	}
}
